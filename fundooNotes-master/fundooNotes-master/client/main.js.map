{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/add-collaborator/add-collaborator.component.html","webpack:///./src/app/component/add-collaborator/add-collaborator.component.scss","webpack:///./src/app/component/add-collaborator/add-collaborator.component.ts","webpack:///./src/app/component/add-image/add-image.component.html","webpack:///./src/app/component/add-image/add-image.component.scss","webpack:///./src/app/component/add-image/add-image.component.ts","webpack:///./src/app/component/archive/archive.component.html","webpack:///./src/app/component/archive/archive.component.scss","webpack:///./src/app/component/archive/archive.component.ts","webpack:///./src/app/component/card-details/card-details.component.html","webpack:///./src/app/component/card-details/card-details.component.scss","webpack:///./src/app/component/card-details/card-details.component.ts","webpack:///./src/app/component/card-display/card-display.component.html","webpack:///./src/app/component/card-display/card-display.component.scss","webpack:///./src/app/component/card-display/card-display.component.ts","webpack:///./src/app/component/change-color/change-color.component.html","webpack:///./src/app/component/change-color/change-color.component.scss","webpack:///./src/app/component/change-color/change-color.component.ts","webpack:///./src/app/component/collaborator/collaborator.component.html","webpack:///./src/app/component/collaborator/collaborator.component.scss","webpack:///./src/app/component/collaborator/collaborator.component.ts","webpack:///./src/app/component/create-label/create-label.component.html","webpack:///./src/app/component/create-label/create-label.component.scss","webpack:///./src/app/component/create-label/create-label.component.ts","webpack:///./src/app/component/forgotpass/forgotpass.component.html","webpack:///./src/app/component/forgotpass/forgotpass.component.scss","webpack:///./src/app/component/forgotpass/forgotpass.component.ts","webpack:///./src/app/component/image-crop/image-crop.component.html","webpack:///./src/app/component/image-crop/image-crop.component.scss","webpack:///./src/app/component/image-crop/image-crop.component.ts","webpack:///./src/app/component/label/label.component.html","webpack:///./src/app/component/label/label.component.scss","webpack:///./src/app/component/label/label.component.ts","webpack:///./src/app/component/loader/loader.component.html","webpack:///./src/app/component/loader/loader.component.scss","webpack:///./src/app/component/loader/loader.component.ts","webpack:///./src/app/component/login/login.component.html","webpack:///./src/app/component/login/login.component.scss","webpack:///./src/app/component/login/login.component.ts","webpack:///./src/app/component/more/more.component.html","webpack:///./src/app/component/more/more.component.scss","webpack:///./src/app/component/more/more.component.ts","webpack:///./src/app/component/navbar/navbar.component.html","webpack:///./src/app/component/navbar/navbar.component.scss","webpack:///./src/app/component/navbar/navbar.component.ts","webpack:///./src/app/component/notes-add/notes-add.component.html","webpack:///./src/app/component/notes-add/notes-add.component.scss","webpack:///./src/app/component/notes-add/notes-add.component.ts","webpack:///./src/app/component/notes-archive/notes-archive.component.html","webpack:///./src/app/component/notes-archive/notes-archive.component.scss","webpack:///./src/app/component/notes-archive/notes-archive.component.ts","webpack:///./src/app/component/notes-list/notes-list.component.html","webpack:///./src/app/component/notes-list/notes-list.component.scss","webpack:///./src/app/component/notes-list/notes-list.component.ts","webpack:///./src/app/component/notes/notes.component.html","webpack:///./src/app/component/notes/notes.component.scss","webpack:///./src/app/component/notes/notes.component.ts","webpack:///./src/app/component/pin/pin.component.html","webpack:///./src/app/component/pin/pin.component.scss","webpack:///./src/app/component/pin/pin.component.ts","webpack:///./src/app/component/product-card/product-card.component.html","webpack:///./src/app/component/product-card/product-card.component.scss","webpack:///./src/app/component/product-card/product-card.component.ts","webpack:///./src/app/component/question-answer/question-answer.component.html","webpack:///./src/app/component/question-answer/question-answer.component.scss","webpack:///./src/app/component/question-answer/question-answer.component.ts","webpack:///./src/app/component/remind-me/remind-me.component.html","webpack:///./src/app/component/remind-me/remind-me.component.scss","webpack:///./src/app/component/remind-me/remind-me.component.ts","webpack:///./src/app/component/reminder/reminder.component.html","webpack:///./src/app/component/reminder/reminder.component.scss","webpack:///./src/app/component/reminder/reminder.component.ts","webpack:///./src/app/component/reset/reset.component.html","webpack:///./src/app/component/reset/reset.component.scss","webpack:///./src/app/component/reset/reset.component.ts","webpack:///./src/app/component/search-notes/search-notes.component.html","webpack:///./src/app/component/search-notes/search-notes.component.scss","webpack:///./src/app/component/search-notes/search-notes.component.ts","webpack:///./src/app/component/shopping-cart/shopping-cart.component.html","webpack:///./src/app/component/shopping-cart/shopping-cart.component.scss","webpack:///./src/app/component/shopping-cart/shopping-cart.component.ts","webpack:///./src/app/component/signup/signup.component.html","webpack:///./src/app/component/signup/signup.component.scss","webpack:///./src/app/component/signup/signup.component.ts","webpack:///./src/app/component/trash/trash.component.html","webpack:///./src/app/component/trash/trash.component.scss","webpack:///./src/app/component/trash/trash.component.ts","webpack:///./src/app/core/pipe/search-note.pipe.ts","webpack:///./src/app/core/pipe/search.pipe.ts","webpack:///./src/app/core/services/auth/auth.guard.ts","webpack:///./src/app/core/services/data/data.service.ts","webpack:///./src/app/core/services/error_handler/errors-handler.ts","webpack:///./src/app/core/services/firebase/firebase.service.ts","webpack:///./src/app/core/services/http/http.service.ts","webpack:///./src/app/core/services/intercept/intercept.service.ts","webpack:///./src/app/core/services/logger/logger.service.ts","webpack:///./src/app/core/services/notes/notes.service.ts","webpack:///./src/app/core/services/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './component/login/login.component';\nimport { SignupComponent } from './component/signup/signup.component';\nimport { ForgotpassComponent } from './component/forgotpass/forgotpass.component';\nimport { ResetComponent } from './component/reset/reset.component';\nimport { NavbarComponent } from './component/navbar/navbar.component';\nimport { NotesComponent } from './component/notes/notes.component';\nimport { AuthGuard } from \"./core/services/auth/auth.guard\";\nimport { ArchiveComponent} from \"./component/archive/archive.component\";\nimport { TrashComponent } from \"./component/trash/trash.component\";\nimport { LabelComponent } from \"./component/label/label.component\";\nimport { SearchNotesComponent } from './component/search-notes/search-notes.component';\nimport { ReminderComponent } from './component/reminder/reminder.component';\nimport { QuestionAnswerComponent } from './component/question-answer/question-answer.component';\nimport { ProductCardComponent } from './component/product-card/product-card.component';\nimport { ShoppingCartComponent } from './component/shopping-cart/shopping-cart.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo:\"card\", pathMatch: \"full\"},\n  { path: 'card', component: ProductCardComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'forgotpass', component: ForgotpassComponent },\n  { path: 'resetpassword/:id', component: ResetComponent },\n  { path: '', component: NavbarComponent,canActivate:[AuthGuard],children:[\n    { path: 'home', component: NotesComponent },\n    { path: 'QuestionAnswer/:noteId', component: QuestionAnswerComponent },\n    { path: 'archive', component: ArchiveComponent },\n    { path: 'trash', component: TrashComponent },\n    { path: 'label/:label', component: LabelComponent },\n    { path: 'search', component: SearchNotesComponent},\n    { path: 'reminder', component: ReminderComponent},\n    { path: 'shoppingCart', component: ShoppingCartComponent}\n  ]}\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component ,OnInit} from '@angular/core';\nimport { FirebaseService } from './core/services/firebase/firebase.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'fundooNotes: A Notes taking application';\n  constructor(\n    // private appService : FirebaseService\n  ){}\n  ngOnInit(){\n    // this.appService.getPermission()\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorsHandler } from './core/services/error_handler/errors-handler';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ImageCropperModule } from 'ngx-image-cropper';\n\nimport { InterceptService} from './core/services/intercept/intercept.service';\nimport { FirebaseService } from './core/services/firebase/firebase.service';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { BarRatingModule } from \"ngx-bar-rating\";\nimport { SignupComponent } from './component/signup/signup.component';\nimport { ForgotpassComponent } from './component/forgotpass/forgotpass.component';\nimport { ResetComponent } from './component/reset/reset.component';\nimport { NavbarComponent } from './component/navbar/navbar.component';\nimport { NotesComponent } from './component/notes/notes.component';\nimport { RemindMeComponent } from './component/remind-me/remind-me.component';\nimport { NotesAddComponent } from './component/notes-add/notes-add.component';\nimport { ChangeColorComponent } from './component/change-color/change-color.component';\nimport { NotesListComponent } from './component/notes-list/notes-list.component';\nimport { CollaboratorComponent } from './component/collaborator/collaborator.component';\nimport { AddImageComponent } from './component/add-image/add-image.component';\nimport { MoreComponent } from './component/more/more.component';\nimport { NotesArchiveComponent } from './component/notes-archive/notes-archive.component';\nimport { ArchiveComponent } from './component/archive/archive.component';\nimport { TrashComponent } from './component/trash/trash.component';\nimport { CardDisplayComponent } from './component/card-display/card-display.component';\nimport { CreateLabelComponent } from './component/create-label/create-label.component';\nimport { LabelComponent } from './component/label/label.component';\nimport { SearchNotesComponent } from './component/search-notes/search-notes.component';\nimport { PinComponent } from './component/pin/pin.component';\nimport { ImageCropComponent } from './component/image-crop/image-crop.component';\nimport { ReminderComponent } from './component/reminder/reminder.component';\nimport { AddCollaboratorComponent } from './component/add-collaborator/add-collaborator.component';\nimport {RatingModule} from \"ngx-rating/index\";\n\nimport { SearchPipe } from './core/pipe/search.pipe';\nimport { SearchNotePipe } from './core/pipe/search-note.pipe';\n\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\n\nimport {  MatFormFieldModule,\n          MatInputModule,\n          MatButtonModule,\n          MatCardModule,\n          MatIconModule,\n          MatMenuModule,\n          MatDialogModule,\n          MatChipsModule,\n          MatCheckboxModule,\n          MatSnackBarModule,\n          MatToolbarModule,\n          MatSidenavModule,\n          MatDividerModule,\n          MatDatepickerModule,\n          MatSelectModule,\n          MatNativeDateModule,\n          MatTooltipModule,\n          MatTabsModule,\n          MatStepperModule,\n          MatProgressBarModule\n        } from '@angular/material';\nimport { QuestionAnswerComponent } from './component/question-answer/question-answer.component';\nimport { ProductCardComponent } from './component/product-card/product-card.component';\nimport { CardDetailsComponent } from './component/card-details/card-details.component';\nimport { ShoppingCartComponent } from './component/shopping-cart/shopping-cart.component';\nimport { LoaderComponent } from './component/loader/loader.component';\n\n\n\n@NgModule({\n  declarations: [ \n                  AppComponent,\n                  LoginComponent,\n                  SignupComponent,\n                  ForgotpassComponent,\n                  ResetComponent,\n                  NavbarComponent,\n                  NotesComponent,\n                  RemindMeComponent,\n                  NotesAddComponent,\n                  ChangeColorComponent,\n                  NotesListComponent,\n                  CollaboratorComponent,\n                  AddImageComponent,\n                  MoreComponent,\n                  NotesArchiveComponent,\n                  ArchiveComponent,\n                  TrashComponent,\n                  CardDisplayComponent,\n                  CreateLabelComponent,\n                  LabelComponent,\n                  SearchPipe,\n                  SearchNotesComponent,\n                  PinComponent,\n                  SearchNotePipe,\n                  ImageCropComponent,\n                  ReminderComponent,\n                  AddCollaboratorComponent,\n                  QuestionAnswerComponent,\n                  ProductCardComponent,\n                  CardDetailsComponent,\n                  ShoppingCartComponent,\n                  LoaderComponent\n  ],\n  \n  imports: [\n            BrowserModule,\n            HttpClientModule,\n            BrowserAnimationsModule,\n            MatFormFieldModule,\n            FormsModule,\n            AppRoutingModule,\n            FlexLayoutModule,\n            MatInputModule,\n            MatButtonModule,\n            MatCardModule,\n            MatIconModule,\n            MatSnackBarModule,\n            MatToolbarModule,\n            MatSidenavModule,\n            MatMenuModule,\n            MatDialogModule,\n            MatChipsModule,\n            MatCheckboxModule,\n            ImageCropperModule,\n            MatTabsModule,\n            MatDividerModule,\n            MatDatepickerModule,         \n            ReactiveFormsModule,\n            MatSelectModule,\n            MatNativeDateModule,\n            MatTooltipModule,\n            RatingModule,\n            BarRatingModule,\n            MatStepperModule,\n            FroalaEditorModule.forRoot(), FroalaViewModule.forRoot(),\n            MatProgressBarModule\n  ],\n\n  providers: [MatDatepickerModule, FirebaseService, InterceptService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: InterceptService,\n      multi: true\n    },\n    {\n      provide: ErrorHandler,\n      useClass: ErrorsHandler,\n    }\n  ],\n  \n  bootstrap: [ AppComponent],\n\n  entryComponents:[\n                    NotesListComponent, \n                    CardDisplayComponent, \n                    CreateLabelComponent,\n                    NavbarComponent ,\n                    ImageCropComponent,\n                    AddCollaboratorComponent,\n                    CollaboratorComponent,\n                    ProductCardComponent,\n                    CardDetailsComponent\n  ]\n\n})\n\nexport class AppModule { }\n","module.exports = \"<abbr title=Collaborator (click)=addCol()><mat-icon>person_add</mat-icon></abbr>\"","module.exports = \"\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> add-collaborator.component.ts \n *\n *  Purpose         : To\n * \n *  @file           : add-collaborator.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n******************************************************************************/\nimport { Component, OnInit, Input, Output, EventEmitter, Inject} from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { CollaboratorComponent } from '../collaborator/collaborator.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport interface DialogData {\n  noteData:object\n}\n@Component({\n  selector: 'app-add-collaborator',\n  templateUrl: './add-collaborator.component.html',\n  styleUrls: ['./add-collaborator.component.scss']\n})\nexport class AddCollaboratorComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  @Input() card;\n  @Output() onChanges=new EventEmitter()\n  @Output() onAddingCol=new EventEmitter()\n\n  constructor( private dialog: MatDialog ) { }\n\n  ngOnInit() {\n  }\n  addCol(){\n    if(this.card){\n      this.addColNote()\n    }\n    else{\n      this.onAddingCol.emit({});\n    }\n  }\n  addColNote(): void {\n    const dialogRef = this.dialog.open(CollaboratorComponent, {\n      width: '600px',\n      maxWidth: 'auto',\n      data: { noteData : this.card }\n    });\n    dialogRef.afterClosed()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(result => {\n      this.onChanges.emit({});\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}","module.exports = \"<abbr title=\\\"Add image\\\"><mat-icon>panorama</mat-icon></abbr>\"","module.exports = \"\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> add-image.component.ts \n *\n *  Purpose         : To add image to the notes\n * \n *  @file           : add-image.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n******************************************************************************/\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-image',\n  templateUrl: './add-image.component.html',\n  styleUrls: ['./add-image.component.scss']\n})\nexport class AddImageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n// {\n  //   \"name\": \"fundoo\",\n  //   \"version\": \"0.0.0\",\n  //   \"scripts\": {\n  //     \"ng\": \"ng\",\n  //     \"start\": \"ng serve\",\n  //     \"build\": \"ng build\",\n  //     \"test\": \"ng test\",\n  //     \"lint\": \"ng lint\",\n  //     \"e2e\": \"ng e2e\"\n  //   },\n  //   \"private\": true,\n  //   \"dependencies\": {\n  //     \"@angular/animations\": \"^6.1.9\",\n  //     \"@angular/cdk\": \"^6.4.7\",\n  //     \"@angular/common\": \"^6.1.0\",\n  //     \"@angular/compiler\": \"^6.1.0\",\n  //     \"@angular/core\": \"^6.1.0\",\n  //     \"@angular/flex-layout\": \"^6.0.0-beta.18\",\n  //     \"@angular/forms\": \"^6.1.0\",\n  //     \"@angular/http\": \"^6.1.0\",\n  //     \"@angular/material\": \"^6.4.7\",\n  //     \"@angular/material-moment-adapter\": \"^7.0.3\",\n  //     \"@angular/platform-browser\": \"^6.1.0\",\n  //     \"@angular/platform-browser-dynamic\": \"^6.1.0\",\n  //     \"@angular/router\": \"^6.1.0\",\n  //     \"angular-moment\": \"^1.3.0\",\n  //     \"core-js\": \"^2.5.4\",\n  //     \"firebase\": \"^5.5.8\",\n  //     \"ngx-image-cropper\": \"^1.2.2\",\n  //     \"rxjs\": \"~6.2.0\",\n  //     \"zone.js\": \"~0.8.26\"\n  //   },\n  //   \"devDependencies\": {\n  //     \"@angular-devkit/build-angular\": \"~0.8.0\",\n  //     \"@angular/cli\": \"~6.2.4\",\n  //     \"@angular/compiler-cli\": \"^6.1.0\",\n  //     \"@angular/language-service\": \"^6.1.0\",\n  //     \"@types/jasmine\": \"~2.8.8\",\n  //     \"@types/jasminewd2\": \"~2.0.3\",\n  //     \"@types/node\": \"~8.9.4\",\n  //     \"codelyzer\": \"~4.3.0\",\n  //     \"jasmine-core\": \"~2.99.1\",\n  //     \"jasmine-spec-reporter\": \"~4.2.1\",\n  //     \"karma\": \"^3.0.0\",\n  //     \"karma-chrome-launcher\": \"^2.2.0\",\n  //     \"karma-coverage-istanbul-reporter\": \"^2.0.4\",\n  //     \"karma-jasmine\": \"^1.1.2\",\n  //     \"karma-jasmine-html-reporter\": \"^0.2.2\",\n  //     \"karma-teamcity-reporter\": \"^1.1.0\",\n  //     \"karma-typescript\": \"^3.0.13\",\n  //     \"protractor\": \"~5.4.0\",\n  //     \"ts-node\": \"~7.0.0\",\n  //     \"tslint\": \"~5.11.0\",\n  //     \"typescript\": \"~2.9.2\"\n  //   }\n  // }\n  ","module.exports = \"<app-notes-list [notes]=archiveList (anyChanges)=\\\"refresh($event)\\\"></app-notes-list>\"","module.exports = \"\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> archive.component.ts \n *\n *  Purpose         : To get the list of archived notes\n * \n *  @file           : archive.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n******************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Note } from '../../core/model/model';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-archive',\n  templateUrl: './archive.component.html',\n  styleUrls: ['./archive.component.scss']\n})\nexport class ArchiveComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor( private archiveService : NotesService ) { }\n\n  private archiveList = [];\n  private notes:Note[] = [];\n\n  ngOnInit() {\n    this.getArchiveList();\n  }\n\n  refresh(event){\n    if(event){\n      this.getArchiveList();\n    }\n  }\n\n /** \n  * \n  * @description getting the archieved note list\n  */\n  getArchiveList(){\n    this.archiveService.getArchivedList()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.notes=response[\"data\"].data;\n      this.archiveList=[];\n      for(let i=this.notes.length;i>0;i--){\n        if(this.notes[i-1][\"isDeleted\"] == false)\n        this.archiveList.push(this.notes[i-1])\n      }\n    },(error) =>{\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n}","module.exports = \"<div class=\\\"navbar\\\" #navbar>\\n    <mat-toolbar-row>\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100%\\\" fxLayoutGap=\\\"5%\\\" class=margin_15>\\n        <div fxFlex=\\\"5%\\\"></div>\\n        <div fxFlex=\\\"70%\\\" class=\\\"packDetails\\\">Advance Pack Details</div>\\n        <div fxFlex=\\\"10%\\\" class=price >${{data.noteData.price}}/month</div>\\n        <div fxFlex=\\\"5%\\\"></div>\\n      </div>\\n    </mat-toolbar-row>\\n  </div>\\n<div class=margin_15>\\n  <mat-tab-group>\\n    <mat-tab label=\\\"Feature1\\\"> Content 1 </mat-tab>\\n    <mat-tab label=\\\"Feature2\\\"> Content 2 </mat-tab>\\n    <mat-tab label=\\\"Feature3\\\"> Content 3 </mat-tab>\\n  </mat-tab-group>\\n</div>\\n<div class=margin_15 fxLayout=row>\\n    <div fxFlex=40% fxLayoutAlign='start'><button class=button1 (click)=remove()>Remove</button></div>\\n    <div fxFlex=60% fxLayoutAlign='end'><button class=button1 (click)=checkout()>Proceed to Checkout</button></div>\\n  </div>\"","module.exports = \".navbar {\\n  background-color: #fb0; }\\n\\n::ng-deep.mat-dialog-container {\\n  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\\n  display: block;\\n  padding: 0px;\\n  border-radius: 5px;\\n  box-sizing: border-box;\\n  overflow: auto;\\n  outline: 0;\\n  width: 100%;\\n  height: 100%;\\n  min-height: inherit;\\n  max-height: inherit;\\n  overflow-x: hidden; }\\n\\n.packDetails {\\n  font-size: 15px;\\n  color: white;\\n  font-weight: 40px; }\\n\\n.price {\\n  font-size: 10px;\\n  color: white;\\n  font-weight: 40px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ProductCardComponent ,DialogData } from '../product-card/product-card.component';\nimport { Router } from '@angular/router';\nimport { DataService } from '../../core/services/data/data.service';\n@Component({\n  selector: 'app-card-details',\n  templateUrl: './card-details.component.html',\n  styleUrls: ['./card-details.component.scss']\n})\nexport class CardDetailsComponent implements OnInit {\n\n  isLinear = false;\n\n  constructor( private dialogRef : MatDialogRef<ProductCardComponent>, private router : Router,\n    @Inject(MAT_DIALOG_DATA) private data : DialogData,private dataService : DataService) {}\n\n  ngOnInit() {\n  }\n\n  remove(){\n    this.dialogRef.close();\n\n  }\n  checkout(){\n    this.dialogRef.close();\n    this.router.navigateByUrl('/signup');\n  }\n}\n","module.exports = \"<!-- *******************************matcard start****************************** -->\\n<mat-card [ngStyle]=\\\"{'background-color':cardColor}\\\">\\n\\n  <app-pin class=pin [card]=data.noteData></app-pin>\\n  <div mat-dialog-title contenteditable=true #title class=input [innerHTML]=data.noteData.title></div>\\n  <div *ngIf=\\\"data.noteData.noteCheckLists.length==0\\\" mat-dialog-content contenteditable=true #description \\n  class=input [innerHTML]=data.noteData.description></div>\\n\\n  <!-- ****************************checkbox start****************************** -->\\n  <div *ngIf=\\\"data.noteData.noteCheckLists.length!=0\\\">\\n    <div *ngFor=\\\"let list of checkList\\\" >\\n      <div *ngIf=\\\"list.isDeleted==false && list.status=='open'\\\" fxLayout=row>\\n      <div fxFlex=10>\\n        <mat-checkbox (click)=check(list,data)></mat-checkbox>\\n      </div>\\n      <div fxFlex=75>\\n        <input placeholder=\\\"List item\\\" class=input [(ngModel)]=\\\"list.itemName\\\"(keydown.enter)=\\\"listitem(list)\\\">\\n      </div>\\n      <div fxFlex=10><mat-icon class=clear (click)=removeCheckList(list)>clear</mat-icon></div>\\n      </div>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <div fxLayout=row class=listInput>\\n      <div fxFlex=10><mat-icon class=clear>add</mat-icon></div>\\n      <input fxFlex=75 placeholder=\\\"List item\\\" #item=ngModel class=input [(ngModel)]=\\\"model.item\\\"\\n      (keydown.enter)=\\\"listAdd()\\\">\\n      <div fxFlex=10><mat-icon class=clear (click)=clear()>clear</mat-icon></div>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <div *ngFor=\\\"let list of checkList\\\" >\\n      <div *ngIf=\\\"list.isDeleted==false && list.status=='close'\\\" fxLayout=row>\\n      <div fxFlex=10>\\n        <mat-checkbox checked=true (click)=check(list,data)></mat-checkbox>\\n      </div>\\n      <div fxFlex=75>\\n        <input placeholder=\\\"List item\\\" class=input2 [(ngModel)]=\\\"list.itemName\\\"(keydown.enter)=\\\"listitem(list)\\\">\\n      </div>\\n      <div fxFlex=10><mat-icon class=clear (click)=removeCheckList(list)>clear</mat-icon></div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- ****************************checkbox end****************************** -->\\n\\n  <!-- ****************************reminder chip list start****************************** -->\\n  <mat-chip-list >\\n    <div *ngFor=\\\"let cardData of reminders\\\" >\\n      <mat-chip class=delchip *ngIf=\\\"checkDate(cardData)==1 || checkDate(cardData)==4 \\\" \\n      (click)=showReminder(data.id) (click)=reminderClick()>\\n        <mat-icon>access_time</mat-icon>\\n        <del *ngIf=\\\"checkDate(cardData)==1\\\">{{date}}</del>\\n        <del *ngIf=\\\"checkDate(cardData)==4\\\">{{cardData| date:medium}}</del>\\n        <mat-icon (click)=removeReminder(data.noteData.id)>cancel</mat-icon>\\n      </mat-chip>\\n      <mat-chip class=chip *ngIf=\\\"checkDate(cardData)==2 || checkDate(cardData)==3\\\">\\n        <mat-icon>access_time</mat-icon>\\n        <div *ngIf=\\\"checkDate(cardData)==2\\\">{{date}}</div>\\n        <div *ngIf=\\\"checkDate(cardData)==3\\\">{{cardData| date:'medium'}}</div>\\n\\n        <mat-icon (click)=removeReminder(data.noteData.id)>cancel</mat-icon>\\n      </mat-chip>\\n    </div>\\n  </mat-chip-list>\\n  <!-- ****************************reminder chip list end****************************** -->\\n\\n  <!-- ****************************label chip list start****************************** -->\\n  <div class=margin_top5>\\n  <mat-chip-list>\\n    <span *ngFor=\\\"let cardData of labels\\\" >\\n      <mat-chip class=chip *ngIf=\\\"cardData.isDeleted==false\\\">\\n        <span class=label>{{cardData.label}}</span><mat-icon *ngIf=!isDelete \\n        (click)=removeLabel(cardData.id,data.noteData.id)>cancel</mat-icon>\\n      </mat-chip>\\n    </span>\\n  </mat-chip-list></div>\\n  <!-- ****************************label chip list end****************************** -->\\n\\n  <!-- **************************collaborators start************************* -->\\n  <div class=margin_top5>\\n    <span *ngFor=\\\"let cardData of data.noteData.collaborators\\\" >\\n      <button mat-mini-fab>{{cardData.firstName[0].toUpperCase()}}</button>\\n    </span>\\n  </div>\\n  <!-- ***************************collaborators end*************************** -->\\n\\n  <!-- *******************************maticon start********************************** -->\\n  <div class=icondiv>\\n    <app-remind-me *ngIf=!isDelete class=iconButton [card]=data.noteData \\n    (onChanges)=reminderChanges($event)></app-remind-me>\\n    <app-add-collaborator *ngIf=!isDelete class=iconButton [card]=data.noteData \\n    (onChanges)=\\\"entry($event)\\\"></app-add-collaborator>\\n    <app-change-color *ngIf=!isDelete class=iconButton [card]=data.noteData \\n    (onChangeColor)=colorChanges($event)></app-change-color>\\n    <app-add-image *ngIf=!isDelete class=iconButton></app-add-image>\\n    <app-notes-archive [card]=data.noteData (onArchiveEntry)=\\\"archive($event)\\\" \\n    *ngIf=!isDelete class=iconButton></app-notes-archive>\\n    <app-more class=iconButton [card]=data.noteData (popupChange)=\\\"labelChanges($event)\\\"></app-more>\\n    <button *ngIf=!isDelete mat-button  class=pin (click)=click()>Close</button>\\n    </div>\\n  <!-- *********************************maticon end****************************** -->\\n\\n</mat-card>\\n<!-- *********************************matcard end****************************** -->\"","module.exports = \".iconButton {\\n  margin: 3% 2% 3% 3%;\\n  opacity: 0.7; }\\n\\n@media only screen and (max-width: 599px) {\\n  .iconButton {\\n    margin: 3% 3% 3% 0%;\\n    opacity: 0.7; } }\\n\\n.iconButton:hover {\\n  opacity: 1; }\\n\\n::ng-deep.mat-dialog-container {\\n  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\\n  display: block;\\n  padding: 0px;\\n  border-radius: 5px;\\n  box-sizing: border-box;\\n  overflow: auto;\\n  outline: 0;\\n  width: 100%;\\n  height: 100%;\\n  min-height: inherit;\\n  max-height: inherit;\\n  overflow-x: hidden; }\\n\\n.pin {\\n  float: right;\\n  cursor: pointer; }\\n\\n.label {\\n  max-width: 150px;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important;\\n  background-color: transparent; }\\n\\n.delchip {\\n  background-color: rgba(135, 167, 159, 0.465);\\n  color: rgba(0, 0, 0, 0.4); }\\n\\n.chip {\\n  background-color: rgba(135, 167, 159, 0.465); }\\n\\n.input {\\n  border: none;\\n  outline: none;\\n  background-color: transparent;\\n  width: 100%;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important;\\n  width: 100%; }\\n\\n.input2 {\\n  text-decoration: line-through;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important;\\n  border: none;\\n  outline: none;\\n  background-color: transparent;\\n  width: 100%; }\\n\\n.clear {\\n  cursor: pointer; }\\n\\n.close {\\n  margin: 0% 0% 0% 60%; }\\n\\n.icondiv {\\n  margin: 20px 0px 0px 0px; }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> card-display.component.ts \n *\n *  Purpose         : To display and update card details while click on the particular card\n * \n *  @file           : card-display.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n******************************************************************************/\nimport { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { NotesListComponent, DialogData } from '../notes-list/notes-list.component';\nimport { NotesService } from '../../core/services/notes/notes.service'\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LoggerService } from '../../core/services/logger/logger.service';\n\n@Component({\n  selector: 'app-card-display',\n  templateUrl: './card-display.component.html',\n  styleUrls: ['./card-display.component.scss']\n})\nexport class CardDisplayComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();                               \n  @ViewChild('title') title : ElementRef;\n  @ViewChild('description') description : ElementRef ;\n  \n  constructor( private UpdateService : NotesService, private dialogRef : MatDialogRef<NotesListComponent>, \n  @Inject(MAT_DIALOG_DATA) private data : DialogData ) {}\n\n  private model : any={\n    \"item\":\"\"\n  }\n  private labels=this.data.noteData[\"noteLabels\"];\n  private checkList=this.data.noteData[\"noteCheckLists\"];\n  private reminders=this.data.noteData[\"reminder\"];\n  private isDelete=this.data.noteData[\"isDeleted\"];\n  private cardColor=this.data.noteData[\"color\"];\n  private date;\n  private current=new Date();\n  public titleValue='';\n  public descriptionValue='';\n\n  ngOnInit() {\n  }\n\n  /**\n  *\n  * @description displaying the particular note and updating the note\n  */\n  click(): void {\n    this.titleValue=this.title.nativeElement.innerHTML;\n    if(this.titleValue == \"\")\n      return; \n    if(this.data.noteData[\"noteCheckLists\"].length==0){\n      this.descriptionValue=this.description.nativeElement.innerHTML;\n      let body1={\n        \"noteId\":this.data.noteData[\"id\"],\n        \"title\" : this.titleValue,\n        \"description\" : this.descriptionValue\n      }\n      this.UpdateService.updateNotes(body1)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((response) =>{\n      },(error) => {\n      });\n    }\n    this.dialogRef.close();\n  }\n\n /**\n  *\n  * @description remove a lebel from the note while displaying the card\n  */\n  removeLabel(labelId, cardId){\n    this.UpdateService.removeLabelFromNotes(cardId,labelId)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      for(let i=0;i<this.labels.length;i++){\n        if(this.labels[i]['id']==labelId)\n        this.labels.splice(i, 1);\n      }\n    },(error) => {\n    }); \n  }\n\n /**\n  *\n  * @description remove reminder from the note\n  */\n  removeReminder(cardId){\n    let id=[];\n    id.push(cardId)\n    let body={\n      \"noteIdList\":id\n    }\n    this.UpdateService.removeReminder(body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.reminders.splice(0, 1);\n    },(error) => {\n    });\n  }\n\n /**\n  *\n  * @description on reminder change\n  */\n  reminderChanges(event){\n    this.reminders=[];\n    this.reminders.push(event.body);\n    this.checkDate(event.body);\n  }\n\n /**\n  *\n  * @description on color change\n  */\n  colorChanges(event){\n    if(event)\n    this.cardColor=event;\n  }\n\n /**\n  *\n  * @description on adding or removing of label\n  */\n  labelChanges(event){\n    this.labels=[];\n    for(let i=0;i<event.length;i++){\n      this.labels.push(event[i])\n    }\n  }\n  entry(event){\n    LoggerService.log(\"event occu\",event);\n  }\n /**\n  *\n  * @description on note archive\n  */\n  archive(event){\n    if(event)\n    this.dialogRef.close();\n  }\n\n /**\n  *\n  * @description checked or unchecked the note when display the card\n  */\n  check(list){\n    if(list.status==\"open\"){\n      list.status=\"close\";\n    }\n    else{\n      list.status=\"open\";\n    }\n    let body={\n      \"itemName\":list.itemName,\n      \"status\":list.status\n    }\n    this.UpdateService.updateCheckList(list.notesId, list.id, body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n    },(error) => {\n    });\n  }\n\n /**\n  *\n  * @description update the list item \n  */\n  listitem(list){\n    if(list.itemName=='')return false;\n    let body= {\n      \"itemName\":list.itemName,\n      \"status\":list.status\n    }\n    this.UpdateService.updateCheckList(list.notesId, list.id, body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n    },(error) => {\n    });\n  }\n\n /**\n  *\n  * @description remove a checklist\n  */\n  removeCheckList(list){\n    this.UpdateService.removeChecklist(list.notesId,list.id)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      for(let j=0;j<this.checkList.length;j++){\n        if(this.checkList[j]==list)\n        this.checkList.splice(j, 1);\n      }\n    },(error) => {\n    });\n  }\n\n  clear(){\n    this.model.item=\"\";\n  }\n\n /**\n  *\n  * @description adding a checklist\n  */\n  listAdd(){\n    if(this.model.item=='')return false;\n    let body={\n      \"itemName\":this.model.item,\n      \"status\":\"open\"\n    }\n    this.UpdateService.addCheckList( this.data.noteData[\"id\"], body )\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.checkList.push(response[\"data\"].details)\n      this.model.item=\"\";\n    },(error) => {\n    });\n  }\n\n /**\n  *\n  * @description checking the date and printing\n  */\n  checkDate(value){\n    this.date=new Date(value).getUTCHours()\n    let saved=new Date(value).getTime();\n    let current=this.current.getTime();\n    let year=new Date(value).getFullYear();\n    let month=new Date(value).getMonth();\n    let date=new Date(value).getDate();\n    let hr;\n    let min;\n    let ampm='AM';\n    if(saved<current){\n      if((year==this.current.getFullYear())&&(month==this.current.getMonth())&&(date+1==this.current.getDate())){\n        hr=new Date(value).getHours();\n        min=new Date(value).getMinutes();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10)\n          hr='0'+hr;\n        if(new Date(value).getMinutes()<10)\n          min='0'+new Date(value).getMinutes();\n        this.date=\"yesterday \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else if((year==this.current.getFullYear())&&(month==this.current.getMonth()) &&(date==this.current.getDate())){\n        hr=new Date(value).getHours();\n        min=new Date(value).getMinutes();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10)\n          hr='0'+hr;\n        if(new Date(value).getMinutes()<10)\n          min='0'+new Date(value).getMinutes();\n        this.date=\"today \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else{\n        this.date=value\n        return 4;\n      }\n      return 1;\n    }\n    else {\n      if((year==this.current.getFullYear())&&(month==this.current.getMonth()) &&(date==this.current.getDate())){\n        hr=new Date(value).getHours();\n        min=new Date(value).getMinutes();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10)\n          hr='0'+hr;\n        if(new Date(value).getMinutes()<10)\n          min='0'+new Date(value).getMinutes();\n        this.date=\"today \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else if((year==this.current.getFullYear())&&(month==this.current.getMonth())&&(date==this.current.getDate()+1)){\n        hr=new Date(value).getHours();\n        min=new Date(value).getMinutes();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10)\n          hr='0'+hr;\n        if(new Date(value).getMinutes()<10)\n          min='0'+new Date(value).getMinutes();\n        this.date=\"tomorrow \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else {\n        this.date=value;\n        return 3;\n      }\n      return 2;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n}","module.exports = \"<abbr title=Change color><mat-icon [matMenuTriggerFor]=menu>palette</mat-icon></abbr>\\n\\n<!-- ****************************metmenu for color start****************************** -->\\n<mat-menu #menu=matMenu>\\n    <div>\\n        <abbr title=white><span class=border (click)=\\\"colorChange('#FFFFFF')\\\"></span></abbr>\\n        <abbr title=salmon><span class=salmon (click)=\\\"colorChange('#fa8072')\\\"></span></abbr>\\n        <abbr title=orange><span class=orange (click)=\\\"colorChange('#FF9900')\\\"></span></abbr>\\n        <abbr title=yellow><span class=yellow_color (click)=\\\"colorChange('#FFFF64')\\\"></span></abbr>\\n    </div>\\n    <div>\\n        <abbr title=green><span class=green_color (click)=\\\"colorChange('#66FF66')\\\"></span></abbr>\\n        <abbr title=teal><span class=teal (click)=\\\"colorChange('#008080')\\\"></span></abbr>\\n        <abbr title=blue><span class=blue (click)=\\\"colorChange('#2F5FFF')\\\"></span></abbr>\\n        <abbr title=aqua><span class=aqua (click)=\\\"colorChange('#00FFFF')\\\"></span></abbr>\\n    </div>\\n    <div>\\n        <abbr title=purple><span class=purple (click)=\\\"colorChange('#9B2C9B')\\\"></span></abbr>\\n        <abbr title=pink><span class=pink (click)=\\\"colorChange('#FFC0CB')\\\"></span></abbr>\\n        <abbr title=red><span class=red (click)=\\\"colorChange('#FF1A06')\\\"></span></abbr>\\n        <abbr title=gray><span class=gray (click)=\\\"colorChange('#808080')\\\"></span></abbr>\\n    </div>\\n</mat-menu>\\n<!-- ****************************metmenu for color end****************************** -->\"","module.exports = \"div {\\n  margin: 2px 2px 2px 2px;\\n  padding: 7px 7px 7px 7px; }\\n\\nspan {\\n  border: none;\\n  border-radius: 50%;\\n  padding: 6px 15px 6px 15px;\\n  margin: 3px 3px 3px 3px; }\\n\\n.blue {\\n  background-color: #0606f8; }\\n\\n.red {\\n  background-color: #d10303; }\\n\\n.green_color {\\n  background-color: #66ff66; }\\n\\n.pink {\\n  background-color: pink; }\\n\\n.aqua {\\n  background-color: cyan; }\\n\\n.purple {\\n  background-color: #9b2c9b; }\\n\\n.orange {\\n  background-color: #fd823b; }\\n\\n.gray {\\n  background-color: gray; }\\n\\n.yellow_color {\\n  background-color: #ffff64; }\\n\\n.teal {\\n  background-color: #5bb4b4; }\\n\\n.salmon {\\n  background-color: salmon; }\\n\\n.border {\\n  border: 1px solid gray; }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> change-color.component.ts \n *\n *  Purpose         : To change the color of the particular note\n * \n *  @file           : change-color.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n******************************************************************************/\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-change-color',\n  templateUrl: './change-color.component.html',\n  styleUrls: ['./change-color.component.scss']\n})\nexport class ChangeColorComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  @Input() card;\n  @Output() onChangeColor = new EventEmitter()\n\n  constructor(private changeColorService : NotesService) { }\n\n  ngOnInit() {\n  }\n  \n  /**\n  * \n  * @description changing the color of particular note\n  */\n  colorChange(color){\n    if(this.card){\n      let id=[];\n      id.push(this.card.id);\n      let body={\n        \"color\":color,\n        \"noteIdList\":id\n      }\n      this.changeColorService.cardColorChange(body)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((response) =>{\n      this.onChangeColor.emit(color)\n      },(error) =>{\n      });\n    }\n    else{\n      this.onChangeColor.emit({color})\n    }\n  }\n  \n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n}\n","module.exports = \"<mat-card class=fontXs>\\n    <div>Collaborators</div>\\n    <mat-divider></mat-divider>\\n    <div class=margin>\\n    <mat-card-header>\\n        <div mat-card-avatar ngStyle.xs=\\\"width:30px;height:30px\\\" [ngStyle]=\\\"{'background-image':'url(' +img+ ')',\\n        'background-size':'cover','height':'40px','width':'40px','border-radius':'50%'}\\\"></div>\\n        <mat-card-title class=fontXs >{{owner.firstName}}  {{owner.lastName}} (Owner)</mat-card-title>\\n        <mat-card-subtitle  class=fontXs>{{owner.email}}</mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-header *ngFor=\\\"let list of collaborators\\\">\\n        <div mat-card-avatar ngStyle.xs=\\\"width:30px;height:30px\\\" [ngStyle]=\\\"{'background-color':'rgba(0, 0, 255,0.3)',\\n        'background-size':'cover','height':'40px','width':'40px','border-radius':'50%','border':'1px solid blue'}\\\">\\n            <div fxLayoutAlign=center class=nameIcon>{{list.firstName[0].toUpperCase()}}</div>\\n        </div>\\n        <div fxFlex=80>\\n            <mat-card-title class=fontXs>{{list.firstName}}  {{list.lastName}}</mat-card-title>\\n            <mat-card-subtitle class=fontXs>{{list.email}}</mat-card-subtitle>\\n        </div>\\n        <div fxFlex=10><mat-icon (click)=removeCol(list) class=clear>clear</mat-icon></div>\\n    </mat-card-header>\\n    <mat-card-header>\\n        <div mat-card-avatar ngStyle.xs=\\\"width:30px;height:30px\\\" class=\\\"addPerson\\\"><mat-icon ngStyle.xs=\\\"padding:1px\\\"\\n        class=icon>person_add</mat-icon></div>\\n        <input class=fontXs placeholder=\\\"person or email to share with\\\" [matMenuTriggerFor]=menu\\n        [(ngModel)]=\\\"searchValue\\\" (keyup)=searchUser()>\\n    </mat-card-header>\\n    </div>\\n    <mat-card-footer class=save>\\n        <div fxLayoutAlign=end><button mat-button (click)=save()>save</button></div>\\n    </mat-card-footer>\\n</mat-card>\\n\\n<mat-menu #menu=matMenu>\\n    <div *ngFor=\\\"let data of userList\\\">\\n    <button class=name (click)=addCol(data) ngStyle.xs=\\\"font-size:10px\\\">\\n    {{data.firstName}} {{data.lastName}} [{{data.email}}]</button>\\n    </div>\\n</mat-menu>\"","module.exports = \"::ng-deep.mat-dialog-container {\\n  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\\n  display: block;\\n  padding: 0px;\\n  border-radius: 5px;\\n  box-sizing: border-box;\\n  overflow: auto;\\n  outline: 0;\\n  width: 100%;\\n  height: 100%;\\n  min-height: inherit;\\n  max-height: inherit;\\n  max-height: 500px; }\\n\\n.addPerson {\\n  border: 1px solid black;\\n  border-radius: 50%;\\n  opacity: 0.4; }\\n\\n.nameIcon {\\n  font-size: 22px;\\n  color: #0606f8;\\n  padding: 7px 0px 0px 0px; }\\n\\n@media only screen and (max-width: 599px) {\\n  .nameIcon {\\n    font-size: 15px;\\n    color: #0606f8;\\n    padding: 7px 0px 0px 0px; } }\\n\\n.clear {\\n  cursor: pointer;\\n  opacity: 0.3; }\\n\\n@media only screen and (max-width: 599px) {\\n  .clear {\\n    cursor: pointer;\\n    opacity: 0.3;\\n    font-size: 15px; } }\\n\\n.clear:hover {\\n  opacity: 0.8; }\\n\\ninput {\\n  border: none;\\n  outline: none;\\n  width: 100%; }\\n\\n::ng-deep.icon[_ngcontent-c24] {\\n  padding: 18% 18% 18% 18%; }\\n\\n.save {\\n  margin-top: 10px;\\n  background-color: #e9e9e9; }\\n\\n.icon {\\n  padding: 6px 6px 6px 6px; }\\n\\n.margin {\\n  margin-top: 15px; }\\n\\n.name {\\n  padding: 5px 5px 5px 5px;\\n  margin: 2px 0px 0px 0px;\\n  border: none;\\n  background-color: transparent;\\n  text-align: left; }\\n\\n@media only screen and (max-width: 599px) {\\n  .fontXs {\\n    font-size: 12px; } }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> collaborator.component.ts \n *\n *  Purpose         : To \n * \n *  @file           : collaborator.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n******************************************************************************/\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar} from '@angular/material';\nimport { AddCollaboratorComponent, DialogData } from '../add-collaborator/add-collaborator.component';\nimport { environment } from '../../../environments/environment';\nimport { UserService } from '../../core/services/user/user.service';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { LoggerService } from '../../core/services/logger/logger.service';\n\n@Component({\n  selector: 'app-collaborator',\n  templateUrl: './collaborator.component.html',\n  styleUrls: ['./collaborator.component.scss']\n})\nexport class CollaboratorComponent implements OnInit {\n\n  constructor( private dialogRef : MatDialogRef<AddCollaboratorComponent>, \n  @Inject(MAT_DIALOG_DATA) private data : DialogData, private collaboratorService : UserService,\n  private CollaboratorService : NotesService, private snackBar : MatSnackBar ) { }\n\n  private searchValue :any;  \n  private userList=[];\n  private search:Boolean=false;\n  private collaborators=[];\n  private owner=this.data.noteData[\"user\"];\n  private img=environment.Url+this.owner.imageUrl;\n  ngOnInit() {\n    if(this.data.noteData){\n\n    for(let i=0;i<this.data.noteData[\"collaborators\"].length;i++){\n      this.collaborators.push(this.data.noteData[\"collaborators\"][i])\n    }\n  }\n  }\n  save(){\n    this.dialogRef.close(\"hiii\");\n  }\n  searchUser(){\n    let body={ 'searchWord':this.searchValue };\n    this.collaboratorService.searchUserList(body)\n    .subscribe((response)=>{\n      this.userList=[];\n      this.userList=response['data'].details;\n    },(error)=>{  \n    });\n  }\n  addCol(data){\n    if(this.data.noteData){\n      for(let i=0;i<this.collaborators.length;i++){\n        if(data.email==this.collaborators[i].email)\n        {\n          this.snackBar.open(\"failed\",\"this email already exist\", {\n            duration: 2000,\n          });\n          return;\n        }\n      }\n      this.CollaboratorService.addColaborator(data,this.data.noteData['id'])\n      .subscribe((response)=>{\n        this.collaborators.push(data);\n      },(error)=>{\n      });\n    }\n    else{\n      this.collaborators.push(data);\n    }\n  }\n\n  removeCol(data){\n    if(this.data.noteData){\n      this.CollaboratorService.removeColaborator(this.data.noteData['id'],data.userId)\n      .subscribe((response)=>{\n        for(let j=0;j<this.collaborators.length;j++){\n          if(data==this.collaborators[j]){\n            this.collaborators.splice(j,1);\n          }\n        }\n      },(error)=>{\n      });\n    }\n    else{\n      for(let j=0;j<this.collaborators.length;j++){\n        if(data==this.collaborators[j]){\n          this.collaborators.splice(j, 1);\n        }\n      }\n    }\n  }\n\n}\n","module.exports = \"<div class=edit_label>Edit label</div>\\n<!-- ****************************label create start****************************** -->\\n<div fxLayout=row fxLayoutGap=5>\\n    <div fxFlex=10><mat-icon class=doneIcon (click)=clear()>clear</mat-icon></div>\\n    <div fxFlex=80><input placeholder=\\\"Create new label\\\" class=textarea [(ngModel)]=\\\"model.labelName\\\" maxlength=40\\n        #labelName=ngModel></div>\\n    <div fxFlex=10><mat-icon class=doneIcon (click)=done()>done</mat-icon></div>\\n</div>\\n<!-- ****************************label create end****************************** -->\\n\\n<!-- ****************************edit label start****************************** -->\\n<div *ngFor=\\\"let data of labelList\\\" > \\n<div fxLayout=row >\\n    <div fxFlex=20 class=icon (click)=delete(data.id)>\\n        <mat-icon  class=labelIcon>label</mat-icon>\\n        <mat-icon class=deleteIcon (click)=delete(data.id) >delete</mat-icon>\\n    </div>\\n    <div fxFlex=80 fxLayout=row *ngIf=\\\"labelId != data.id\\\" (click)=\\\"editIcon(data.id,data.label)\\\">\\n        <div fxFlex=90 class=labelName [innerHTML]=\\\"data.label\\\"></div>\\n        <div fxFlex=10><mat-icon class=\\\"doneIcon\\\" (click)=\\\"editIcon(data.id,data.label)\\\">edit</mat-icon></div>\\n    </div>\\n    <div fxFlex=80 fxLayout=row *ngIf=\\\"labelId == data.id\\\">\\n        <div fxFlex=90><input class=\\\"textarea\\\" [(ngModel)]=\\\"model.newName\\\" #newName=\\\"ngModel\\\" maxlength=40></div>\\n        <div fxFlex=10><mat-icon class=\\\"doneIcon\\\" (click)=update(data.id)>done</mat-icon></div>\\n    </div> \\n</div>\\n</div>\\n<button mat-button class=done (click)=add()>Done</button>\\n<!-- ****************************edit label end****************************** -->\"","module.exports = \".textarea {\\n  outline: none;\\n  border: none;\\n  width: 100%; }\\n\\n.labelName {\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important; }\\n\\n.textarea:empty:before {\\n  content: attr(data-text);\\n  opacity: 0.5;\\n  font-size: 12px; }\\n\\n.doneIcon {\\n  font-size: 18px;\\n  opacity: 0.7;\\n  cursor: pointer; }\\n\\n.icon:hover .labelIcon,\\n.icon .deleteIcon {\\n  display: none;\\n  cursor: pointer; }\\n\\n.icon:hover .deleteIcon,\\n.icon .labelIcon {\\n  display: inline;\\n  font-size: 20px;\\n  opacity: 0.7;\\n  cursor: pointer; }\\n\\n.done {\\n  float: right;\\n  cursor: pointer; }\\n\\n.edit_label {\\n  margin: 0px 0px 3px 5px; }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> create-label.component.ts \n *\n *  Purpose         : To create label\n * \n *  @file           : create-label.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n******************************************************************************/\nimport { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { NavbarComponent } from '../navbar/navbar.component';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Label } from '../../core/model/model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-create-label',\n  templateUrl: './create-label.component.html',\n  styleUrls: ['./create-label.component.scss']\n})\nexport class CreateLabelComponent implements OnInit {\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  public model : any = {\n    \"labelName\":\"\",\n    \"newName\":\"\"\n  }\n  constructor( private dialogRef : MatDialogRef<NavbarComponent>, private NoteAddService : NotesService ) { }\n\n  private label:Label[] = [];\n  private id=localStorage.getItem(\"fundooUserId\");\n  private labelList=[];\n  private labelId;\n\n  ngOnInit() {\n    this.show();\n  }\n  editIcon(id,labelNew){\n    this.labelId=[];\n    this.labelId=id;\n    this.model.newName=labelNew;\n  }\n\n  add(){\n    this.done();\n    this.dialogRef.close();\n  }\n  \n  clear(){\n    this.model.labelName=null;\n  }\n\n /**\n  * \n  * @description getting the list of labels\n  */\n  show(){\n    this.NoteAddService.showNoteLabels()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.label=response[\"data\"].details\n      this.labelList=[];\n      this.labelList=this.label;\n    },(error) => {\n    });\n  }\n\n /**\n  * \n  * @description deleting a label from list\n  */\n  delete(labelId){\n    this.NoteAddService.deleteLabel(labelId)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.show();\n    },(error) => {\n    });\n  }\n /**\n  * \n  * @description updating a label from list\n  */\n  update(labelId){ \n    let label=this.model.newName;\n    let body={ \"label\":label }\n    this.NoteAddService.updateLabel(labelId,body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.show();\n    },(error) => {\n    });\n  }\n /**\n  * \n  * @description adding a label to list\n  */\n  done(){\n    let label=this.model.labelName;\n    if(label==\"\"){\n      this.dialogRef.close();\n      return false;\n    }\n    let body= {\n      \"label\": label,\n      \"isDeleted\": false,\n      \"userId\":this.id\n    }\n    this.NoteAddService.createLabel(body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.show();\n      this.model.labelName=null;\n    },(error) => {\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n}\n","module.exports = \"<div fxLayout=column fxLayoutGap=\\\"5%\\\">\\n  <div fxFlex.lg=\\\"20%\\\" fxFlex.md=\\\"10%\\\" fxFlex.sm=\\\"5%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n  <div  fxLayout=\\\"row\\\" fxFlex.lg=\\\"70%\\\">\\n    <div fxFlex.lg=\\\"30%\\\" fxFlex.md=\\\"0%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n\\n    <div fxFlex.lg=\\\"40%\\\" fxFlex.md=\\\"50%\\\" fxFlex.sm=\\\"60%\\\" fxFlex.xs=\\\"100%\\\">\\n      \\n      <!-- ****************************matcard start****************************** -->\\n      <mat-card>\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n          <div fxLayoutAlign=\\\"center\\\" class=userPage_header>\\n            <span class=blue>F</span><span class=red>u</span><span class=yellow>n</span>\\n            <span class=blue>d</span><span class=green>o</span><span class=red>o</span>\\n          </div>\\n          <mat-card-title fxLayoutAlign=center><h4>Find your email</h4></mat-card-title>\\n          <mat-card-actions fxLayoutAlign=center>Enter your recovery email</mat-card-actions>\\n            \\n          <mat-form-field class=full_width>\\n            <input matInput placeholder=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\" \\n              [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" #email=\\\"ngModel\\\" required >\\n          </mat-form-field>\\n          <mat-error *ngIf=\\\"f.submitted && email.invalid\\\">\\n            <mat-error *ngIf=\\\"email.errors.required\\\" class=\\\"error\\\">email is required</mat-error>\\n          </mat-error>\\n\\n          <div  fxLayoutAlign=\\\"end\\\"><button mat-button class=mat_button type=\\\"submit\\\" (click)=\\\"reset()\\\">\\n          Next</button></div>\\n          <div class=back (click)=login()>back</div>\\n\\n        </form>\\n      </mat-card>\\n      <!-- ****************************matcard end****************************** -->\\n\\n    </div>\\n\\n    <div fxFlex.lg=\\\"30%\\\" fxFlex.md=\\\"0%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n  </div>\\n  <div fxFlex.lg=\\\"20%\\\" fxFlex.md=\\\"10%\\\" fxFlex.sm=\\\"5%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n</div>\"","module.exports = \"\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> forgotpass.component.ts \n *\n *  Purpose         : To send a request to registered email id if user has forgotten password\n * \n *  @file           : forgotpass.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n******************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { UserService } from '../../core/services/user/user.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgotpass',\n  templateUrl: './forgotpass.component.html',\n  styleUrls: ['./forgotpass.component.scss']\n})\nexport class ForgotpassComponent implements OnInit {\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor(private resetService : UserService, private snackBar: MatSnackBar, private router : Router) { }\n\n  public model : any = {\n    \"email\":\"\"\n  }\n\n  ngOnInit() {\n  }\n\n /**\n  * \n  * @description reset of password\n  */\n  reset(){\n    if(this.model.email.length==0)\n    {\n     /**\n      * \n      * @description checking the email is entered or not\n      */\n      this.snackBar.open(\"failed\",\"please enter email\", {\n        duration: 2000,\n      });\n      return;\n    }\n    let body={\n      \"email\": this.model.email\n    }\n    this.resetService.forgotPassword(body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.snackBar.open(\"check your email\",\"Set password link sent to you registered email\", {\n      duration: 2000,\n      });\n    },\n    (error) => {\n      if(error.status==404){\n        this.snackBar.open(\"failed\",\"email not found\", {\n         duration: 2000,\n        });\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n  login(){\n    this.router.navigateByUrl('/login');\n  }\n}\n","module.exports = \"<image-cropper\\n    [imageChangedEvent]=\\\"data\\\"\\n    [maintainAspectRatio]=\\\"true\\\"\\n    [aspectRatio]=\\\"1 / 1\\\"\\n    [resizeToWidth]=\\\"128\\\"\\n    format=\\\"png\\\"\\n    (imageCropped)=\\\"imageCropped($event)\\\"\\n\\n></image-cropper>\\n<button mat-button (click)=\\\"uploadpic()\\\">Upload</button>\\n\"","module.exports = \"\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> image-crop.component.ts \n *\n *  Purpose         : To crop the selected image and setting as profile picture\n * \n *  @file           : image-crop.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n******************************************************************************/\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { UserService } from '../../core/services/user/user.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-image-crop',\n  templateUrl: './image-crop.component.html',\n  styleUrls: ['./image-crop.component.scss']\n})\nexport class ImageCropComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor( private NavbarServiceUser : UserService, private dialogRef : MatDialogRef<ImageCropComponent>, \n  @Inject(MAT_DIALOG_DATA) private data : any ) { }\n  \n  private apiImage;\n  private croppedImage;\n\n  ngOnInit() {\n  }\n\n  imageCropped(event){\n   this.croppedImage=event\n  }\n\n /**\n  * \n  * @description uploading the image to profile\n  */\n  uploadpic(){\n    this.apiImage=this.croppedImage.file\n    const uploadData = new FormData();\n    uploadData.append('file', this.apiImage, this.apiImage.name);\n    this.NavbarServiceUser.addProfileImage(uploadData)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(res => {\n      this.dialogRef.close();\n      localStorage.setItem(\"fundooUserImage\",res['status'].imageUrl);\n    }, error => {\n    })\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","module.exports = \"<app-notes-add (onNewEntry)=refresh($event)></app-notes-add>\\n<app-notes-list  *ngIf=\\\"spinnerValue==false\\\" [notes]=\\\"labelNotesList\\\" (anyChanges)=\\\"refresh($event)\\\"></app-notes-list>\\n<app-loader *ngIf=\\\"spinnerValue==true\\\"></app-loader>\\n\"","module.exports = \"\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> label.component.ts \n *\n *  Purpose         : To send a request to registered email id if user has forgotten password\n * \n *  @file           : label.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n******************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Label } from '../../core/model/model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss']\n})\nexport class LabelComponent implements OnInit {\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor( private labelService : NotesService, private route : ActivatedRoute ) { }\n\n  private label:Label[] = [];\n  private labelNotesList=[];\n  private labelName='';\n  private spinnerValue=true;\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) =>{\n      this.labelName=params['label'];\n      this.labelNotes();\n    })\n  }\n\n  refresh(event){\n    if(event){\n      this.labelNotes();\n    }\n  }\n\n /**\n  * \n  * @description getting the notes according to label\n  */\n  labelNotes(){\n    this.labelService.getNotelistByLabel(this.labelName)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.label=response[\"data\"].data;\n      this.labelNotesList=[];\n      for(let i=this.label.length;i>0;i--){\n        this.labelNotesList.push(this.label[i-1])\n      }\n      console.log(this.labelNotesList);\n      this.spinnerValue=false;\n    },(error) => {\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","module.exports = \"<div class=\\\"sk-fading-circle\\\">\\n    <div class=\\\"sk-circle1 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle2 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle3 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle4 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle5 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle6 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle7 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle8 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle9 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle10 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle11 sk-circle\\\"></div>\\n    <div class=\\\"sk-circle12 sk-circle\\\"></div>\\n  </div>\"","module.exports = \".sk-fading-circle {\\n  margin: 100px auto;\\n  width: 40px;\\n  height: 40px;\\n  position: relative; }\\n\\n.sk-fading-circle .sk-circle {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  left: 0;\\n  top: 0; }\\n\\n.sk-fading-circle .sk-circle:before {\\n  content: '';\\n  display: block;\\n  margin: 0 auto;\\n  width: 15%;\\n  height: 15%;\\n  background-color: #333;\\n  border-radius: 100%;\\n  -webkit-animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;\\n  animation: sk-circleFadeDelay 1.2s infinite ease-in-out both; }\\n\\n.sk-fading-circle .sk-circle2 {\\n  -webkit-transform: rotate(30deg);\\n  transform: rotate(30deg); }\\n\\n.sk-fading-circle .sk-circle3 {\\n  -webkit-transform: rotate(60deg);\\n  transform: rotate(60deg); }\\n\\n.sk-fading-circle .sk-circle4 {\\n  -webkit-transform: rotate(90deg);\\n  transform: rotate(90deg); }\\n\\n.sk-fading-circle .sk-circle5 {\\n  -webkit-transform: rotate(120deg);\\n  transform: rotate(120deg); }\\n\\n.sk-fading-circle .sk-circle6 {\\n  -webkit-transform: rotate(150deg);\\n  transform: rotate(150deg); }\\n\\n.sk-fading-circle .sk-circle7 {\\n  -webkit-transform: rotate(180deg);\\n  transform: rotate(180deg); }\\n\\n.sk-fading-circle .sk-circle8 {\\n  -webkit-transform: rotate(210deg);\\n  transform: rotate(210deg); }\\n\\n.sk-fading-circle .sk-circle9 {\\n  -webkit-transform: rotate(240deg);\\n  transform: rotate(240deg); }\\n\\n.sk-fading-circle .sk-circle10 {\\n  -webkit-transform: rotate(270deg);\\n  transform: rotate(270deg); }\\n\\n.sk-fading-circle .sk-circle11 {\\n  -webkit-transform: rotate(300deg);\\n  transform: rotate(300deg); }\\n\\n.sk-fading-circle .sk-circle12 {\\n  -webkit-transform: rotate(330deg);\\n  transform: rotate(330deg); }\\n\\n.sk-fading-circle .sk-circle2:before {\\n  -webkit-animation-delay: -1.1s;\\n  animation-delay: -1.1s; }\\n\\n.sk-fading-circle .sk-circle3:before {\\n  -webkit-animation-delay: -1s;\\n  animation-delay: -1s; }\\n\\n.sk-fading-circle .sk-circle4:before {\\n  -webkit-animation-delay: -0.9s;\\n  animation-delay: -0.9s; }\\n\\n.sk-fading-circle .sk-circle5:before {\\n  -webkit-animation-delay: -0.8s;\\n  animation-delay: -0.8s; }\\n\\n.sk-fading-circle .sk-circle6:before {\\n  -webkit-animation-delay: -0.7s;\\n  animation-delay: -0.7s; }\\n\\n.sk-fading-circle .sk-circle7:before {\\n  -webkit-animation-delay: -0.6s;\\n  animation-delay: -0.6s; }\\n\\n.sk-fading-circle .sk-circle8:before {\\n  -webkit-animation-delay: -0.5s;\\n  animation-delay: -0.5s; }\\n\\n.sk-fading-circle .sk-circle9:before {\\n  -webkit-animation-delay: -0.4s;\\n  animation-delay: -0.4s; }\\n\\n.sk-fading-circle .sk-circle10:before {\\n  -webkit-animation-delay: -0.3s;\\n  animation-delay: -0.3s; }\\n\\n.sk-fading-circle .sk-circle11:before {\\n  -webkit-animation-delay: -0.2s;\\n  animation-delay: -0.2s; }\\n\\n.sk-fading-circle .sk-circle12:before {\\n  -webkit-animation-delay: -0.1s;\\n  animation-delay: -0.1s; }\\n\\n@-webkit-keyframes sk-circleFadeDelay {\\n  0%, 39%, 100% {\\n    opacity: 0; }\\n  40% {\\n    opacity: 1; } }\\n\\n@keyframes sk-circleFadeDelay {\\n  0%, 39%, 100% {\\n    opacity: 0; }\\n  40% {\\n    opacity: 1; } }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"5%\\\">\\n  <div fxFlex.lg=\\\"15%\\\" fxFlex.md=\\\"10%\\\" fxFlex.sm=\\\"5%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n  <div  fxLayout=\\\"row wrap\\\" fxFlex.lg=\\\"70%\\\" fxLayoutAlign=center>\\n    <!-- <div fxFlex.lg=\\\"15%\\\" fxFlex.md=\\\"0%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.xs=\\\"0%\\\"></div> -->\\n\\n    <div fxFlex.lg=\\\"30%\\\" fxFlex.md=\\\"55%\\\" fxFlex.sm=\\\"100%\\\" fxFlex.xs=\\\"100%\\\">\\n      <!-- ****************************matcard start****************************** -->\\n      <mat-card>\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n          <div fxLayoutAlign=\\\"center\\\" class=userPage_header>\\n            <span class=blue>F</span><span class=red>u</span><span class=yellow>n</span>\\n            <span class=blue>d</span><span class=green>o</span><span class=red>o</span>\\n          </div>\\n          <mat-card-title fxLayoutAlign=center><h3>Sign in</h3></mat-card-title>\\n          <mat-card-title fxLayoutAlign=center>Continue to Fundoo</mat-card-title>\\n\\n          <mat-form-field class=\\\"full_width\\\">\\n            <input matInput placeholder=\\\"Email Id\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\" \\n            [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" #email=\\\"ngModel\\\" required >\\n          </mat-form-field>\\n          <mat-error *ngIf=\\\"f.submitted && email.invalid\\\">\\n            <mat-error *ngIf=\\\"email.errors.required\\\" class=\\\"error\\\">email is required</mat-error>\\n          </mat-error>\\n          \\n          <mat-form-field class=\\\"full_width\\\">\\n            <input  matInput placeholder=\\\"Password\\\" [type]=\\\"hide ? 'text' : 'password'\\\" \\n              [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          </mat-form-field>\\n          <mat-error *ngIf=\\\"f.submitted && password.invalid\\\">\\n            <mat-error *ngIf=\\\"password.errors.required\\\" class=\\\"error\\\">password is required</mat-error>\\n          </mat-error>\\n\\n          <div  fxLayoutAlign=\\\"end\\\"><button mat-button type=\\\"submit\\\" class=mat_button (click)=\\\"login()\\\">Log In</button></div>\\n          <div class=back (click)=forgotPass()>Forgot password?</div>\\n          <div class=back (click)=signup()>Create account</div>\\n\\n        </form>\\n      </mat-card>\\n      <!-- ****************************matcard end****************************** -->\\n    </div>\\n\\n    <div *ngIf=cartId class=gray_background fxFlex.lg=\\\"30%\\\" fxFlex.md=\\\"55%\\\" fxFlex.sm=\\\"80%\\\" fxFlex.xs=\\\"100%\\\" fxLayout=column \\n     fxLayoutGap=\\\"10%\\\">\\n     <div></div>\\n    <div fxLayoutAlign=center>Service</div>\\n    <div fxLayout=row fxLayoutAlign=center fxLayoutGap=\\\"10%\\\" >\\n        <div  *ngFor=\\\"let data of card\\\" class=div>\\n        <mat-card  class=matCard >\\n          \\n          <div fxFlex=column fxLayoutGap=\\\"10%\\\">\\n              <div class=font_20>price: ${{data.price}} per month</div>\\n              <div class=blue>{{data.name}}</div>\\n                  <li class=features>${{data.price}}/month</li>\\n                  <li class=features>{{data.description}}</li>\\n            </div>\\n        </mat-card>\\n        <mat-card [ngClass]=\\\"data.id==cardId ? 'card cardSelected' : 'cardNotSelected card'\\\">\\n            <div *ngIf=\\\"data.id==cardId\\\" class=add>SELECTED</div>\\n            <div *ngIf=\\\"data.id!=cardId\\\" class=add>ADD TO CART</div>\\n        </mat-card>\\n       \\n    </div>\\n    </div>\\n    <div></div>\\n   \\n  </div>\\n\\n  </div>\\n  <div fxFlex.lg=\\\"15%\\\" fxFlex.md=\\\"10%\\\" fxFlex.sm=\\\"5%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n</div>\"","module.exports = \".gray_background {\\n  background-color: #d0d1d1; }\\n\\n@media only screen and (max-width: 599px) {\\n  .card {\\n    width: 124px;\\n    margin-top: -159%;\\n    padding: 169% 0% 6% 16%;\\n    margin-left: 10%;\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex; }\\n  .cardNotSelected {\\n    background-color: #acacac; }\\n  .cardSelected {\\n    background-color: #fb0; }\\n  .matCard {\\n    width: 120px;\\n    z-index: 10;\\n    height: 200px; }\\n  .font_20 {\\n    font-size: 15px; }\\n  .features {\\n    margin-top: 10px;\\n    font-size: 9px; }\\n  .add {\\n    font-size: 10px; } }\\n\\n@media only screen and (min-width: 600px) {\\n  .card {\\n    width: 150px;\\n    margin-top: -117%;\\n    padding: 122% 0% 7% 15%;\\n    margin-left: 10%;\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex; }\\n  .cardNotSelected {\\n    background-color: #acacac; }\\n  .cardSelected {\\n    background-color: #fb0; }\\n  .matCard {\\n    width: 150px;\\n    z-index: 10;\\n    height: 200px; }\\n  .font_25 {\\n    font-size: 25px; }\\n  .font_20 {\\n    font-size: 20px; }\\n  .features {\\n    margin-top: 10px;\\n    font-size: 12px; }\\n  .add {\\n    font-size: 17px; } }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> login.component.ts \n *\n *  Purpose         : To login to Fundoo Account  \n * \n *  @file           : login.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from '../../core/services/user/user.service';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LoggerService } from '../../core/services/logger/logger.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit,OnDestroy {\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor( private loginService : UserService, private snackBar : MatSnackBar, private router : Router ) { }\n\n  public model : any = {\n    \"email\":\"\",\n    \"password\":\"\"\n  }\n  private card=[];\n\n  private cartId=localStorage.getItem(\"productCartId\");\n  private cardId;\n  private productCartId='';\n  ngOnInit() {\n    \n    \n    if(this.cartId){\n      this.productCartId=this.cartId;\n    this.loginService.getCardDetails(this.cartId)\n    .subscribe((response) => {\n      LoggerService.log(\"response\",response);\n      this.cardId=response[\"data\"].product.id\n    },(error)=>{\n    });}\n    this.getService();\n  }\n  getService(){\n    this.loginService.getService()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) => {\n      for(let i=0;i<response[\"data\"].data.length;i++){\n        response[\"data\"].data[i].select=false;\n        this.card.push(response[\"data\"].data[i]);\n      }\n     \n    });\n  }\n /**\n  * \n  * @description user login\n  */\n  login(){\n    if(this.model.email.length==0 || this.model.password.length==0)\n    {\n     /**\n      * \n      * @description checking the email and password are filled\n      */\n      this.snackBar.open(\"login failed\",\"please enter all details\", {\n        duration: 2000,\n      });\n      return;\n    }\n\n   /**\n    * \n    * @description email validation\n    */\n    let regexEmail = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n    if(regexEmail.test(this.model.email) == false){\n      this.snackBar.open(\"failed\",\"invalid email\", {\n        duration: 2000,\n      });\n      return;\n    }\n    let body={\n      \"email\": this.model.email,\n      \"password\":this.model.password,\n      \"cartId\":this.productCartId\n    }\n    this.loginService.userLogin(body)\n    .subscribe((response) =>{\n      localStorage.setItem(\"fundooUserToken\",response[\"id\"]);\n      localStorage.setItem(\"fundooUserId\",response[\"userId\"]);\n      localStorage.setItem(\"fundooUserFirstname\",response[\"firstName\"]);\n      localStorage.setItem(\"fundooUserLastname\",response[\"lastName\"]);\n      localStorage.setItem(\"fundooUserEmail\",response[\"email\"]);\n      localStorage.setItem(\"fundooUserImage\",response[\"imageUrl\"]);\n     /**\n      * \n      * @description if the login is success then it will directly take to dashboard page\n      */\n      let obj={\n        \"pushToken\":localStorage.getItem(\"fundooUserPushToken\")\n      }\n      this.loginService.pushLogin(obj)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((response)=>{\n      },(error)=>{\n      })\n\n      this.router.navigateByUrl('/home');\n    },(error) => {\n      if(error.status==401){\n        this.snackBar.open(\"login failed\",\"wrong email or password\", {\n          duration: 2000,\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n  forgotPass(){\n    this.router.navigateByUrl('/forgotpass');\n  }\n  signup(){\n    this.router.navigateByUrl('/card');\n  }\n}","module.exports = \"<abbr *ngIf=\\\"!isDelete\\\" title=\\\"More\\\"><mat-icon [matMenuTriggerFor]=\\\"menu\\\">more_vert</mat-icon></abbr>\\n\\n<!-- ****************************more menu start****************************** -->\\n<mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item class=\\\"menu\\\" *ngIf=\\\"card\\\" (click)=\\\"deleteNotes()\\\">Delete Note</button>\\n    <button mat-menu-item class=\\\"menu\\\" [matMenuTriggerFor]=\\\"nestedMenu\\\" (click)=\\\"showLabel()\\\">Add label</button>\\n    <button mat-menu-item class=\\\"menu\\\" (click)=\\\"showCheckBox()\\\">Show checkboxes</button>\\n    <button mat-menu-item class=\\\"menu\\\" *ngIf=\\\"card && card.questionAndAnswerNotes.length==0\\\"(click)=\\\"questAns()\\\">Ask a Question</button>\\n    <button mat-menu-item class=\\\"menu\\\" *ngIf=\\\"card && card.questionAndAnswerNotes.length!=0\\\" (click)=\\\"questAns()\\\">Show Question</button>\\n</mat-menu>\\n<!-- ****************************more menu end****************************** -->\\n\\n<!-- ****************************label menu start****************************** -->\\n<mat-menu #nestedMenu=\\\"matMenu\\\">\\n    <div>Label note</div>\\n    <div  fxLayout=\\\"row\\\">    \\n        <div fxFlex=80%>\\n            <input type=text class=input placeholder=\\\"Enter label name\\\" [(ngModel)]=\\\"searchLabel\\\" \\n            (click)=$event.stopPropagation()>\\n        </div>\\n        <div fxFlex=10% ><mat-icon><small>search</small></mat-icon></div>\\n    </div>\\n    <div>\\n        <div fxLayout=row *ngFor=\\\"let data of labelList | search: searchLabel\\\">\\n            <div fxFlex=10%>\\n                <input *ngIf=\\\"data.isChecked==true\\\" type=\\\"checkbox\\\" (click)=removeLabel(data) \\n                (click)=$event.stopPropagation() checked>\\n                <input *ngIf=\\\"data.isChecked==false\\\" type=\\\"checkbox\\\" (click)=addLabel(data) \\n                (click)=$event.stopPropagation() unchecked>\\n            </div>\\n            <div fxFlex=80% class=label>{{data.label}}</div>\\n        </div>\\n    </div>\\n</mat-menu>\\n<!-- ****************************label menu end****************************** -->\\n\\n<abbr *ngIf=\\\"isDelete\\\" title=\\\"More\\\"><mat-icon [matMenuTriggerFor]=\\\"menuDelete\\\">more_vert</mat-icon></abbr>\\n<!-- ****************************trashed more menu end****************************** -->\\n<mat-menu #menuDelete=\\\"matMenu\\\">\\n    <button mat-menu-item class=\\\"menu\\\" (click)=deleteForver()>Delete Forever</button>\\n    <button mat-menu-item class=\\\"menu\\\" (click)=deleteNotes()>Restore</button>\\n</mat-menu>\\n<!-- ****************************trashed more menu end****************************** -->\"","module.exports = \".menu:hover {\\n  background-color: #dbdbdb; }\\n\\n.input {\\n  outline: none;\\n  border: none; }\\n\\n.label {\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important; }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> more.component.ts \n *\n *  Purpose         :   \n * \n *  @file           : more.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { MatSnackBar } from '@angular/material';\nimport { Label } from '../../core/model/model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LoggerService } from '../../core/services/logger/logger.service';\nimport { Router } from '@angular/router';\nimport { DataService } from '../../core/services/data/data.service';\n\n@Component({\n  selector: 'app-more',\n  templateUrl: './more.component.html',\n  styleUrls: ['./more.component.scss'],\n  outputs: ['onDeleteEntry']\n})\nexport class MoreComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  @Input() card;\n  @Output() onChanges = new EventEmitter(); \n  @Output() popupChange = new EventEmitter(); \n  @Output() showCheckbox = new EventEmitter();\n\n  constructor( private MoreService : NotesService, private snackBar : MatSnackBar,private router : Router,\n    private data: DataService) { }\n\n  private labelList;\n  private labelArray=[];\n  private Array=[];\n  private isDelete=false;\n  private string=\"Note trashed\";\n  private label:Label[] = [];\n\n  ngOnInit() {\n    if(this.card){\n      this.isDelete=this.card.isDeleted;\n      if(this.card.isDeleted==true)this.string=\"Note Restored\"\n    }\n  }\n\n /**\n  * \n  * @description deleting the selecting note\n  */\n deleteNotes(){\n    if(this.card){\n    let id=[];\n    id.push(this.card.id);\n    let body={\n      \"isDeleted\":!this.isDelete,\n      \"noteIdList\":id\n    }\n    this.MoreService.deleteNote(body)\n    .subscribe((response) =>{\n      this.onChanges.emit({})\n      this.snackBar.open(this.string,\"undo\", {\n        duration: 2000,\n      });\n      },(error) =>{\n    });}\n  }\n\n /**\n  * \n  * @description getting label list\n  */\n  showLabel(){\n    this.labelArray=[];\n    this.Array=[];\n    this.MoreService.showNoteLabels()\n    .subscribe((response) =>{\n      this.label=response[\"data\"].details;\n      this.labelList=[];\n      this.labelList=this.label;\n      for(let i=0;i<this.labelList.length;i++){\n        this.labelList[i].isChecked=false;\n        if(this.card){\n        for(let j=0;j<this.card.noteLabels.length;j++){\n          if(this.labelList[i].label==this.card.noteLabels[j].label){\n            this.Array.push(this.labelList[i])\n            this.labelList[i].isChecked=true;}\n        }\n      }}\n    },(error) => {\n    });\n  }\n\n /**\n  * \n  * @description adding label to note\n  */\n  addLabel(label){\n    if(this.card){\n    this.MoreService.addLabelToNotes(this.card.id,label.id)\n    .subscribe((response) =>{\n      this.onChanges.emit({})\n      // for(let i=0;i<this.Array.length;i++){\n      //   if(this.Array[i].id==label.id){\n      //     this.Array.splice(i, 1);\n      //     this.popupChange.emit(this.Array)\n      //     return;\n      //   }\n      // }\n      this.Array.push(label);\n      this.popupChange.emit(this.Array)\n    },(error) => {\n    });}\n    else{\n      for(let i=0;i<this.labelArray.length;i++){\n        if(this.labelArray[i].id==label.id){\n          this.labelArray.splice(i, 1);\n          this.onChanges.emit(this.labelArray);\n          return;\n        }\n      }\n      this.labelArray.push(label);\n      this.onChanges.emit(this.labelArray);\n    }\n  }\n\n /**\n  * \n  * @description remove label from list\n  */\n  removeLabel(label){\n    this.MoreService.removeLabelFromNotes(this.card.id,label.id)\n    .subscribe((response) => {\n      this.onChanges.emit({})\n      for(let i=0;i<this.Array.length;i++){\n        if(this.Array[i].id==label.id){\n          this.Array.splice(i, 1);\n          this.popupChange.emit(this.Array)\n          return;\n        }\n      }\n      this.Array.push(label);\n      this.popupChange.emit(this.Array)\n    },(error) => {\n    }); \n  }\n\n  showCheckBox(){\n    this.showCheckbox.emit({});\n  }\n\n /**\n  * \n  * @description deleting a note permanently\n  */\n  deleteForver(){\n    if(this.card){\n      let id=[];\n      id.push(this.card.id);\n      let body={ \"noteIdList\":id }\n      this.MoreService.permanentDeleteNote(body)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((response) => {\n        this.onChanges.emit({})\n        },(error) =>{\n      });\n    }\n  }\n\n  questAns(){\n    // LoggerService.log(\"hiii\",this.card)\n    this.router.navigateByUrl('/QuestionAnswer/'+this.card.id)\n    this.data.hideView(true);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}","module.exports = \"<!-- ******************************navbar start******************************** -->\\n<div class=\\\"navbar\\\" #navbar>\\n  <mat-toolbar-row>\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxLayoutGap=\\\"0.8%\\\">\\n  <div fxFlex=\\\"5%\\\"></div>\\n  <div fxLayout=\\\"row\\\" fxFlex=\\\"100%\\\" >\\n    <div fxFlex.xs=\\\"0%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.md=\\\"2%\\\" fxFlex.lg=\\\"2%\\\" fxFlex.xl=\\\"2%\\\"></div>\\n          \\n    <div fxFlex.xs=\\\"10%\\\" fxFlex.sm=\\\"5%\\\" fxFlex.md=\\\"5%\\\" fxFlex.lg=\\\"5%\\\" fxFlex.xl=\\\"5%\\\" class=\\\"example-sidenav-content\\\">\\n      <mat-icon (click)=\\\"drawer.toggle()\\\"ngStyle.xs=\\\"font-size:25px\\\"ngStyle.sm=\\\"font-size:25px\\\"\\n      ngStyle.md=\\\"font-size:25px\\\" ngStyle.lg=\\\"font-size:30px\\\" ngStyle.xl=\\\"font-size:50px\\\" class=\\\"button\\\" \\n      matTooltip=\\\"main menu\\\">menu</mat-icon>\\n    </div>\\n\\n    <div fxHide.xs=true fxFlex.sm=\\\"25%\\\" fxFlex.md=\\\"20%\\\" fxFlex.lg=\\\"20%\\\" fxFlex.xl=\\\"20%\\\">\\n      <div *ngIf=!labelShow ngStyle.sm=\\\"font-size:19px\\\" ngStyle.md=\\\"font-size:20px\\\" ngStyle.lg=\\\"font-size:23px\\\" \\n      ngStyle.xl=\\\"font-size:40px;max-width:300px\\\" class=\\\"toolbar\\\">fundooNotes</div>\\n      <div *ngIf=labelShow ngStyle.sm=\\\"font-size:15px\\\" ngStyle.md=\\\"font-size:15px\\\" ngStyle.lg=\\\"font-size:25px\\\" \\n      ngStyle.xl=\\\"font-size:25px\\\" class=\\\"toolbar\\\">{{labelValue}}</div>\\n    </div>\\n\\n    <div fxFlex.xs=\\\"20%\\\" fxHide.sm=true fxHide.md=true fxHide.lg=true fxHide.xl=true>\\n      <div *ngIf=!labelShow ngStyle.xs=\\\"font-size:20px\\\" class=\\\"toolbar\\\">Note</div>\\n      <div *ngIf=labelShow ngStyle.xs=\\\"font-size:20px\\\" class=\\\"toolbar\\\">{{labelValue}}</div>\\n    </div>\\n\\n    <div *ngIf=!showSearchBar fxFlex.xs=40% fxFlex.sm=\\\"50%\\\" fxFlex.md=\\\"50%\\\" fxFlex.lg=\\\"55%\\\" fxFlex.xl=\\\"56%\\\">\\n      <mat-icon *ngIf=!viewHide ngStyle.xl=\\\"font-size:50px\\\" class=\\\"searchbutton\\\" matTooltip=\\\"search\\\" (click)=\\\"showSearchBar=true\\\">\\n      search</mat-icon>\\n      <input *ngIf=!viewHide type=\\\"text\\\" [(ngModel)]=\\\"searchValue\\\" class=\\\"search\\\" (click)=\\\"search()\\\" (keyup)=newMessage() \\n      placeholder=\\\"Search..\\\" ngStyle.md=\\\"font-size:13px\\\" ngStyle.lg=\\\"font-size:16px\\\" \\n      ngStyle.sm=\\\"font-style:10px;margin-top:2px;\\\" \\n      fxHide.xs=true ngStyle.xl=\\\"font-size:30px\\\">\\n    </div>\\n    <div *ngIf=showSearchBar fxFlex.xs=\\\"40%\\\" fxHide.sm=true fxHide.md=true fxHide.lg=true fxHide.xl=true>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"searchValue\\\" class=\\\"search2\\\" (click)=\\\"search()\\\" (keyup)=newMessage() \\n      placeholder=\\\"Search..\\\" (keydown.enter)=\\\"hideSearch()\\\">\\n    </div>\\n    \\n\\n    <div fxFlex.xs=\\\"10%\\\" fxFlex.sm=\\\"5%\\\" fxFlex.md=\\\"5%\\\" fxFlex.lg=\\\"5%\\\" fxFlex.xl=\\\"5%\\\">\\n      <mat-icon class=\\\"button\\\" ngStyle.xs=\\\"font-size:25px\\\" ngStyle.sm=\\\"font-size:25px\\\"\\n      ngStyle.md=\\\"font-size:25px\\\" ngStyle.lg=\\\"font-size:30px\\\" ngStyle.xl=\\\"font-size:50px\\\" \\n      matTooltip=\\\"cart\\\" (click)=\\\"cardPayment()\\\">shopping_cart</mat-icon>\\n    </div>\\n            \\n    <div fxHide.xs=true fxFlex.sm=\\\"5%\\\" fxFlex.md=\\\"5%\\\" fxFlex.lg=\\\"5%\\\" fxFlex.xl=\\\"5%\\\">\\n      <mat-icon *ngIf=\\\"gridView && !viewHide\\\" class=\\\"button\\\"  ngStyle.md=\\\"font-size:25px\\\" \\n      ngStyle.lg=\\\"font-size:30px\\\" ngStyle.xl=\\\"font-size:50px\\\" (click)=view() \\n      matTooltip=\\\"list view\\\">view_stream</mat-icon>\\n      <mat-icon *ngIf=\\\"!gridView && !viewHide\\\"class=\\\"button\\\" ngStyle.md=\\\"font-size:25px\\\" \\n      ngStyle.lg=\\\"font-size:30px\\\" ngStyle.xl=\\\"font-size:50px\\\" (click)=view() \\n      matTooltip=\\\"grid view\\\">view_module</mat-icon>\\n    </div>\\n\\n    <div fxFlex.xs=\\\"10%\\\" fxFlex.sm=\\\"5%\\\" fxFlex.md=\\\"5%\\\" fxFlex.lg=\\\"5%\\\" fxFlex.xl=\\\"5%\\\">\\n      <div [ngStyle]=\\\"{'background-image':'url(' +img+ ')','background-size':'cover','width':'40px','height':'40px'}\\\" \\n      class=img (click)=\\\"account()\\\" ngStyle.xl=\\\"width:60px;height:60px\\\"  ngStyle.xs=\\\"width:30px;height:30px\\\"></div>\\n    </div>\\n\\n    <div fxFlex.xs=\\\"0%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.md=\\\"2%\\\" fxFlex.lg=\\\"2%\\\" fxFlex.xl=\\\"2%\\\"></div>\\n  </div>\\n  <div fxFlex=\\\"5%\\\"></div>\\n  </div>\\n  </mat-toolbar-row>\\n</div>\\n<!-- ******************************navbar end******************************** -->\\n\\n  \\n<!-- ****************************profile start****************************** -->\\n<mat-card class=\\\"account\\\" *ngIf=\\\"signoutCard\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(' +img+ ')','background-size':'cover',\\n    'width':'60px','height':'60px','margin-bottom':'10px'}\\\" class=\\\"img\\\"\\n   (click)=image.click()></div>      \\n    <mat-card-title>{{firstName}} {{lastName}}</mat-card-title>\\n    <mat-card-subtitle>{{email}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-divider ></mat-divider>\\n  <input type=file class=\\\"fileSelect\\\" (change)=profileImage($event) #image>\\n  <div><button  class=\\\"signout\\\" (click)=\\\"logout()\\\">Sign out</button></div>\\n</mat-card>\\n<!-- ****************************profile end*********************************** -->\\n\\n\\n<!-- *****************************menu start************************************* -->\\n<mat-drawer-container class=\\\"example-container\\\"ngStyle.xs=\\\"height:93%\\\"ngStyle.sm=\\\"height:95%\\\"\\nngStyle.md=\\\"height:95%\\\" ngStyle.lg=\\\"height:90%\\\" ngStyle.lg=\\\"height:90%\\\">\\n  <mat-drawer #drawer class=\\\"example-sidenav\\\" [mode]=\\\"width > 960?'side':'over'\\\" closed>\\n    <div class=\\\"side_icon\\\"(click)=\\\"homeClick()\\\" [ngClass]=\\\"home? 'selected' : 'side_icon'\\\">\\n      <img class=margin_left20 src=\\\"../../../assets/img/notes.svg\\\">\\n      <small class=\\\"name\\\">Note</small></div>\\n    <div class=\\\"side_icon\\\" (click)=\\\"reminderClick()\\\" \\n    [ngClass]=\\\"reminder? 'selected' : 'side_icon'\\\">\\n      <img class=margin_left20 src=\\\"../../../assets/img/reminder.svg\\\"><small class=\\\"name\\\">Reminder</small></div>\\n    <mat-divider></mat-divider>    \\n    \\n      <div fxLayout=\\\"row\\\"  class=\\\"edit\\\">\\n        <div fxFlex=10%></div>\\n        <div fxFlex=40% class=\\\"edit\\\"><small>Labels</small></div>\\n        <div fxFlex=40%><button mat-button (click)=createLabel()><small>EDIT</small></button></div>\\n      </div>\\n\\n    <div *ngFor=\\\"let data of labelList\\\" (click)=\\\"labelClick(data)\\\" \\n    [ngClass]=\\\"data==labelclick && labelShowing? 'selected' : 'side_icon'\\\" fxLayout=row class=\\\"side_icon\\\">\\n        <div fxFlex=\\\"10%\\\"></div>\\n        <div fxFlex=\\\"20%\\\"><mat-icon class=label>label</mat-icon></div>\\n        <div fxFlex=\\\"60%\\\" class=label >{{data}}</div>\\n    </div>\\n\\n    <div><button mat-button class=side_icon (click)=createLabel()><mat-icon>add</mat-icon> \\n      <span class=\\\"plus\\\">Create new label</span></button></div>\\n      <mat-divider></mat-divider>\\n\\n    <div class=side_icon (click)=\\\"searchValue=null;archiveClick()\\\"\\n    [ngClass]=\\\"archive? 'selected' : 'side_icon'\\\">\\n      <img class=margin_left20 src=\\\"../../../assets/img/archive.svg\\\"><small class=\\\"name\\\">Archive</small></div>\\n    <div class=side_icon (click)=\\\"searchValue=null;trashClick()\\\"\\n    [ngClass]=\\\"trash? 'selected' : 'side_icon'\\\">\\n      <img class=margin_left20 src=\\\"../../../assets/img/trash.svg\\\"><small class=\\\"name\\\">Trash</small></div>\\n      \\n  </mat-drawer>\\n  <router-outlet></router-outlet>\\n</mat-drawer-container>\\n<!-- ********************************menu end************************************* -->\"","module.exports = \".navbar {\\n  background-color: #fb0;\\n  width: 100%;\\n  height: fixed; }\\n\\n.search {\\n  padding: 2% 4% 2% 9%;\\n  width: 80%;\\n  background-color: #f0b000;\\n  border: none;\\n  margin: -1% -3% -1% -3%;\\n  border-radius: 5px; }\\n\\n@media only screen and (min-width: 970px) and (max-width: 1170px) {\\n  .search {\\n    padding: 2% 4% 2% 9%;\\n    width: 80%;\\n    background-color: #f0b000;\\n    border: none;\\n    margin: 0% -3% -3% -3%;\\n    border-radius: 5px; } }\\n\\n@media only screen and (min-width: 600px) and (max-width: 780px) {\\n  .search {\\n    padding: 3% 4% 2% 9%;\\n    width: 80%;\\n    background-color: #f0b000;\\n    border: none;\\n    margin: 0% -3% -3% 0%;\\n    border-radius: 5px; } }\\n\\n.search2 {\\n  width: 150%;\\n  border: none;\\n  border-radius: 5px;\\n  padding: 10% 0% 5% 0%;\\n  margin: 0% 0% 0% -50%; }\\n\\n.searchbutton {\\n  background-color: transparent;\\n  cursor: pointer;\\n  position: absolute;\\n  opacity: 0.7;\\n  margin: 6px 0px 0px 0px; }\\n\\ninput:focus {\\n  background-color: #ffffff; }\\n\\n.button {\\n  border: none;\\n  cursor: pointer;\\n  margin: 0% 0% 0% 1%;\\n  padding: 10% 20% 15% 10%;\\n  opacity: 0.7; }\\n\\n.button:hover {\\n  background-color: #f0b000;\\n  border-radius: 50%;\\n  padding: 10% 20% 15% 10%; }\\n\\n.example-container {\\n  width: 100%;\\n  background-color: #e8e8e8;\\n  overflow-x: hidden; }\\n\\n.example-sidenav {\\n  background-color: #e8e8e8;\\n  width: 260px;\\n  height: fixed; }\\n\\n.selected {\\n  background-color: #888785;\\n  border-radius: 0px 20px 20px 0px; }\\n\\n.plus {\\n  margin: 0% 0% 0% 10%;\\n  opacity: 0.8; }\\n\\n.name {\\n  margin: 0% 0% 0% 20%;\\n  color: black; }\\n\\n.side_icon {\\n  padding: 2% 2% 2% 2%;\\n  width: 90%;\\n  cursor: pointer;\\n  margin: 10px 0px 10px 0px;\\n  opacity: 0.8;\\n  border-radius: 0px 20px 20px 0px; }\\n\\n.side_icon:hover, .side_label:hover {\\n  background-color: #bbb8b8; }\\n\\n.account {\\n  margin: 0% 0% -100% 0%;\\n  width: 250px;\\n  float: right;\\n  z-index: 10; }\\n\\n.signout {\\n  padding: 3% 3% 3% 3%;\\n  border: 1px solid #c0bebe;\\n  background-color: transparent;\\n  float: right;\\n  margin: 5px 0px 0px 0px; }\\n\\n.toolbar {\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important;\\n  margin: 3% 0% 0% 0%;\\n  max-width: 150px; }\\n\\n.label {\\n  font-weight: 500;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important; }\\n\\n.labelCreate {\\n  width: 95%; }\\n\\n.fileSelect {\\n  display: none; }\\n\\n.img {\\n  border-radius: 50%;\\n  background-color: cyan; }\\n\\n.edit {\\n  margin: 10px 0px 0px 0px; }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> navbar.component.ts \n *\n *  Purpose         : To display navbar\n * \n *  @file           : navbar.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CreateLabelComponent } from '../create-label/create-label.component';\nimport { ImageCropComponent } from '../image-crop/image-crop.component'\nimport { MatDialog } from '@angular/material';\nimport { DataService } from '../../core/services/data/data.service';\nimport { UserService } from '../../core/services/user/user.service';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Label } from '../../core/model/model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport { LoggerService } from '../../core/services/logger/logger.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor( private NavbarServiceUser : UserService, private NavbarServiceNotes : NotesService, \n    private router : Router, private dialog : MatDialog, private data: DataService ) { }\n\n  private label:Label[] = [];\n  private searchValue : any\n  private message:string;\n  \n  private signoutCard:boolean=false;\n  private firstName = localStorage.getItem(\"fundooUserFirstname\");\n  private lastName = localStorage.getItem(\"fundooUserLastname\");\n  private email = localStorage.getItem(\"fundooUserEmail\");\n  private image= localStorage.getItem(\"fundooUserImage\");\n  private width;\n  private labelNotesList = [];\n  private img;\n  private labelList=[];\n  private selectedFile=null;\n  private gridView:boolean=true\n  private labelShow:boolean=false;\n  private showSearchBar:boolean=false;\n  private labelValue=''\n  private labelclick='';\n  \n  private reminder:boolean=false;\n  private archive:boolean=false;\n  private trash:boolean=false;\n  private home:boolean=false;\n  private labelShowing:boolean=false\n  private viewHide=false;\n  ngOnInit() {\n    this.showLabel();\n    this.data.currentMessageViewHide.subscribe(message => this.viewHide = message);\n    this.data.currentMessageSearch.subscribe(message => this.message = message);\n    this.data.currentMessageLabel.subscribe(message =>{ this.message = message;\n      if(this.message!=\"default\"){\n      this.router.navigateByUrl('/label/'+this.message);\n      this.toolbarName(this.message)}\n      });\n    this.img=environment.Url + this.image;\n    this.isLargeScreen();\n    this.routeCheck()\n  }\n  routeCheck(){\n    let temp=this.router.url.split(\"/\").pop();\n    let temp2=this.router.url.split(\"/\")\n    if(temp=='home'){\n      this.homeClick();\n    }\n    else if(temp=='reminder'){\n      this.viewHide=false;\n      this.reminderClick();\n    }\n    else if(temp=='archive'){\n      this.viewHide=false;\n      this.archiveClick();\n    }\n    else if(temp=='trash'){\n      this.viewHide=false;\n      this.trashClick();\n    }\n    else if(temp=='search'){\n      this.viewHide=false;\n      this.homeClick();\n    }\n    else if(temp=='shoppingCart'){\n      this.viewHide=true;\n      this.router.navigateByUrl('/shoppingCart');\n    }\n    else if(temp2[1]=='QuestionAnswer'){\n      this.labelShowing=false;\n      this.viewHide=true;\n    }\n    else{\n      this.labelClick(temp);\n      this.viewHide=false;\n    }\n  }\n\n\n  hideSearch(){\n    this.showSearchBar=false;\n    this.data.changeMessageSearch('');\n  }\n\n  view(){\n    this.data.changeView(this.gridView)\n    this.gridView=!this.gridView;\n  }\n\n  search(){\n    this.router.navigateByUrl('/search');\n  }\n\n  newMessage() {\n    this.data.changeMessageSearch(this.searchValue)\n  }\n\n  /**\n  * \n  * @description displaying the profile\n  */\n  account(){\n    this.signoutCard=!(this.signoutCard);\n  }\n\n\n  cardPayment(){\n    this.router.navigateByUrl('/shoppingCart');\n    this.viewHide=false;\n  }\n  /**\n  * \n  * @description for logging out from account\n  */\n  logout(){\n    this.NavbarServiceUser.userLogout()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      localStorage.removeItem(\"fundooUserToken\");\n      localStorage.removeItem(\"fundooUserId\");\n      localStorage.removeItem(\"fundooUserEmail\");\n      localStorage.removeItem(\"fundooUserFirstname\");\n      localStorage.removeItem(\"fundooUserLastname\");\n      localStorage.removeItem(\"fundooUserImage\");\n      this.router.navigateByUrl('/card');\n    },(error) => {\n    });\n  }\n\n  createLabel(): void {\n    const dialogRef = this.dialog.open(CreateLabelComponent, {\n      width: '300px'\n    });\n\n    dialogRef.afterClosed()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(result => { \n      this.showLabel();\n    });\n  }  \n\n  showLabel(){\n  this.NavbarServiceNotes.showNoteLabels()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.label=response[\"data\"].details;\n      this.labelList=[];\n      for(let i=0;i<this.label.length;i++){\n        this.labelList.push(this.label[i].label);\n      }\n      this.labelList.sort()\n    },(error) => {\n    });\n  }\n\n  profileImage(event):void {\n    const dialogRef = this.dialog.open(ImageCropComponent, {\n      width: '400px',\n      data: event \n    });\n    dialogRef.afterClosed()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(result => {\n    this.img=  environment.Url+localStorage.getItem(\"fundooUserImage\")\n    });\n    \n  }\n\n  isLargeScreen() {\n    this.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n  }\n\n  toolbarName(name){\n    this.labelShow=true\n    this.labelValue=name;\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n  \n  homeClick(){\n    this.viewHide=false;    \n    this.home=true;\n    this.labelShowing=false;\n    this.reminder=this.archive=this.trash=this.labelShowing=false;\n    this.labelShow=false;\n    this.router.navigateByUrl('/home');\n  }\n  reminderClick(){\n    this.viewHide=false;\n    this.router.navigateByUrl('/reminder');\n    this.toolbarName('reminder');\n    this.reminder=true;\n    this.home=this.archive=this.trash=this.labelShowing=false;\n  }\n  archiveClick(){\n    this.viewHide=false;    \n    this.toolbarName('archive');\n    this.archive=true;\n    this.reminder=this.home=this.trash=this.labelShowing=false;\n    this.router.navigateByUrl('/archive');\n  }\n  trashClick(){\n    this.viewHide=false;    \n    this.toolbarName('trash');\n    this.trash=true;\n    this.reminder=this.archive=this.home=this.labelShowing=false;\n    this.router.navigateByUrl('/trash');\n  }\n  labelClick(label){\n    this.viewHide=false;    \n    this.labelShowing=true;\n    this.labelclick=label;\n    this.home=this.reminder=this.archive=this.trash=false;\n    this.router.navigateByUrl('/label/'+label);\n    this.toolbarName(label)\n  }\n}\n","module.exports = \"<!-- ****************************notecard start****************************** -->\\n<div fxLayoutAlign=\\\"center\\\" *ngIf=\\\"noteCard && !collaboratorCard\\\" >\\n  <mat-card class=\\\"card\\\" (click)=\\\"noteCardOpen()\\\" fxFlex.xl=\\\"700px\\\" fxFlex.lg=\\\"600px\\\" fxFlex.md=\\\"500px\\\" \\n  fxFlex.sm=\\\"500px\\\" fxFlex.xs=\\\"95%\\\">\\n    <span>Take a note...</span>\\n    <!-- <mat-icon class=\\\"icon\\\">edit</mat-icon> -->\\n    <mat-icon class=\\\"icon\\\">panorama</mat-icon>\\n    <mat-icon class=\\\"icon\\\" (click)=\\\"list()\\\">view_list</mat-icon>\\n  </mat-card>\\n</div>\\n<!-- ****************************notecard end****************************** -->\\n\\n<!-- ****************************add notecard start****************************** -->\\n<div fxLayoutAlign=\\\"center\\\" *ngIf=\\\"!noteCard && !collaboratorCard\\\">\\n  <mat-card class=\\\"card\\\" [ngStyle]=\\\"{'background-color':cardColor}\\\" fxFlex.xl=\\\"600px\\\" fxFlex.lg=\\\"600px\\\" \\n  fxFlex.md=\\\"500px\\\" fxFlex.sm=\\\"500px\\\" fxFlex.xs=\\\"95%\\\">\\n    <div fxLayout=\\\"row\\\">\\n      <div fxFlex=\\\"90%\\\" data-text=\\\"Title\\\" contenteditable=\\\"true\\\" class=\\\"textarea\\\" [innerHTML]=titleValue\\n      #title></div>\\n      <app-pin class=pin (onChange)=\\\"onPinChange($event)\\\"></app-pin>\\n    </div>\\n\\n    <div *ngIf=!listNote data-text=\\\"Take a Note...\\\" contenteditable=\\\"true\\\" [innerHTML]=descriptionValue \\n    class=\\\"textarea\\\" #description></div>\\n    <!-- ****************************checkbox end****************************** -->    \\n    <div *ngIf=listNote>\\n      <div *ngFor=\\\"let data of listArray\\\" fxLayout=row class=listInput>\\n        <div fxFlex=5%><mat-checkbox (click)=checked(data)></mat-checkbox></div>\\n        <input fxFlex=85% type=text name=input [(ngModel)]=data.itemName class=input>\\n        <div fxFlex=5%><mat-icon class=clear (click)=removeList(data)>clear</mat-icon></div>\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div fxLayout=row class=listInput>\\n        <div fxFlex=5%><mat-icon class=clear>add</mat-icon></div>\\n        <input fxFlex=85% placeholder=\\\"List item\\\" #item=ngModel class=input [(ngModel)]=\\\"model.item\\\"\\n        (keydown.enter)=\\\"listitem()\\\">\\n        <div fxFlex=5%><mat-icon class=clear (click)=clear()>clear</mat-icon></div>\\n      </div>\\n      <mat-divider></mat-divider>\\n    </div>\\n    <!-- ****************************checkbox end****************************** -->    \\n\\n    <!-- ****************************reminder start****************************** -->    \\n   \\n      <mat-chip-list >\\n        <div *ngFor=\\\"let cardData of reminder\\\">\\n          <mat-chip class=label *ngIf=\\\"checkDate(cardData)==2 || checkDate(cardData)==3\\\"(click)=showReminder(data.id)>\\n            <mat-icon>access_time</mat-icon>\\n            <div *ngIf=\\\"checkDate(cardData)==2\\\">{{date}}</div>\\n            <div *ngIf=\\\"checkDate(cardData)==3\\\">{{cardData| date:'medium'}}</div>\\n\\n            <mat-icon class=\\\"cancelIcon\\\" (click)=cancelReminder()>cancel</mat-icon>\\n          </mat-chip>\\n        </div>\\n      </mat-chip-list>\\n    <!-- ****************************reminder end****************************** -->    \\n\\n    <!-- ****************************label start****************************** -->    \\n      <mat-chip-list>\\n        <span *ngFor=\\\"let cardData of labels\\\" >\\n          <mat-chip class=\\\"chip\\\"><span class=labelName>\\n            {{cardData.label}}</span><mat-icon class=\\\"cancelIcon\\\" (click)=cancelLabel(cardData)>cancel</mat-icon>\\n          </mat-chip>\\n        </span>\\n      </mat-chip-list>\\n    <!-- ****************************label end****************************** -->  \\n\\n    <!-- ************************collaborators start**************************** -->    \\n    <div class=margin_top5>\\n      <span *ngFor=\\\"let list of collaborators\\\" >\\n        <button mat-mini-fab>{{list.firstName[0].toUpperCase()}}</button>\\n      </span>\\n    </div>\\n    <!-- *************************collaborators end****************************** -->  \\n\\n    <!-- ****************************icon start****************************** -->    \\n    <div class=\\\"iconsList\\\">\\n      <app-remind-me class=\\\"iconButton\\\" (onChanges)=addRemoveReminder($event)></app-remind-me>\\n      <app-add-collaborator class=\\\"iconButton\\\" (onAddingCol)=\\\"collaboratorCardOpen()\\\"></app-add-collaborator>\\n      <app-change-color class=\\\"iconButton\\\" (onChangeColor)=\\\"onColorChange($event)\\\"></app-change-color>\\n      <app-add-image class=\\\"iconButton\\\"></app-add-image>\\n      <app-notes-archive class=\\\"iconButton\\\" (onArchiveEntry)=\\\"onArchive($event)\\\"></app-notes-archive>\\n      <app-more class=\\\"iconButton\\\" (onChanges)=\\\"addRemoveLabel($event)\\\" (showCheckbox)=showCheckBox($event)></app-more>\\n      <button mat-button class=\\\"pin\\\" (click)=\\\"close()\\\">close</button>\\n    </div>\\n    <!-- ****************************icon end****************************** -->    \\n\\n  </mat-card>\\n</div>\\n<!-- ****************************add notecard end****************************** -->\\n\\n<!-- ****************************collaborators notecard start****************************** -->\\n\\n<div fxLayoutAlign=\\\"center\\\" *ngIf=collaboratorCard>\\n<mat-card class=\\\"card\\\" fxFlex.xl=\\\"700px\\\" fxFlex.lg=\\\"600px\\\" fxFlex.md=\\\"500px\\\" fxFlex.sm=\\\"500px\\\" fxFlex.xs=\\\"95%\\\">\\n  <div>Collaborators</div>\\n  <mat-divider></mat-divider>\\n  <div>\\n      <mat-card-header class=margin_top5>\\n          <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(' +img+ ')','background-size':'cover',\\n          'height':'40px','width':'40px','border-radius':'50%'}\\\" ></div>\\n          <mat-card-title>{{firstName}}  {{lastName}} (Owner)</mat-card-title>\\n          <mat-card-subtitle>{{email}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-header *ngFor=\\\"let list of collaborators\\\">\\n          <div mat-card-avatar [ngStyle]=\\\"{'background-color':'rgba(0, 0, 255,0.3)','background-size':'cover',\\n          'height':'40px','width':'40px','border':'1px solid blue','border-radius':'50%'}\\\">\\n              <div fxLayoutAlign=center class=nameIcon>{{list.firstName[0].toUpperCase()}}</div></div>\\n              <div fxFlex=80>\\n                  <mat-card-title>{{list.firstName}}  {{list.lastName}}</mat-card-title>\\n                  <mat-card-subtitle>{{list.email}}</mat-card-subtitle>\\n              </div>\\n              <div fxFlex=10>\\n                  <mat-icon (click)=removeCol(list) class=clear>clear</mat-icon>\\n              </div>\\n      </mat-card-header>\\n      <mat-card-header>\\n          <div mat-card-avatar class=\\\"addPerson\\\"><mat-icon class=icon2>person_add</mat-icon></div>\\n          <input placeholder=\\\"person or email to share with\\\" [matMenuTriggerFor]=\\\"menu\\\"\\n          [(ngModel)]=\\\"searchValue\\\" (keyup)=\\\"searchUser()\\\">\\n      </mat-card-header>\\n  </div>\\n  <mat-card-footer class=save>\\n      <div fxLayoutAlign=\\\"end\\\">\\n          <button mat-button (click)=save()>save</button>\\n      </div>\\n  </mat-card-footer>\\n   </mat-card>\\n</div>\\n   <mat-menu #menu=\\\"matMenu\\\">\\n      <div *ngFor=\\\"let data of userList\\\">\\n      <button class=name (click)=\\\"addCol(data)\\\">\\n          {{data.firstName}} {{data.lastName}} [{{data.email}}]\\n      </button>\\n      </div>\\n  </mat-menu>\\n<!-- ****************************collaborators notecard end****************************** -->\\n\"","module.exports = \".card {\\n  margin-top: 15px;\\n  border-radius: 7px; }\\n\\n.icon {\\n  float: right;\\n  font-size: 30px;\\n  padding-left: 5%;\\n  cursor: pointer;\\n  opacity: 0.7; }\\n\\n.addPerson {\\n  border: 1px solid black;\\n  border-radius: 50%;\\n  opacity: 0.4; }\\n\\n.icon2 {\\n  padding: 6px;\\n  font-size: 25px; }\\n\\n.listIcon {\\n  font-size: 35px; }\\n\\n.iconsList {\\n  padding-top: 3%; }\\n\\n.iconButton {\\n  opacity: 0.7;\\n  margin: 0% 3% -1% 3%;\\n  cursor: pointer; }\\n\\n.iconButton:hover {\\n  opacity: 0.9; }\\n\\n.textarea {\\n  width: 90%;\\n  outline: none;\\n  margin: 2%; }\\n\\n.textarea:empty:before {\\n  content: attr(data-text);\\n  opacity: 0.5;\\n  font-size: 14px;\\n  width: 60%;\\n  height: 10%;\\n  margin-top: 2px; }\\n\\n.input {\\n  border: none;\\n  outline: none;\\n  background-color: transparent;\\n  width: 100%; }\\n\\n.nameIcon {\\n  font-size: 22px;\\n  color: #0606f8;\\n  padding: 7px 0px 0px 0px;\\n  padding: 7px 0px 0px 0px; }\\n\\n.pin {\\n  float: right;\\n  cursor: pointer; }\\n\\n.listInput {\\n  background-color: transparent; }\\n\\n.chip {\\n  background-color: rgbs(119, 119, 119, 0.2);\\n  max-width: 150px; }\\n\\n.labelName {\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important; }\\n\\n.clear {\\n  cursor: pointer; }\\n\\ninput {\\n  border: none;\\n  outline: none;\\n  width: 100%; }\\n\\n.save {\\n  margin-top: 10px;\\n  background-color: #e9e9e9; }\\n\\n.name {\\n  padding: 5px;\\n  margin-top: 2px;\\n  border: none;\\n  background-color: transparent;\\n  text-align: left; }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> notes-add.component.ts \n *\n *  Purpose         : To adding a new note to list\n * \n *  @file           : notes-add.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport { UserService } from '../../core/services/user/user.service';\nimport { LoggerService } from '../../core/services/logger/logger.service';\n\n@Component({\n  selector: 'app-notes-add',\n  templateUrl: './notes-add.component.html',\n  styleUrls: ['./notes-add.component.scss'],\n  outputs: ['onNewEntry']\n})\nexport class NotesAddComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  @ViewChild('title') title: ElementRef;\n  @ViewChild('description') description: ElementRef ;\n  @ViewChild('listItem') listItem: ElementRef ;\n  @Output() onNewEntry= new EventEmitter()\n\n  constructor( private NoteAddService : NotesService,private noteAddService: UserService ){}\n\n  private noteCard:boolean=true;\n  private isPin:boolean=false;\n  private cardColor=\"#FFFFFF\";\n  private isAchive:boolean=false;\n  private labels=[];\n  private reminder=[];\n  private collaborators=[];\n  private listNote:boolean=false;\n  private listArray=[];\n  private current =new Date();\n  private date;\n  private model : any={\n    \"item\":\"\"\n  }\n  private userList=[];\n  private searchValue :any;  \n  private collaboratorCard=false;\n  private img=environment.Url+localStorage.getItem(\"fundooUserImage\");\n  private firstName=localStorage.getItem(\"fundooUserFirstname\");\n  private lastName=localStorage.getItem(\"fundooUserLastname\");\n  private email=localStorage.getItem(\"fundooUserEmail\");\n  public titleValue='';\n  public descriptionValue='';\n  ngOnInit() {\n  }\n\n  list(){\n    this.listNote=true;\n  }\n /**\n  * \n  * @description adding a checklist\n  */\n  listitem(){\n    if(this.model.item=='') return false;\n    this.listArray.push({\"itemName\":this.model.item,\"status\":\"open\"});\n    this.model.item=\"\";\n  }\n /**\n  * \n  * @description erase the text\n  */\n  clear(){\n    this.model.item=\"\";\n  }\n  checked(value){\n    for(let i=0;i<this.listArray.length;i++){\n      if(value==this.listArray[i]){\n        if(value.status==\"open\"){\n          value.status=\"close\"\n        }\n        else{\n          value.status=\"open\"\n        }\n      }\n    }\n  }\n\n /**\n  * \n  * @description remove a checklist while adding\n  */\n  removeList(value){\n    for(let i=0;i<this.listArray.length;i++){\n      if(value==this.listArray[i]){\n        this.listArray.splice(i, 1);\n      }\n    }\n  }\n\n /**\n  * \n  * @description adding a new note\n  */\n close(){\n    this.noteCard=!(this.noteCard);\n    this.titleValue=this.title.nativeElement.innerHTML;\n    if(this.titleValue == \"\"){\n      this.listArray=[];\n      this.listNote=false;\n      return false;\n    }\n    let labelId=[]\n    for(let i=0;i<this.labels.length;i++){\n      labelId.push(this.labels[i].id)\n    }\n    if(this.listNote==false){\n\n    this.descriptionValue=this.description.nativeElement.innerHTML;\n    let body={\n      \"title\" : this.titleValue,\n      \"description\" : this.descriptionValue,\n      \"isPined\"\t: this.isPin,\n      \"color\":this.cardColor,\n      \"isArchived\":this.isAchive,\n      \"labelIdList\":\tJSON.stringify(labelId),\n      \"reminder\":this.reminder,\n      \"collaberators\":\tJSON.stringify(this.collaborators)\n    }\n\n    this.NoteAddService.addNote(this.getFormUrlEncoded(body))\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.onNewEntry.emit({})\n    },(error) => {\n    });}\n    else{\n      let checkList1=this.listArray;\n      let bodyList={\n        \"title\" : this.titleValue,\n        \"checklist\" : JSON.stringify(checkList1),\n        \"isPined\"\t: this.isPin,\n        \"color\":this.cardColor,\n        \"isArchived\":this.isAchive,\n        \"labelIdList\":\tJSON.stringify(labelId),\n        \"reminder\":this.reminder,\n        \"collaberators\":\tJSON.stringify(this.collaborators)\n      }\n      this.NoteAddService.addNote(this.getFormUrlEncoded(bodyList))\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((response) =>{\n        this.onNewEntry.emit({})\n      },(error) => {\n      });\n      this.listArray=[];\n      this.listNote=false;\n    }\n    this.collaborators=[];\n    this.titleValue='';\n    this.descriptionValue=''\n  }\n\n /**\n  * \n  * @description opening the notecard for adding\n  */\n  noteCardOpen(){\n    this.noteCard=!(this.noteCard);\n    this.isPin=false;\n    this.cardColor=\"#FFFFFF\";\n    this.labels=[];\n    this.reminder=[];\n  }\n\n /**\n  * \n  * @description giving color to new note\n  */\n  onColorChange(event){\n    this.cardColor=event.color;\n  }\n\n /**\n  * \n  * @description archive the new note\n  */\n  onArchive(event){\n    if(event){\n      this.isAchive=true;\n      this.close();\n    }\n  }\n /**\n  * \n  * @description adding or removing of label\n  */\n  addRemoveLabel(event){\n    this.labels=[];\n    this.labels=event;\n  }\n /**\n  * \n  * @description adding or removing of reminder\n  */\n  addRemoveReminder(value){\n    this.reminder=[];\n    this.reminder.push(value)\n    this.date=new Date(value).getUTCHours()\n    let saved=new Date(value).getTime();\n    let current=this.current.getTime();\n    let year=new Date(value).getFullYear();\n    let month=new Date(value).getMonth();\n    let date=new Date(value).getDate();\n    let hr;\n    let min;\n    let ampm='AM';\n    if(saved<current){\n      if((year==this.current.getFullYear())&&(month==this.current.getMonth())&&(date+1==this.current.getDate())){\n        hr=new Date(value).getHours();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10){\n          hr='0'+hr;\n        }\n        if(new Date(value).getMinutes()<10){\n          min='0'+new Date(value).getMinutes();\n        }\n        this.date=\"yesterday \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else{\n        this.date=value\n        return 4;\n      }\n      return 1;\n    }\n    else {\n      if((year==this.current.getFullYear())&&(month==this.current.getMonth()) &&(date==this.current.getDate())){\n        hr=new Date(value).getHours();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10){\n          hr='0'+hr;\n        }\n        if(new Date(value).getMinutes()<10){\n          min='0'+new Date(value).getMinutes();\n        }\n        this.date=\"today \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else if((year==this.current.getFullYear())&&(month==this.current.getMonth())&&(date==this.current.getDate()+1)){\n        hr=new Date(value).getHours();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10){\n          hr='0'+hr;\n        }\n        if(new Date(value).getMinutes()<10){\n          min='0'+new Date(value).getMinutes();\n        }\n        this.date=\"tomorrow \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else {\n        this.date=value;\n        return 3;\n      }\n      return 2;\n    }\n  }\n /**\n  * \n  * @description pin change on note\n  */\n  onPinChange(event){\n    this.isPin=event;\n  }\n  showCheckBox(event){\n    this.list();\n  }\n  cancelReminder(){\n    this.reminder=[];\n  }\n  cancelLabel(data){\n    for(let i=0;i<this.labels.length;i++){\n      if(this.labels[i]==data){\n        this.labels.splice(i, 1);\n      }\n    }\n  }\n  checkDate(value){\n    this.date=new Date(value).getUTCHours()\n    let saved=new Date(value).getTime();\n    let current=this.current.getTime();\n    let year=new Date(value).getFullYear();\n    let month=new Date(value).getMonth();\n    let date=new Date(value).getDate();\n    let hr;\n    let min;\n    let ampm='AM';\n    if(saved<current){\n     return false\n    }\n    else {\n      if((year==this.current.getFullYear())&&(month==this.current.getMonth()) &&(date==this.current.getDate())){\n        hr=new Date(value).getHours();\n        min=new Date(value).getMinutes();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10){\n          hr='0'+hr;\n        }\n        if(new Date(value).getMinutes()<10){\n          min='0'+new Date(value).getMinutes();\n        }\n        this.date=\"today \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else if((year==this.current.getFullYear())&&(month==this.current.getMonth())&&(date==this.current.getDate()+1)){\n        hr=new Date(value).getHours();\n        min=new Date(value).getMinutes();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10){\n          hr='0'+hr;\n        }\n        if(new Date(value).getMinutes()<10){\n          min='0'+new Date(value).getMinutes();\n        }\n        this.date=\"tomorrow \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else {\n        this.date=value;\n        return 3;\n      }\n      return 2;\n    }\n  }\n\n  getFormUrlEncoded(toConvert) {\n    const formBody = [];\n    for (const property in toConvert) {\n      const encodedKey = encodeURIComponent(property);\n      const encodedValue = encodeURIComponent(toConvert[property]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n    return formBody.join('&');\n  }\n\n  searchUser(){\n    let body={ 'searchWord':this.searchValue };\n    this.noteAddService.searchUserList(body)\n    .subscribe((response)=>{\n      this.userList=[];\n      this.userList=response['data'].details;\n    },(error)=>{  \n    });\n  }\n  addCol(value){\n    for(var m=0;m<this.collaborators.length;m++){\n      if(value.email==this.collaborators[m][\"email\"])\n      return;\n    }\n    this.collaborators.push(value);\n  }\n\n  save(){\n    this.collaboratorCard=false;\n  }\n  removeCol(value){\n    for(let j=0;j<this.collaborators.length;j++){\n      if(value.email==this.collaborators[j][\"email\"])\n        this.collaborators.splice(j,1)\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n  collaboratorCardOpen(){\n    this.titleValue=this.title.nativeElement.innerHTML;\n    if(this.listNote==false)\n      this.descriptionValue=this.description.nativeElement.innerHTML;\n    this.collaboratorCard=true\n  }\n\n}\n","module.exports = \"<abbr title=\\\"Archive\\\" *ngIf=\\\"(!isArchive)\\\"><mat-icon (click)=\\\"archive()\\\">archive</mat-icon></abbr>\\n<abbr title=\\\"Unarchive\\\" *ngIf=\\\"(isArchive)\\\"><mat-icon (click)=\\\"archive()\\\">unarchive</mat-icon></abbr>\"","module.exports = \"\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> notes-archive.component.ts \n *\n *  Purpose         : To archive the note\n * \n *  @file           : notes-archive.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-notes-archive',\n  templateUrl: './notes-archive.component.html',\n  styleUrls: ['./notes-archive.component.scss']\n})\nexport class NotesArchiveComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  @Input() card;\n  @Output() onArchiveEntry= new EventEmitter()\n\n  constructor( private noteArchiveService : NotesService, private snackBar : MatSnackBar ) { }\n\n  private isArchive:boolean=false;\n\n  ngOnInit() {\n    if(this.card){\n    if(this.card.isArchived==true){\n      this.isArchive=true;\n    }}\n  }\n\n  /**\n  * \n  * @description archive the particular note\n  */\n  archive(){\n    if(this.card){\n      let id=[];\n      id.push(this.card.id);\n      let string;\n      let body={\n        \"isArchived\":!this.card.isArchived,\n        \"noteIdList\":id\n      }\n      this.noteArchiveService.archiveNote(body)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((response) =>{\n        this.onArchiveEntry.emit({})\n        if(this.card.isArchived==false)  \n          string=\"Note Archived\";\n        else  \n          string=\"Note Unarchived\";\n        this.snackBar.open( string ,\"undo\", {\n          duration: 2000,\n        });\n      },(error) =>{\n      });\n    }\n    else{\n      this.onArchiveEntry.emit({})\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n  \n}\n","module.exports = \"<div fxLayoutAlign=\\\"center\\\" >\\n  <div class=\\\"main\\\" fxLayoutAlign=left fxFlex.xl=\\\"70%\\\" fxFlex.lg=\\\"750px\\\" fxFlex.md=\\\"750px\\\" fxFlex.sm=\\\"500px\\\" \\n  fxFlex.xs=\\\"100%\\\">\\n  <div  class=\\\"pinOthers\\\" *ngIf=\\\"length!=0\\\">{{pin}}</div>\\n\\n    <!-- ****************************matcard start****************************** -->        \\n    <mat-card *ngFor=\\\"let data of notes | searchNote: searchItem\\\" class=\\\"div\\\" [ngClass.xl]=\\\"view ? 'list' : 'grid'\\\" \\n    [ngClass.lg]=\\\"view ? 'list' : 'grid'\\\" [ngClass.md]=\\\"view ? 'list' : 'grid'\\\" [ngClass.sm]=\\\"view ? 'list' : 'grid'\\\"\\n    [ngClass.xs]=\\\"view ? 'list' : 'list'\\\" [ngStyle]=\\\"{'background-color':data.color}\\\">\\n      <app-pin class=pin [card]=data (onChange)=\\\"entry($event)\\\"></app-pin>\\n      <div (click)=\\\"openDialog(data)\\\">\\n        <div class=title [innerHTML]=\\\"data.title\\\"></div>\\n        <div class=description [innerHTML]=\\\"data.description\\\"></div>\\n      </div>\\n\\n      <!-- ****************************checklist start****************************** -->        \\n            \\n        <div *ngFor=\\\"let list of data.noteCheckLists\\\" >\\n          <div *ngIf=\\\"list.status=='open' && list.isDeleted==false\\\"class=checkBox fxLayout='row'>\\n            <mat-checkbox (click)=check(list)></mat-checkbox>\\n            <div>{{list.itemName}}</div>\\n          </div>\\n        </div>\\n        <div *ngFor=\\\"let list of data.noteCheckLists\\\">\\n          <div *ngIf=\\\"list.status=='close' && list.isDeleted==false\\\" class=checkBox fxLayout='row'>\\n            <mat-checkbox class=delCheck  checked=true (click)=check(list)></mat-checkbox>\\n            <del>{{list.itemName}}</del>\\n          </div>\\n        </div>\\n      <!-- ****************************checklist end****************************** -->    \\n\\n      <!-- ****************************reminder start******************************** -->\\n      <mat-chip-list class=paddingTop3>\\n        <span *ngFor=\\\"let cardData of data.reminder\\\" >\\n          <mat-chip class=dellabel *ngIf=\\\"checkDate(cardData)==1 || checkDate(cardData)==4\\\" \\n          (click)=showReminder(data.id)>\\n            <mat-icon>access_time</mat-icon>\\n            <del  *ngIf=\\\"checkDate(cardData)==1\\\">{{date}}</del>\\n            <del  *ngIf=\\\"checkDate(cardData)==4\\\">{{cardData| date:medium}}</del>\\n            <mat-icon (click)=removeReminder(data.id) class=cancelIcon>cancel</mat-icon>\\n          </mat-chip>\\n          <mat-chip class=label *ngIf=\\\"checkDate(cardData)==2 || checkDate(cardData)==3\\\"(click)=showReminder(data.id)>\\n            <mat-icon>access_time</mat-icon>\\n            <div *ngIf=\\\"checkDate(cardData)==2\\\">{{date}}</div>\\n            <div *ngIf=\\\"checkDate(cardData)==3\\\">{{cardData| date:'medium'}}</div>\\n            <mat-icon (click)=removeReminder(data.id) class=cancelIcon>cancel</mat-icon>\\n          </mat-chip>\\n        </span>\\n      <!-- ****************************reminder end******************************** -->\\n\\n      <!-- ****************************label start****************************** -->        \\n        <span *ngFor=\\\"let cardData of data.noteLabels\\\">\\n          <mat-chip  class=\\\"label\\\"*ngIf=\\\"cardData.isDeleted==false\\\" (click)=showLabel(cardData.label)>\\n            <span class=\\\"chip\\\">{{cardData.label}}</span>\\n            <mat-icon *ngIf=\\\"!data.isDeleted\\\" class=cancelIcon (click)=removeLabel(cardData.id,data.id)>cancel</mat-icon>\\n          </mat-chip>\\n        </span>\\n      <!-- ******************************label end******************************** -->   \\n      \\n      <!-- **************************collaborators start************************* -->\\n        <span *ngFor=\\\"let cardData of data.collaborators\\\" class=margin>\\n          <button mat-mini-fab [ngStyle]=\\\"{'background-color':data.color}\\\">{{cardData.firstName[0].toUpperCase()}}</button>\\n        </span>\\n      </mat-chip-list>\\n      <!-- ***************************collaborators end*************************** -->\\n\\n      <!-- ******************************icon start****************************** -->        \\n      <div class=\\\"icon\\\">\\n        <app-remind-me *ngIf=\\\"!data.isDeleted\\\" class=\\\"iconButton\\\"(onChanges)=\\\"entry($event)\\\"[card]=data></app-remind-me>\\n        <app-add-collaborator *ngIf=\\\"!data.isDeleted\\\"class=\\\"iconButton\\\"(onChanges)=\\\"entry($event)\\\" [card]=data></app-add-collaborator>\\n        <app-change-color *ngIf=\\\"!data.isDeleted\\\"class=\\\"iconButton\\\" [card]=data (onChangeColor)=\\\"entry($event)\\\"></app-change-color>\\n        <app-add-image *ngIf=\\\"!data.isDeleted\\\"class=\\\"iconButton\\\"></app-add-image>\\n        <app-notes-archive *ngIf=\\\"!data.isDeleted\\\"class=\\\"iconButton\\\" [card]=data (onArchiveEntry)=\\\"entry($event)\\\"></app-notes-archive>\\n        <app-more class=\\\"iconButton\\\" [card]=data (onChanges)=\\\"entry($event)\\\"></app-more>\\n        </div>\\n      <!-- ****************************icon start****************************** --> \\n      <div *ngIf=\\\"data.questionAndAnswerNotes.length!=0\\\" (click)=questionAnswer(data.id)>       \\n      <mat-divider></mat-divider>\\n        <div><small>Question Asked</small></div>\\n        <div class=question [innerHTML]=data.questionAndAnswerNotes[0].message></div>\\n      </div>\\n    </mat-card>\\n    <!-- ******************************matcard end******************************* -->   \\n\\n  </div>\\n</div>\\n\"","module.exports = \".main {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin: 15px 0px 0px 0px; }\\n\\n.div {\\n  margin: 5px;\\n  border-radius: 5%;\\n  height: -webkit-min-content;\\n  height: -moz-min-content;\\n  height: min-content;\\n  width: 100%; }\\n\\n.checkBox {\\n  word-break: break-all;\\n  margin: 0px 0px 10px 0px; }\\n\\n.margin {\\n  margin: 2px 3px 2px 3px; }\\n\\n.title {\\n  word-wrap: break-word;\\n  font-weight: bold;\\n  font-size: 18px;\\n  max-width: 90%;\\n  opacity: 0.6;\\n  margin: 0px 0px 10px 0px; }\\n\\n.description {\\n  opacity: 0.6;\\n  font-size: 15px;\\n  word-wrap: break-word;\\n  margin: 0px 0px 10px 0px; }\\n\\n.icon {\\n  visibility: hidden;\\n  margin-top: 15px; }\\n\\n.iconButton {\\n  opacity: 0.7;\\n  cursor: pointer;\\n  margin-right: 5%; }\\n\\n.iconButton:hover {\\n  opacity: 1; }\\n\\n.div:hover .icon {\\n  visibility: visible; }\\n\\n.label {\\n  background-color: rgba(135, 167, 159, 0.465);\\n  font-size: 10px;\\n  max-width: 140px; }\\n\\n.dellabel {\\n  background-color: rgba(135, 167, 159, 0.465);\\n  font-size: 10px;\\n  max-width: 140px;\\n  color: rgba(0, 0, 0, 0.4); }\\n\\n.chip {\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important;\\n  background-color: transparent; }\\n\\n.delCheck {\\n  color: rgba(0, 0, 0, 0.4); }\\n\\n.label .cancelIcon {\\n  visibility: hidden; }\\n\\n.label:hover .cancelIcon {\\n  visibility: visible; }\\n\\n.pin {\\n  float: right;\\n  cursor: pointer;\\n  visibility: hidden; }\\n\\n.div:hover .pin {\\n  visibility: visible; }\\n\\n@media screen and (max-width: 960px) {\\n  .grid {\\n    max-width: 190px; } }\\n\\n.question {\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important; }\\n\\n.grid {\\n  width: 190px; }\\n\\n.list {\\n  width: 100%;\\n  border-radius: 10px;\\n  overflow-x: hidden; }\\n\\n.pinOthers {\\n  font-size: 12px;\\n  color: black;\\n  width: 100%;\\n  margin-top: 5px; }\\n\\n.rem {\\n  margin-top: 15px; }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> notes-list.component.ts \n *\n *  Purpose         : To get the notes\n * \n *  @file           : notes-list.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { CardDisplayComponent } from '../card-display/card-display.component';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { DataService } from '../../core/services/data/data.service'\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LoggerService } from '../../core/services/logger/logger.service';\nimport { Router } from '@angular/router';\n\nexport interface DialogData {\n  noteData:object\n}\n\n@Component({\n  selector: 'app-notes-list',\n  templateUrl: './notes-list.component.html',\n  styleUrls: ['./notes-list.component.scss'],\n  outputs: ['anyChanges']\n})\nexport class NotesListComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  @Input() pin;\n  @Input() length;\n  @Input() notes;\n  @Input() searchItem;\n  @Output() anyChanges= new EventEmitter();\n\n  constructor( private dialog: MatDialog, private noteListService : NotesService, private data: DataService,\n    private router : Router ) { }\n\n  private noteData:object;\n  private current =new Date();\n  private dateValue;\n  private view:boolean;\n  private date;\n  \n  ngOnInit() {\n    this.data.currentMessageView\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(message => {\n      this.view = message      \n    })\n  }\n\n  questionAnswer(id){\n    this.data.hideView(true);\n    this.router.navigateByUrl('/QuestionAnswer/'+id)\n  }\n /**\n  * \n  * @description on any changes\n  */\n  entry(event){\n    if(event){\n    this.anyChanges.emit({});\n    }\n  }\n  check(list){\n    \n    if(list.status==\"open\"){\n      list.status=\"close\";\n    }\n    else{\n      list.status=\"open\";\n    }\n    let body={\n      \"itemName\":list.itemName,\n      \"status\":list.status\n    }\n    this.noteListService.updateCheckList(list.notesId,list.id,body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n    },(error) => {\n    });\n  }\n\n  /**\n  * \n  * @description opening the particular note\n  */\n  openDialog(noteData1): void {\n    const dialogRef = this.dialog.open(CardDisplayComponent, {\n      width: '600px',\n      maxHeight: '400px',\n      maxWidth: 'auto',\n      data: { noteData : noteData1 }\n    });\n    dialogRef.afterClosed()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(result => {\n      this.anyChanges.emit({});\n    });\n  }\n\n  removeLabel(labelId, cardId){\n    this.noteListService.removeLabelFromNotes(cardId,labelId)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.anyChanges.emit({})\n    },(error) => {\n    }); \n  }\n\n  removeReminder(cardId){\n    let id=[];\n    id.push(cardId)\n    let body={\n      \"noteIdList\":id\n    }\n    this.noteListService.removeReminder(body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.anyChanges.emit({})\n    },(error) => {\n    });\n  }\n  checkDate(value){\n    this.date=new Date(value).getUTCHours()\n    let saved=new Date(value).getTime();\n    let current=this.current.getTime();\n    let year=new Date(value).getFullYear();\n    let month=new Date(value).getMonth();\n    let date=new Date(value).getDate();\n    let hr;\n    let min;\n    let ampm='AM';\n    if(saved<current){\n      if((year==this.current.getFullYear())&&(month==this.current.getMonth())&&(date+1==this.current.getDate())){\n        hr=new Date(value).getHours();\n        min=new Date(value).getMinutes();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10){\n          hr='0'+hr;\n        }\n        if(new Date(value).getMinutes()<10){\n          min='0'+new Date(value).getMinutes();\n        }\n        this.date=\"yesterday \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else if((year==this.current.getFullYear())&&(month==this.current.getMonth()) &&(date==this.current.getDate())){\n        hr=new Date(value).getHours();\n        min=new Date(value).getMinutes();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10){\n          hr='0'+hr;\n        }\n        if(new Date(value).getMinutes()<10){\n          min='0'+new Date(value).getMinutes();\n        }\n        this.date=\"today \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else{\n        this.date=value\n        return 4;\n      }\n      return 1;\n    }\n    else {\n      if((year==this.current.getFullYear())&&(month==this.current.getMonth()) &&(date==this.current.getDate())){\n        hr=new Date(value).getHours();\n        min=new Date(value).getMinutes();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10){\n          hr='0'+hr;\n        }\n        if(new Date(value).getMinutes()<10){\n          min='0'+new Date(value).getMinutes();\n        }\n        this.date=\"today \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else if((year==this.current.getFullYear())&&(month==this.current.getMonth())&&(date==this.current.getDate()+1)){\n        hr=new Date(value).getHours();\n        min=new Date(value).getMinutes();\n        if(new Date(value).getHours()>12){\n          ampm='PM';\n          hr=new Date(value).getHours()-12;\n        }\n        if(hr<10){\n          hr='0'+hr;\n        }\n        if(new Date(value).getMinutes()<10){\n          min='0'+new Date(value).getMinutes();\n        }\n        this.date=\"tomorrow \"+hr+\":\"+min+\" \"+ampm;\n      }\n      else {\n        this.date=value;\n        return 3;\n      }\n      return 2;\n    }\n  }\n  showLabel(data){\n    this.data.changeMessageLabel(data)\n  }\n  showReminder(data){\n    this.data.changeMessageReminder(data)\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","module.exports = \"<app-notes-add (onNewEntry)=refresh($event)></app-notes-add>\\n<app-notes-list *ngIf=\\\"spinnerValue==false\\\" [length]=pinedArray.length [pin]=\\\"'PINNED'\\\" [notes]=\\\"pinedArray\\\" \\n(anyChanges)=\\\"refresh($event)\\\"></app-notes-list>\\n<app-notes-list *ngIf=\\\"spinnerValue==false\\\" [length]=pinedArray.length [notes]=\\\"unpinedArray\\\" (anyChanges)=\\\"refresh($event)\\\" \\n[pin]=\\\"'OTHERS'\\\"></app-notes-list>\\n<app-loader *ngIf=\\\"spinnerValue==true\\\"></app-loader>\"","module.exports = \"\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> notes.component.ts \n *\n *  Purpose         : To display the notes page\n * \n *  @file           : notes.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Note } from '../../core/model/model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LoggerService } from '../../core/services/logger/logger.service';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.scss']\n})\nexport class NotesComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor( private noteService : NotesService ){}\n\n  private notes:Note[]=[];\n  private pinedArray=[];\n  private unpinedArray=[];\n  private spinnerValue=true;\n\n  ngOnInit() {\n    this.getNotes();\n  }\n\n  /**\n  * \n  * @description refresh the page after any change in notelist\n  */\n  refresh(event){\n    if(event){\n      this.getNotes();\n    }\n  }\n\n  /**\n  * \n  * @description getting the note list\n  */\n \n  getNotes(){\n    this.noteService.getNoteList()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.notes=response[\"data\"].data;\n      this.pinedArray=[];\n      this.unpinedArray=[]\n      for(let i=this.notes.length; i>0 ; i--){\n        if((this.notes[i-1][\"isDeleted\"] == false) && (this.notes[i-1][\"isArchived\"] == false)){\n          if(this.notes[i-1][\"isPined\"]==true){\n            this.pinedArray.push(this.notes[i-1]);\n          }\n          else{\n            this.unpinedArray.push(this.notes[i-1]);\n          }\n        }\n      }\n      this.spinnerValue=false;\n      \n    },(error) =>{\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}","module.exports = \"<img *ngIf=!isPin (click)=pin() src=\\\"../../../assets/img/pin.svg\\\">\\n<img *ngIf=isPin (click)=pin() src=\\\"../../../assets/img/pinblue.svg\\\">\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent implements OnInit {\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  @Input() card;\n  @Output() onChange = new EventEmitter;\n\n  constructor( private pinService : NotesService ) { }\n  \n  private isPin:boolean=false;\n\n  ngOnInit() {\n    if(this.card)\n    this.isPin=this.card.isPined;\n  }\n  pin(){\n    this.isPin=!this.isPin;\n    if(this.card){\n      let id=[];\n      id.push(this.card.id);\n      let body={\n        \"isPined\":this.isPin,\n        \"noteIdList\":id\n      }\n      this.pinService.pinChange(body)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((response) =>{\n        this.onChange.emit({})\n      });\n    }\n    else\n    this.onChange.emit(this.isPin);\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","module.exports = \"<div class=\\\"navbar\\\" #navbar>\\n  <mat-toolbar-row>\\n    <div fxLayout=\\\"row\\\" fxFlex=\\\"100%\\\" fxLayoutGap=\\\"5%\\\" class=margin_15>\\n      <div fxFlex=\\\"5%\\\"></div>\\n      <div fxFlex=\\\"90%\\\" class=font>fundooNotes</div>\\n      <div fxFlex=\\\"5%\\\"></div>\\n    </div>\\n  </mat-toolbar-row>\\n</div>\\n  <div  fxLayout=\\\"column\\\" fxLayoutGap=\\\"4%\\\">\\n    <div fxFlex=\\\"2%\\\"></div>\\n    <div fxLayoutAlign=center class=font>fundooNotes offered. Choose below service to Register.</div>\\n    <app-loader *ngIf=loader></app-loader>\\n    <div fxLayout=row fxLayoutAlign=center fxLayoutGap=\\\"10%\\\">\\n        <div  *ngFor=\\\"let data of card\\\" class=div (click)=cardSelect(data)>\\n        <mat-card  class=notSelected >\\n          \\n          <div fxFlex=column fxLayoutGap=\\\"10%\\\">\\n              <div class=font_size>price: ${{data.price}} per month</div>\\n              <div class=blue>{{data.name}}</div>\\n                  <li class=features>${{data.price}}/month</li>\\n                  <li class=features>{{data.description}}</li>\\n            </div>\\n        </mat-card>\\n        <mat-card class=card>\\n            <div *ngIf=\\\"data.id!=cardId\\\" class=add>ADD TO CART</div>\\n        </mat-card>\\n       \\n    </div>\\n   \\n  </div>\\n  <div class=\\\"back\\\" fxLayoutAlign=center (click)=signin()>Sign in instead</div>\\n\\n\\n\\n  </div>\"","module.exports = \".navbar {\\n  background-color: #fb0;\\n  width: 100%; }\\n\\n.font {\\n  font-size: 25px; }\\n\\n@media only screen and (max-width: 599px) {\\n  .card {\\n    width: 120px;\\n    margin-top: -128%;\\n    padding: 135% 0% 5% 15%;\\n    margin-left: 10%;\\n    background-color: #acacac;\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex; }\\n  .div:hover .card {\\n    width: 130px;\\n    margin-top: -128%;\\n    padding: 135% 0% 5% 15%;\\n    margin-left: 10%;\\n    background-color: #fb0;\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex; }\\n  .notSelected {\\n    width: 120px;\\n    z-index: 10;\\n    height: 170px; }\\n  .div:hover .notSelected {\\n    width: 130px;\\n    z-index: 10;\\n    height: 180px; }\\n  .font_20 {\\n    font-size: 15px; }\\n  .features {\\n    margin-top: 10px;\\n    font-size: 9px; }\\n  .add {\\n    font-size: 10px; } }\\n\\n@media only screen and (min-width: 600px) {\\n  .card {\\n    width: 240px;\\n    margin-top: -97%;\\n    padding: 99% 0% 7% 15%;\\n    margin-left: 10%;\\n    background-color: #acacac;\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex; }\\n  .div:hover .card {\\n    width: 260px;\\n    margin-top: -97%;\\n    padding: 99% 0% 7% 15%;\\n    margin-left: 10%;\\n    background-color: #fb0;\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex; }\\n  .notSelected {\\n    width: 240px;\\n    z-index: 10;\\n    height: 260px; }\\n  .div:hover .notSelected {\\n    width: 260px;\\n    z-index: 10;\\n    height: 290px; }\\n  .div:hover .font_size {\\n    font-size: 30px; }\\n  .font_size {\\n    font-size: 25px; }\\n  .div:hover .features {\\n    margin-top: 10px;\\n    font-size: 20px; }\\n  .features {\\n    margin-top: 10px;\\n    font-size: 17px; }\\n  .add {\\n    font-size: 17px; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { CardDetailsComponent } from '../card-details/card-details.component';\nimport { LoggerService } from '../../core/services/logger/logger.service';\nimport { UserService } from '../../core/services/user/user.service';\nimport { Router } from '@angular/router';\n\nexport interface DialogData {\n  noteData:object\n}\n@Component({\n  selector: 'app-product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.scss']\n})\nexport class ProductCardComponent implements OnInit {\n\n  \n  constructor( private router : Router,private dialog: MatDialog, private productCardService : UserService) { }\n  private basic=false;\n  private advance=false;\n  private card=[]\n  private cartId='';\n  private loader:boolean=true;\n  private id= localStorage.getItem(\"fundooUserToken\");\n\n  ngOnInit() {\n    if(this.id != null){\n      this.router.navigateByUrl('/home');\n    }\n    this.getService();\n    localStorage.removeItem(\"productCartId\");\n\n  }\n  \n  getService(){\n    this.card=[];\n    this.productCardService.getService()\n    .subscribe((response) => {\n      \n      for(let i=0;i<response[\"data\"].data.length;i++)\n      {\n        response[\"data\"].data[i].select=false;\n        this.card.push(response[\"data\"].data[i]);\n        this.loader=false\n      }\n    },(error) =>{\n    });\n  }\n\n  cardSelect(product){\n    let body={\"productId\":product.id}\n    this.productCardService.addToCart(body)\n    .subscribe((response) => {\n      localStorage.setItem(\"productCartId\",response['data'].details.id)\n      this.proceed(product);\n    },(error) =>{\n    });\n  }\n  proceed(product): void {\n    const dialogRef = this.dialog.open(CardDetailsComponent, {\n      width: '600px',\n      maxWidth: 'auto',\n      data: { noteData : product }\n    });\n    dialogRef.afterClosed()\n    .subscribe(result => {\n    });\n  }\n\n  signin(){\n    this.router.navigateByUrl('/login');\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\">\\n<div fxLayout=row fxLayoutAlign=center class=div >\\n\\n<div class=main2 >\\n  <button mat-button class=close (click)=close()>close</button>\\n  <div class=margin >\\n    <div class=\\\"title\\\" [innerHTML]=note.title></div>\\n    <div class=description2 [innerHTML]=note.description></div>\\n    <div *ngFor='let data of note.noteCheckLists'>\\n      <div *ngIf=\\\"data.status=='open'\\\" class=description><mat-checkbox>{{data.itemName}}</mat-checkbox></div>\\n      <div *ngIf=\\\"data.status=='close'\\\" class=description><mat-checkbox checked=true>\\n      <del>{{data.itemName}}</del></mat-checkbox></div>\\n    </div>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n  <div class=body *ngIf=\\\"questions.length==0\\\">\\n    <div class=description>Ask a Question</div>\\n    <div class=full_width  [froalaEditor]=options [(froalaModel)]=\\\"editorContent\\\"></div>\\n    <button mat-button color=primary class=close (click)=addQuestion()>Ask</button>\\n  </div>\\n  <div class=body1 *ngIf=\\\"questions.length!=0\\\">\\n    <div *ngFor=\\\"let item of questions\\\">\\n      <div *ngIf=\\\"item.parentId==undefined\\\" class=description>Question Asked</div>\\n      <div *ngIf=\\\"item.parentId==undefined\\\"class=description2 class=opacity [innerHTML]=item.message></div>\\n    </div>\\n  </div>\\n</div>\\n\\n</div>\\n<div fxLayout=row fxLayoutAlign=center>\\n  <div *ngIf=\\\"questions.length!=0\\\" class=main>\\n    <!-- *******************************question start************************************ -->\\n    <div *ngFor=\\\"let item of questions\\\" class=body>\\n      <div *ngIf=\\\"item.parentId==undefined\\\" fxLayout=\\\"row\\\">\\n      <div class=image>\\n        <div mat-card-avatar ngStyle.xs=\\\"width:25px;height:25px\\\" \\n        [ngStyle]=\\\"{'background-image':'url(' +img+item.user.imageUrl+ ')',\\n        'background-size':'cover','height':'40px','width':'40px','border-radius':'50%'}\\\"></div>\\n      </div>\\n      <div fxLayout=\\\"row wrap\\\">\\n      <div>\\n        <div class=details>{{item.user.firstName}} {{item.user.lastName}}\\n          <span class=details> {{item.createdDate | date:'medium'}}</span></div>\\n        <div class=description [innerHTML]=\\\"item.message\\\"></div>\\n      </div>\\n      <div fxLayout=row>\\n      <button mat-icon-button class=icon><mat-icon (click)=replyToQuestion(item)>reply</mat-icon></button>\\n      <button mat-icon-button class=icon *ngIf=\\\"Check(item.like)\\\"><mat-icon class=blue\\n        (click)=like(item)>thumb_up_alt</mat-icon></button>\\n      <button mat-icon-button class=icon *ngIf=\\\"!Check(item.like)\\\">\\n        <mat-icon (click)=like(item)>thumb_up_alt</mat-icon></button>\\n\\n      <div class=margin_top10>{{countLIke(item)}} likes</div>\\n      <div class=star *ngIf=rateCheck(item.rate)>\\n        <bar-rating [(rate)]=ratingValue (rateChange)=\\\"rating(item,$event)\\\"[max]=\\\"5\\\"></bar-rating>\\n      </div>\\n      <div class=margin_top10>{{rateCount(item.rate)}}</div>\\n      </div>\\n      </div>\\n    </div>\\n    </div>\\n    <div *ngIf=\\\"reply\\\">\\n          <div class=full_width [froalaEditor]=options [(froalaModel)]=\\\"editorContent\\\"></div>\\n          <div><button color=primary mat-button (click)=answer()>Reply</button></div>\\n     </div>\\n    <!-- *******************************question end************************************ -->\\n\\n    <!-- *******************************reply of question start************************************ -->\\n    <div *ngFor=\\\"let data of questions\\\" >\\n      <div  *ngIf=\\\"data.parentId==questions[0].id && data.isApproved\\\" class=body2>\\n\\n        <div fxLayout=\\\"row\\\">\\n          <div fxFlex.xl=8 fxFlex.lg=8 fxFlex.md=8 fxFlex.sm=8 fxFlex.xs=15>\\n            <div class=image>\\n            <div mat-card-avatar ngStyle.xs=\\\"width:30px;height:30px\\\" \\n            [ngStyle]=\\\"{'background-image':'url(' +img+data.user.imageUrl+ ')',\\n            'background-size':'cover','height':'40px','width':'40px','border-radius':'50%'}\\\"></div>\\n          </div>\\n        </div>\\n          <div fxFlex.xl=85 fxFlex.lg=85 fxFlex.md=85 fxFlex.sm=85 fxFlex.xs=80>\\n            <div class=details>{{data.user.firstName}} {{data.user.lastName}} \\n            <span class=details>{{data.createdDate | date:'medium'}}</span></div>\\n            <div [innerHTML]=\\\"data.message\\\"></div>\\n          \\n        \\n        <div fxLayout=row fxLayoutAlign=end>\\n          <button mat-icon-button class=icon><mat-icon (click)=replyToReply(data)>reply</mat-icon></button>\\n          <button mat-icon-button class=icon *ngIf=\\\"likeCheck(data.like)\\\"><mat-icon class=blue \\n            (click)=like(data)>thumb_up_alt</mat-icon></button>\\n          <button mat-icon-button class=icon *ngIf=\\\"!likeCheck(data.like)\\\"><mat-icon \\n            (click)=like(data)>thumb_up_alt</mat-icon></button>\\n          <div class=margin_top10>{{countLIke(data)}} likes</div>\\n          <div class=star *ngIf=rateCheck(data.rate)>\\n              <bar-rating [(rate)]=ratingValue (rateChange)=\\\"rating(data,$event)\\\"[max]=\\\"5\\\"></bar-rating>\\n          </div>\\n          <div class=margin_top10>{{rateCount(data.rate)}}</div>\\n          <button mat-icon-button class=icon *ngIf=\\\"!showReply || id2!=data.id\\\" \\n          (click)=\\\"replyShowing(data,true)\\\"><mat-icon>keyboard_arrow_down</mat-icon></button>\\n          <button mat-icon-button class=icon *ngIf=\\\"showReply && id2==data.id\\\" \\n          (click)=\\\"replyShowing(data,false)\\\"><mat-icon>keyboard_arrow_up</mat-icon></button>\\n        </div></div>\\n      </div>\\n      <div *ngIf=\\\"reply2 && id2==data.id\\\">\\n          <mat-divider></mat-divider>\\n          <div class=full_width [froalaEditor]=options [(froalaModel)]=\\\"editorContent\\\"></div>\\n          <div><button color=primary mat-button (click)=answer()>Reply</button></div>\\n       </div>\\n      <!-- *******************************reply of question end************************************ -->\\n\\n        <!-- *******************************reply of reply start************************************ --> \\n\\n        <div *ngFor=\\\"let data2 of questions\\\">\\n          <div *ngIf=\\\"data2.parentId==data.id && data2.isApproved\\\" class=body3>\\n            <div fxLayout=\\\"row\\\" *ngIf=\\\"showReply && id2==data.id\\\">\\n                <div fxFlex.xl=8 fxFlex.lg=8 fxFlex.md=8 fxFlex.sm=8 fxFlex.xs=15><div class=image>\\n                <div mat-card-avatar ngStyle.xs=\\\"width:30px;height:30px\\\" \\n                [ngStyle]=\\\"{'background-image':'url(' +img+data2.user.imageUrl+ ')',\\n                'background-size':'cover','height':'40px','width':'40px','border-radius':'50%'}\\\"></div>\\n              </div></div>\\n                  <div fxFlex.xl=85 fxFlex.lg=85 fxFlex.md=85 fxFlex.sm=85 fxFlex.xs=80>\\n                <div class=details>{{data2.user.firstName}} {{data2.user.lastName}}\\n                <span class=details>{{data2.createdDate | date:'medium'}}</span></div>\\n                <div [innerHTML]=\\\"data2.message\\\"></div>\\n              \\n            <div fxLayout=row fxLayoutAlign=end>\\n              <button mat-icon-button class=icon *ngIf=\\\"likeCheck(data2.like)\\\">\\n              <mat-icon class=blue (click)=like(data2)>thumb_up_alt</mat-icon></button>\\n              <button mat-icon-button class=icon *ngIf=\\\"!likeCheck(data2.like)\\\">\\n              <mat-icon (click)=like(data2)>thumb_up_alt</mat-icon></button>\\n              <div class=margin_top10>{{countLIke(data2)}} likes</div>\\n              <div class=star *ngIf=rateCheck(data2.rate)>\\n                  <bar-rating [(rate)]=ratingValue (rateChange)=\\\"rating(data2,$event)\\\"[max]=\\\"5\\\"></bar-rating>\\n              </div>\\n              <div class=margin_top10>{{rateCount(data2.rate)}}</div>\\n            </div>\\n          </div></div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- *******************************reply of reply end************************************ -->      \\n\\n    \\n  </div>\\n  \\n</div>\\n</div>\"","module.exports = \".main2 {\\n  background-color: #e7e7e7;\\n  border-bottom: 3px solid #c5c3c3; }\\n\\n.main {\\n  margin-top: 2%; }\\n\\n@media only screen and (min-width: 320px) and (max-width: 599px) {\\n  .main {\\n    width: 100%; }\\n  .main2 {\\n    width: 100%; } }\\n\\n@media only screen and (min-width: 600px) and (max-width: 959px) {\\n  .main {\\n    width: 100%; }\\n  .main2 {\\n    width: 100%;\\n    position: fixed;\\n    z-index: 99; }\\n  .div {\\n    margin-bottom: 180px; } }\\n\\n@media only screen and (min-width: 960px) and (max-width: 1279px) {\\n  .main {\\n    width: 700px; }\\n  .main2 {\\n    width: 700px;\\n    position: fixed;\\n    z-index: 99; }\\n  .div {\\n    margin-bottom: 180px; } }\\n\\n@media only screen and (min-width: 1280px) and (max-width: 1919px) {\\n  .main {\\n    width: 1000px; }\\n  .main2 {\\n    width: 1000px;\\n    position: fixed;\\n    z-index: 99; }\\n  .div {\\n    margin-bottom: 180px; } }\\n\\n@media only screen and (min-width: 1920px) and (max-width: 5000px) {\\n  .main {\\n    width: 1100px; }\\n  .main2 {\\n    width: 1100px;\\n    position: fixed;\\n    z-index: 99; }\\n  .div {\\n    margin-bottom: 180px; } }\\n\\n.margin {\\n  margin-bottom: 20px;\\n  margin-top: 20px;\\n  max-height: 80px;\\n  overflow-y: auto; }\\n\\n.title {\\n  font-size: 28px;\\n  word-wrap: break-word;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important; }\\n\\n.description2 {\\n  font-size: 20px;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden !important;\\n  word-wrap: break-word; }\\n\\n.description {\\n  font-size: 20px;\\n  word-wrap: break-word; }\\n\\n.message {\\n  word-wrap: break-word; }\\n\\n.aaa {\\n  word-wrap: break-all; }\\n\\n.star {\\n  margin: -8px 0px 0px 0px; }\\n\\n.body1 {\\n  margin: 2% 0% 2% 0%;\\n  overflow-y: auto;\\n  max-height: 80px; }\\n\\n.body {\\n  margin: 2% 0% 2% 0%; }\\n\\n.details {\\n  font-size: 12px; }\\n\\n.body2 {\\n  margin: 2% 0% 0% 0%; }\\n\\n.body3 {\\n  margin: 1% 0% 0% 10%; }\\n\\n.input {\\n  font-size: 15px;\\n  border: 1px dashed #d4d3d3;\\n  width: 80%;\\n  outline: none; }\\n\\n.input:empty:before {\\n  content: attr(data-text);\\n  opacity: 0.5;\\n  font-size: 15px;\\n  width: 60%; }\\n\\n.image {\\n  margin: 0px 20px 0px 10px; }\\n\\n.nameIcon {\\n  font-size: 29px;\\n  color: #0606f8;\\n  padding: 3px 0px 0px 0px; }\\n\\n.close {\\n  float: right;\\n  margin-top: 10px; }\\n\\n.opacity {\\n  opacity: 0.5; }\\n\"","import { Component, OnInit,ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoggerService } from '../../core/services/logger/logger.service';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { environment } from '../../../environments/environment';\nimport { DataService } from '../../core/services/data/data.service';\n\n@Component({\n  selector: 'app-question-answer',\n  templateUrl: './question-answer.component.html',\n  styleUrls: ['./question-answer.component.scss']\n})\nexport class QuestionAnswerComponent implements OnInit {\n  @ViewChild('question') question: ElementRef ;\n  @ViewChild('replayMessage') replayMessage: ElementRef ;\n\n  constructor( private route : ActivatedRoute,private QAService : NotesService, private router : Router, \n    private data: DataService) { }\n  private id = this.route.snapshot.params.noteId;\n  private note:object={};\n  private questions=[]\n  private reply:boolean=false;\n  private img;\n  private id2;\n  private showReply:boolean=false;\n  public editorContent: string \n  ngOnInit() {\n    this.getDetails();\n  }\n  public options: Object = {\n    charCounterCount: true,\n    toolbarButtons: ['fullscreen','bold', 'italic', 'underline','strikeThrough','subscript','superscript','fontFamily','fontSize',\n                    'color','inlineClass','inlineStyle','paragraphStyle','lineHeight','paragraphFormat','align',\n                    'formatOL','formatUL','outdent','indent','quote','specialCharacters',\n                    'selectAll','undo','redo'],\n    toolbarButtonsXS: ['fullscreen','bold', 'italic', 'underline','strikeThrough','subscript','superscript','fontFamily','fontSize',\n                      'color','inlineClass','inlineStyle','paragraphStyle','lineHeight','paragraphFormat','align',\n                      'formatOL','formatUL','outdent','indent','quote','specialCharacters',\n                      'selectAll','undo','redo'],\n    toolbarButtonsSM: ['fullscreen','bold', 'italic', 'underline','strikeThrough','subscript','superscript','fontFamily','fontSize',\n                      'color','inlineClass','inlineStyle','paragraphStyle','lineHeight','paragraphFormat','align',\n                      'formatOL','formatUL','outdent','indent','quote','specialCharacters',\n                      'selectAll','undo','redo'],\n    toolbarButtonsMD: ['fullscreen','bold', 'italic', 'underline','strikeThrough','subscript','superscript','fontFamily','fontSize',\n                      'color','inlineClass','inlineStyle','paragraphStyle','lineHeight','paragraphFormat','align',\n                      'formatOL','formatUL','outdent','indent','quote','specialCharacters',\n                      'selectAll','undo','redo']\n  };\n  getDetails(){\n    this.QAService.getNoteById(this.id)\n    .subscribe( (response)=>{\n      LoggerService.log(\"response\",response);\n      this.note=response[\"data\"].data[0];\n      this.questions=this.note['questionAndAnswerNotes']\n      this.img=environment.Url;\n      console.log(this.questions)\n    },(error)=>{\n      LoggerService.log(\"details\",error);\n    });\n  }\n  ratingValue;\n  rateCheck(data){\n    for(let i=0;i<data.length;i++){\n      if(data[i].userId==localStorage.getItem(\"fundooUserId\")){\n        this.ratingValue=data[i].rate;\n        return true\n      }\n    }\n    this.ratingValue=0;\n    return true\n  }\n  replyShowing(data,value){\n    this.showReply=value;\n    this.id2=data.id\n  }\n  rateCount(data){\n    if(data.length==0)\n    return 0;\n    let value=0;\n    for(let a=0;a<data.length;a++){\n      value+=data[a].rate;\n    }\n    let rate=value/(data.length)\n    return rate\n  }\n  addQuestion(){\n    let body={\n      \"message\":this.editorContent,\n      \"notesId\":this.id\n    }\n    this.QAService.addAQuestion(body)\n    .subscribe((response)=>{\n      this.getDetails()\n    },(error)=>{\n    })\n  }\n  close(){\n    this.router.navigateByUrl('/home');\n    this.data.hideView(false);\n\n  }\n  replyToQuestion(data){\n    this.id2=data.id\n    this.reply=!this.reply;\n  }\n  reply2;\n  replyToReply(data){\n    this.id2=data.id\n    this.reply2=!this.reply2;\n  }\n  like(data){\n    let body={\n      \"like\":false\n    }\n    if(data.like.length==0)\n      body.like=true;\n    else{\n      body.like=!data.like[0].like\n      for(let l=0;l<data.like.length;l++){\n        if(data.like[l].userId==localStorage.getItem(\"fundooUserId\") && data.like[l].like==false)\n          body.like=true;\n      }\n    }\n    LoggerService.log(\"body\",body)\n    this.QAService.addLike(body,data.id)\n    .subscribe((response)=>{\n      this.getDetails()\n    },(error)=>{\n\n    })\n  }\n  likeCheck(question){\n    for(let m=0;m<question.length;m++){\n      if(question[m].like==true){\n        if(question[m].userId==localStorage.getItem(\"fundooUserId\")){\n          return true\n        }\n      }\n    }\n    return false\n  }\n  Check(data){\n    for(let m=0;m<data.length;m++){\n      if(data[m].like==true){\n        if(data[m].userId==localStorage.getItem(\"fundooUserId\")){\n          return true\n        }\n      }\n    }\n    return false;\n  }\n  countLIke(data){\n    let count=0\n    for(let m=0;m<data.like.length;m++){\n      if(data.like[m].like==true){\n        count+=1;\n      }\n    }\n    return count;\n  }\n  \n  answer(){\n    // let reply=this.replayMessage.nativeElement.innerHTML;\n    let body={\n      \"message\":this.editorContent\n    }\n    LoggerService.log(\"data\",this.id2);\n    LoggerService.log(\"body\",body)\n    this.QAService.addReply(body,this.id2)\n    .subscribe((response)=>{\n      LoggerService.log(\"refreshing\",response)\n      this.reply=this.reply2=false\n      this.getDetails();\n    },(error)=>{\n    })\n  }\n  rating(data,rate){\n    let body={\n      \"rate\":rate\n    }\n    this.QAService.addrating(body,data.id)\n    .subscribe((response)=>{\n      this.getDetails()\n    },(error)=>{\n\n    })\n  }\n}\n","module.exports = \"<abbr title=\\\"Remind me\\\">\\n    <img src=\\\"../../../assets/img/reminder.svg\\\" [matMenuTriggerFor]=\\\"menu\\\" (click)=\\\"timePick=false;reminder()\\\"></abbr>\\n\\n<!-- ****************************reminder menu start****************************** -->        \\n<mat-menu #menu=\\\"matMenu\\\">\\n<mat-card *ngIf=!timePick>\\n    <div>Reminder:</div>\\n    <div mat-menu-item class=\\\"menu\\\"fxLayout=\\\"row\\\" (click)=today()>\\n        <div fxFlex=60%>Later today</div><div fxFlex=\\\"40%\\\">8:00 PM</div>\\n    </div>\\n    <div mat-menu-item class=\\\"menu\\\" fxLayout=\\\"row\\\" (click)=tomorrow()>\\n        <div fxFlex=60%>Tomorrow</div><div fxFlex=\\\"40%\\\">8:00 AM</div>\\n    </div>\\n    <div mat-menu-item class=\\\"menu\\\" fxLayout=\\\"row\\\" (click)=nextWeek()>\\n        <div fxFlex=60%>Next week</div><div fxFlex=\\\"40%\\\">Mon, 8:00 AM</div>\\n    </div>\\n    <div mat-menu-item class=\\\"menu\\\" (click)=\\\"timePick=true\\\" (click)=$event.stopPropagation()>\\n        <mat-icon>access_time</mat-icon>Pick date & time\\n    </div>\\n</mat-card>\\n<mat-card *ngIf=timePick>\\n        <div mat-menu-item><mat-icon (click)=\\\"timePick=false;$event.stopPropagation()\\\">keyboard_backspace</mat-icon>\\n        Pick date & time</div>\\n        <mat-divider></mat-divider>\\n        <div mat-menu-item>\\n        <mat-form-field>\\n            <input matInput [matDatepicker]=\\\"dp\\\" (click)=$event.stopPropagation() #date=\\\"ngModel\\\" \\n            [(ngModel)]=model.date [min]=currentDate (dateChange)=datechange()>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #dp></mat-datepicker>\\n        </mat-form-field>\\n        </div>\\n        <div mat-menu-item>\\n            <mat-form-field>\\n                <input matInput (keyup)=timeValidation() [(ngModel)]=model.time (click)=$event.stopPropagation() \\n                [matMenuTriggerFor]=\\\"menuTime\\\">\\n            </mat-form-field>\\n        </div>\\n        <button mat-button [disabled]=!button (click)=addTime()>save</button>\\n\\n</mat-card>\\n</mat-menu>\\n<!-- ****************************reminder menu end****************************** -->        \\n<mat-menu #menuTime=\\\"matMenu\\\" [overlapTrigger]=false>\\n    <button class=\\\"button\\\" mat-button [disabled]=button4 (click)=\\\"model.time='8:00 AM';$event.stopPropagation()\\\">\\n        <div fxLayout=\\\"row\\\">\\n            <div fxFlex=60%>Morning</div><div fxFlex=\\\"40%\\\">8:00 AM</div>\\n        </div>\\n    </button>\\n    <button class=\\\"button\\\" mat-button [disabled]=button3 (click)=\\\"model.time='1:00 PM';$event.stopPropagation()\\\">\\n        <div fxLayout=\\\"row\\\">\\n            <div fxFlex=60%>Afternoon</div><div fxFlex=\\\"40%\\\">1:00 PM</div>\\n        </div>\\n    </button>\\n    <button class=\\\"button\\\" mat-button [disabled]=button2 (click)=\\\"model.time='6:00 PM';$event.stopPropagation()\\\">\\n        <div fxLayout=\\\"row\\\">\\n            <div fxFlex=60%>Evening</div><div fxFlex=\\\"40%\\\">6:00 PM</div>\\n        </div>\\n    </button>\\n    <button class=\\\"button\\\" mat-button [disabled]=button1 (click)=\\\"model.time='8:00 PM';$event.stopPropagation()\\\">\\n        <div fxLayout=\\\"row\\\">\\n            <div fxFlex=60%>Night</div><div fxFlex=\\\"40%\\\">8:00 PM</div>\\n        </div>\\n    </button>\\n    <button mat-button class=\\\"button\\\">Custom</button>\\n</mat-menu>\\n\"","module.exports = \".menu {\\n  cursor: pointer;\\n  font-size: 13px;\\n  width: 200px; }\\n\\n.menu:hover {\\n  background-color: #d4d4d4; }\\n\\n.button {\\n  width: 200px; }\\n\\n.dateTime {\\n  background-color: gray; }\\n\\n::ng-deep.mat-menu-content:not(:empty) {\\n  padding-top: 0px;\\n  padding-bottom: 0px; }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> remind-me.component.ts \n *\n *  Purpose         : To\n * \n *  @file           : remind-me.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit, Input, Output ,EventEmitter, ViewChild } from '@angular/core';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { LoggerService } from '../../core/services/logger/logger.service';\nimport { DataService } from '../../core/services/data/data.service';\nimport { MatMenuTrigger } from '@angular/material';\nimport { trigger } from '@angular/animations';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-remind-me',\n  templateUrl: './remind-me.component.html',\n  styleUrls: ['./remind-me.component.scss'],\n})\nexport class RemindMeComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>(); \n  @Input() card;\n  @Output() onChanges=new EventEmitter();\n  @ViewChild(MatMenuTrigger) trigger:MatMenuTrigger;\n\n  constructor( private remindMeService : NotesService, private data: DataService ) { }\n\n  private model: any={\n    \"date\":'',\n    'time':''\n   };\n  private message:String;\n  private  value;\n  private timePick:boolean=false;\n  private currentDate=new Date();\n  private button=true;\n  private button1:boolean=true;\n  private button2:boolean=true;\n  private button3:boolean=true;\n  private button4:boolean=true;\n\n\n  ngOnInit() {\n    this.data.currentMessageReminder.subscribe(message => {\n      this.message = message;\n      if(this.message!=\"default\" && this.card.id==message){\n        this.reminder()\n        // this.trigger.openMenu();\n      }\n    });\n\n  }\n\n /**\n  * \n  * @description reminder show\n  */\n  reminder(){\n    this.value=this.currentDate;\n    if(this.card){\n      if(this.card.reminder.length!=0){\n        let cardReminder=new Date(this.card.reminder[0]);\n        this.value=cardReminder;\n        this.timePick=true;\n      }\n    }\n    this.model.date=this.value;\n    let hr=this.value.getHours();\n    let min=this.value.getMinutes()+1;\n    if(min>=0 && min<9)\n    min=\"0\"+(min);\n    let ampm='AM'\n    if(hr>12){\n      hr-=12;\n      ampm='PM'\n    }\n    this.model.time=hr+\":\"+min+\" \"+ampm;\n    this.datechange();\n  }\n  datechange(){\n    if(this.model.date.getFullYear()>=this.currentDate.getFullYear()){\n      if(this.model.date.getMonth()>=this.currentDate.getMonth()){\n        if(this.model.date.getDate()>=this.currentDate.getDate()){\n          this.button1=this.button2=this.button3=this.button4=false;\n        }\n      }\n    }\n    if(this.model.date.getFullYear()==this.currentDate.getFullYear() &&\n    this.model.date.getMonth()==this.currentDate.getMonth() && \n    this.model.date.getDate()==this.currentDate.getDate()){\n      if(this.currentDate.getHours()>=20 && this.currentDate.getMinutes()>=0){\n        this.button1=this.button2=this.button3=this.button4=true;\n      }    \n      if(this.currentDate.getHours()>=18 && this.currentDate.getMinutes()>=0){\n        this.button2=this.button3=this.button4=true;\n      } \n      if(this.currentDate.getHours()>=13 && this.currentDate.getMinutes()>=0){\n        this.button3=this.button4=true;\n      } \n      if(this.currentDate.getHours()>=8 && this.currentDate.getMinutes()>=0){\n        this.button4=true;\n      }  \n    }\n  }\n  today(){\n    let date=new Date(this.currentDate.getFullYear(),this.currentDate.getMonth(),this.currentDate.getDate()+0,20,0,0)\n    if(this.card){\n      this.addReminder(date);\n    }\n    else{\n    this.onChanges.emit(date)\n    }\n  }\n  tomorrow(){\n    let date=new Date(this.currentDate.getFullYear(),this.currentDate.getMonth(),this.currentDate.getDate()+1,8,0,0)\n    if(this.card){\n      this.addReminder(date);\n    }\n    else{\n      this.onChanges.emit(date)\n    }\n  }\n  nextWeek(){\n    let date=new Date(this.currentDate.getFullYear(),this.currentDate.getMonth(),this.currentDate.getDate()+7,8,0,0)\n    if(this.card){\n      this.addReminder(date);\n    }\n    else{\n      this.onChanges.emit(date)\n    }\n  }\n  addReminder(date){\n    if(this.card){\n    let id=[];\n    id.push(this.card.id);\n    let body={\n      \"reminder\":date,\n      \"noteIdList\":id\n    }\n    this.remindMeService.addUpdateReminder(body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n    this.onChanges.emit({\"body\":date})\n    },(error) =>{\n    });}\n    else{\n    this.onChanges.emit(date)\n    }\n  }\n  timeValidation(){\n    let regex=/^(2[0-3]|1?[0-9]|0?[1-9]):[0-5][0-9] (AM|PM|pm|am|Pm|pM|Am|aM)$/;\n    if(!regex.test(this.model.time)){\n      this.button=false;\n    }\n    else\n    this.button=true;\n\n\n  }\n  dateValidation(){\n    let regex=/^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\n    if(!regex.test(this.model.date)){\n      this.button=false;\n    }\n    else\n      this.button=true;\n  }\n  \n  addTime(){\n    let arr=this.model.time.split(' ');\n    let arr2=arr[0].split(':')\n    arr2.push(arr[1])\n    let min=Number(arr2[1]);\n    let hr=Number(arr2[0]);\n    if(arr2[2].toUpperCase()==\"PM\" && hr<12){\n      hr+=12;\n    }\n    let date=new Date(this.model.date.getFullYear(),this.model.date.getMonth(),this.model.date.getDate()+0,hr,min,0)\n    this.addReminder(date);\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n}\n","module.exports = \"<app-notes-add (onNewEntry)=refresh($event)></app-notes-add>\\n<app-notes-list [notes]=\\\"reminderArray\\\" (anyChanges)=\\\"refresh($event)\\\" ></app-notes-list>\\n<app-loader *ngIf=\\\"spinnerValue==true\\\"></app-loader>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Note } from '../../core/model/model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-reminder',\n  templateUrl: './reminder.component.html',\n  styleUrls: ['./reminder.component.scss']\n})\nexport class ReminderComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor( private reminderService : NotesService ) { }\n\n  private notes:Note[]=[];\n  private reminderArray=[];\n  private arr=[];\n  private spinnerValue=true;\n\n  ngOnInit() {\n    this.reminders()\n  }\n\n /**\n  * \n  * @description getting reminder list\n  */\n  reminders(){\n    this.reminderService.getRemindersLIst()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.notes=[];\n      this.notes=response[\"data\"].data;\n      this.reminderArray=[];\n      this.arr=[]\n      for(let i=this.notes.length;i>0;i--){\n        this.reminderArray.push(this.notes[i-1])\n      }\n      this.reminderArray.sort(function(a,b)\n      {\n        a=new Date(a.reminder[0]);\n        b=new Date(b.reminder[0]);\n        return b-a;\n      })\n      this.spinnerValue=false\n    },(error) =>{\n    });\n  }\n\n  refresh(event){\n    if(event){\n      this.reminders();\n    }\n  }\n\n /**\n  * \n  * @description unsubscribing\n  */\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"5%\\\">\\n  <div fxFlex.lg=\\\"20%\\\" fxFlex.md=\\\"10%\\\" fxFlex.sm=\\\"5%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n  <div  fxLayout=\\\"row\\\" fxFlex.lg=\\\"70%\\\">\\n    <div fxFlex.lg=\\\"30%\\\" fxFlex.md=\\\"0%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n\\n    <div fxFlex.lg=\\\"40%\\\" fxFlex.md=\\\"50%\\\" fxFlex.sm=\\\"60%\\\" fxFlex.xs=\\\"100%\\\">\\n      <!-- ****************************matcard start****************************** -->        \\n      <mat-card>\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n          <div fxLayoutAlign=\\\"center\\\" class=userPage_header>\\n            <span class=blue>F</span><span class=red>u</span><span class=yellow>n</span>\\n            <span class=blue>d</span><span class=green>o</span><span class=red>o</span>\\n          </div>\\n          <mat-card-title fxLayoutAlign=\\\"center\\\"><h4>Reset Password</h4></mat-card-title>\\n            \\n          <div>\\n            <mat-form-field class=full_width>\\n              <input  matInput placeholder=\\\"Password\\\" name=\\\"password\\\" maxlength=\\\"16\\\" #password=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"model.password\\\" [type]=\\\"hide ? 'text' : 'password'\\\" pattern=\\\"[a-zA-Z0-9!@#$%^&*]*\\\"\\n              [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required>\\n            </mat-form-field>\\n          </div>\\n          <mat-error class=\\\"error\\\" *ngIf=\\\"f.submitted && password.invalid\\\">\\n              <mat-error *ngIf=\\\"password.errors.required\\\" >password is required</mat-error>\\n          </mat-error>\\n          <div>\\n            <mat-form-field class=full_width>\\n              <input  matInput placeholder=\\\"Confirm password\\\" name=\\\"confpassword\\\" #confpassword=\\\"ngModel\\\" \\n              [(ngModel)]=\\\"model.confpassword\\\" [type]=\\\"hide ? 'text' : 'password'\\\"\\n              [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required>\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n            </mat-form-field>\\n          </div>\\n          <mat-error class=\\\"error\\\" *ngIf=\\\"f.submitted && confpassword.invalid\\\">\\n            <mat-error *ngIf=\\\"confpassword.errors.required\\\" >conf password is required</mat-error>\\n          </mat-error>\\n\\n          <div fxLayoutAlign=end><button mat-button class=mat_button type=submit (click)=\\\"reset()\\\">Next</button></div>\\n        </form>\\n      </mat-card>\\n      <!-- ****************************matcard end****************************** -->        \\n\\n    </div>\\n\\n    <div fxFlex.lg=\\\"30%\\\" fxFlex.md=\\\"0%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n  </div>\\n  <div fxFlex.lg=\\\"20%\\\" fxFlex.md=\\\"10%\\\" fxFlex.sm=\\\"5%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n</div>\"","module.exports = \"\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> reset.component.ts \n *\n *  Purpose         : To reset password\n * \n *  @file           : reset.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../core/services/user/user.service';\nimport { MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.scss']\n})\nexport class ResetComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>(); \n  constructor( private resetService : UserService, private snackBar : MatSnackBar, \n    private route : ActivatedRoute, private router : Router ) { }\n\n  public model : any = {\n    \"password\":\"\",\n    \"confpassword\":\"\"\n  };\n  private id = this.route.snapshot.params.id;\n\n  ngOnInit() {\n  }\n\n /**\n  * \n  * @description password reset\n  */\n  reset(){\n   /**\n    * \n    * @description checking the passwords are matching or not\n    */\n    localStorage.setItem(\"fundooUserToken\",this.id);\n    if(this.model.password != this.model.confpassword){\n      this.snackBar.open(\"failed\",\"passwords are not matching\", {\n        duration: 2000,\n      });\n      return;\n    }\n\n    let body={ \"newPassword\" : this.model.password }\n    this.resetService.resetPassword(this.getFormUrlEncoded(body))\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n     /**\n      * \n      * @description if the reset password is success then it will directly take to login page\n      */\n      this.router.navigateByUrl('/login');\n    },(error) => {\n      this.snackBar.open(\"failed\",\"failed\", {\n        duration: 2000,\n      });\n    });\n    localStorage.removeItem(\"fundooUserToken\");\n  }\n\n\n /**\n  * \n  * @description converting data to encoded value\n  */\n  getFormUrlEncoded(toConvert) {\n    const formBody = [];\n    for (const property in toConvert) {\n      const encodedKey = encodeURIComponent(property);\n      const encodedValue = encodeURIComponent(toConvert[property]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n    return formBody.join('&');\n   }\n\n /**\n  * \n  * @description unsubscribing\n  */\n   ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","module.exports = \"<app-notes-list [notes]=\\\"notesArray\\\" [searchItem]=message ></app-notes-list>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../core/services/data/data.service';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Note } from '../../core/model/model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-search-notes',\n  templateUrl: './search-notes.component.html',\n  styleUrls: ['./search-notes.component.scss']\n})\nexport class SearchNotesComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor( private data: DataService, private searchService : NotesService ) { }\n\n  private notes:Note[]=[];\n  private message : string;\n  private notesArray=[];\n\n  ngOnInit() {\n    this.getNotes();\n   /**\n    * \n    * @description getting search word\n    */\n    this.data.currentMessageSearch\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(message => {\n      this.message = message;\n    })\n  }\n\n /**\n  * \n  * @description getting user note list\n  */\n  getNotes(){\n    this.searchService.getNoteList()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.notes=response[\"data\"].data\n      this.notesArray=[];\n      for(let i=this.notes.length; i>0 ; i--){\n        if((this.notes[i-1][\"isDeleted\"] == false) && (this.notes[i-1][\"isArchived\"] == false)){\n        this.notesArray.push(this.notes[i-1])\n        }\n      }\n    },(error) =>{\n    });\n  }\n  \n /**\n  * \n  * @description unsubscribing\n  */\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","module.exports = \"<div *ngIf=loader><app-loader></app-loader></div>\\n<div *ngIf='!loader && cartItem.length==0' fxLayoutAlign=\\\"center\\\"><h1>Your Cart is Empty</h1></div>\\n<div *ngIf='!loader && cartItem.length!=0' fxLayoutAlign=\\\"center\\\">\\n\\n<div fxLayout=column fxLayoutGap=5% fxFlex fxLayoutAlign=center fxFlex.xl=70 fxFlex.lg=880px fxFlex.md=750px \\nfxFlex.sm=100 fxFlex.xs=100>\\n  <div></div>\\n  <div fxLayout=row fxFlex=100>\\n    <div fxFlex.xl=20 fxFlex.lg=20 fxFlex.md=20 fxFlex.sm=40 fxFlex.xs=40\\n    fxLayoutAlign=center><div class=fundoo>FundooNotes</div></div>\\n    <div fxFlex.xl=30 fxFlex.lg=30 fxFlex.md=30 fxFlex.sm=40 fxFlex.xs=50 fxLayout=column>\\n      <div fxLayout=row>\\n        <mat-progress-bar *ngIf=shoppingCart class=margin_top10 mode=\\\"determinate\\\" value=0></mat-progress-bar>\\n        <mat-progress-bar *ngIf=review class=margin_top10 mode=\\\"determinate\\\" value=50></mat-progress-bar>\\n        <mat-progress-bar *ngIf=placed class=margin_top10 mode=\\\"determinate\\\" value=100></mat-progress-bar>\\n\\n        <mat-icon *ngIf=shoppingCart class=\\\"icon shoppingCart\\\">shopping_cart</mat-icon>\\n        <mat-icon *ngIf=review class=\\\"icon review\\\">shopping_cart</mat-icon>\\n        <mat-icon *ngIf=placed class=\\\"icon placed\\\">shopping_cart</mat-icon>\\n      </div>\\n      <div fxLayout=row>\\n        <div fxFlex=33 fxLayoutAlign=start class=step class=step>signin</div>\\n        <div fxFlex=33 fxLayoutAlign=center [ngClass]=\\\"placed || review ? 'step' : 'stepNotDone'\\\" >review</div>\\n        <div fxFlex=33 fxLayoutAlign=end [ngClass]=\\\"placed ? 'step' : 'stepNotDone'\\\">complete</div>\\n      </div>\\n    </div>\\n  </div>\\n  <div>\\n\\n      <!-- ****************************First Step Checkout start******************************* -->\\n      <div *ngIf=shoppingCart fxLayout=column>\\n        <div class=margin_15><b>Shopping Cart</b></div>\\n        <mat-divider></mat-divider>\\n        <div fxLayout='row wrap'class=margin_TB_10>\\n          <div class=margin_15 fxFlex.xl=10 fxFlex.lg=10 fxFlex.md=10 fxFlex.sm=10 fxFlex.xs=100>\\n            <div class=details>\\n              <div>${{cartItem.price}} per month</div>\\n              <div> {{product.name}}</div>\\n            </div>\\n          </div>\\n          <div class=margin_15 fxLayout='row' fxLayoutGap=5% fxFlex.xl=50 fxFlex.lg=50 fxFlex.md=50 \\n          fxFlex.sm=50 fxFlex.xs=100>\\n            <div fxLayout=column>\\n              <div class=text_color>{{product.name}} Pack Details</div>\\n              <li><small>{{product.description}}</small></li>\\n            </div>\\n            <div fxLayout=column>\\n              <div><small><b>price</b></small></div>\\n              <div class=text_color>$ {{cartItem.price}}</div>\\n            </div>\\n            <div>\\n              <div fxLayout=column><small><b>validity</b></small></div>\\n              <div class=text_color>per month</div>\\n            </div>\\n          </div>\\n          <div fxLayoutAlign=center class=margin_15 fxFlex.xl=25 fxFlex.lg=25 fxFlex.md=25 fxFlex.sm=25\\n          fxFlex.xs=100 fxLayout=column class=box fxLayoutGap=5%>\\n            <div></div>\\n            <div fxLayoutAlign=center><small>Subtotal(1 item) : ${{cartItem.price}}</small></div>\\n            <div fxLayoutAlign=center><button class=button1 (click)=proceed()>Proceed to Checkout</button></div>\\n          </div>\\n        </div>\\n        <mat-divider></mat-divider>\\n       <div class=\\\"margin_15 color\\\">Subtotal ( 1 item ): ${{cartItem.price}}</div>\\n      </div>\\n      <!-- ****************************First Step Checkout end******************************* -->\\n\\n      <!-- **************************Second Step Order Place start**************************** -->\\n      <div *ngIf=review fxLayout=column>\\n        <div class=margin_15><b>Review your Order</b></div>\\n        <mat-divider></mat-divider>\\n        <div fxLayout='row wrap'fxLayoutGap=3% class=margin_TB_10>\\n          <div class=margin_15 fxFlex.xl=10 fxFlex.lg=10 fxFlex.md=10 fxFlex.sm=100 fxFlex.xs=100>\\n            <div class=details>\\n              <div>${{cartItem.price}} per month</div>\\n              <div> {{product.name}}</div>\\n\\n            </div>\\n          </div>\\n          <div class=margin_15 fxLayout='row' fxLayoutGap=5% fxFlex.xl=50 fxFlex.lg=50 fxFlex.md=50\\n          fxFlex.sm=100 fxFlex.xs=100>\\n            <div fxLayout=column>\\n              <div class=text_color>{{product.name}} Pack Details</div>\\n              <li><small>{{product.description}}</small></li>\\n            </div>\\n            <div fxLayout=column>\\n              <div class=text_color><b>$ {{cartItem.price}}</b></div>\\n              <small>per month</small>\\n            </div>\\n          </div>\\n          <div class=margin_15 fxFlex.xl=25 fxFlex.lg=25 fxFlex.md=25 fxFlex.sm=100 fxFlex.xs=100\\n          fxLayout=column class=box fxLayoutGap=5%>\\n            <div></div>\\n            <div fxLayoutAlign=center><button  class=button1 (click)=place()>Place your Order</button></div>\\n            <div fxLayoutAlign=center><small>Subtotal(1 item) : ${{cartItem.price}}</small></div>\\n          </div>\\n        </div>\\n        <mat-divider></mat-divider>\\n        <div fxLayout=\\\"row wrap\\\" class=margin_15 fxLayoutGap=10%>\\n          <div fxFlex.xl=50 fxFlex.lg=40 fxFlex.md=40 fxFlex.sm=100 fxFlex.xs=100>\\n            <textarea [(ngModel)]=\\\"address\\\" name=\\\"address\\\" id=\\\"address\\\" cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\n          </div>\\n          <div fxFlex.xl=30 fxFlex.lg=40 fxFlex.md=40 fxFlex.sm=100 fxFlex.xs=100>\\n            <div><small>payment method</small></div>\\n            <div class=color>Cash on Delivery</div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- **************************Second Step Order Place end**************************** -->\\n \\n      <!-- **************************Third Step Complete Payment start**************************** -->\\n      <div *ngIf=placed fxLayout=column>\\n        <div class=margin_15><b>Order List</b></div>\\n        <mat-divider></mat-divider>\\n        <div fxLayout='row wrap'fxLayoutGap=3% class=margin_TB_10>\\n          <div class=margin_15 fxFlex.xl=10 fxFlex.lg=10 fxFlex.md=10 fxFlex.sm=100 fxFlex.xs=100>\\n            <div class=details>\\n              <div>${{cartItem.price}} per month</div>\\n              <div> {{product.name}}</div>\\n            </div>\\n          </div>\\n          <div class=margin_15 fxLayout='row' fxLayoutGap=5% fxFlex.xl=70 fxFlex.lg=70 fxFlex.md=70 \\n          fxFlex.sm=100 fxFlex.xs=100>\\n            <div fxLayout=column class=description>\\n              <div class=text_color>{{product.name}} Pack Details</div>\\n              <li><small>{{product.description}}</small></li>\\n            </div>\\n            <div fxLayout=column>\\n              <div class=text_color><b>$ {{cartItem.price}}</b></div>\\n              <small>per month</small>\\n            </div>\\n          </div>\\n        </div>\\n        <div fxLayoutAlign=end class=text_color>{{status}}</div>\\n        <mat-divider></mat-divider>\\n      </div>\\n      <!-- **************************Third Step Complete Payment end**************************** -->\\n\\n  </div>\\n</div>\\n</div>\"","module.exports = \".fundoo {\\n  background-color: #fb0;\\n  border-radius: 10px;\\n  padding: 10px;\\n  color: white;\\n  width: -webkit-min-content;\\n  width: -moz-min-content;\\n  width: min-content; }\\n\\n.transparent {\\n  background-color: transparent; }\\n\\n.margin_TB_10 {\\n  margin: 10px 0px 10px 0px; }\\n\\n@media only screen and (max-width: 699px) {\\n  .details {\\n    font-size: 12px;\\n    padding: 5px;\\n    background-color: #757373;\\n    color: white;\\n    border-radius: 10px;\\n    max-width: 100px; }\\n  .description {\\n    width: 150px; } }\\n\\n@media only screen and (min-width: 700px) {\\n  .details {\\n    font-size: 15px;\\n    padding: 5px;\\n    background-color: #797777;\\n    color: white;\\n    border-radius: 10px;\\n    max-width: 100px; }\\n  .description {\\n    width: 230px; } }\\n\\n.box {\\n  border: 1px solid #a7a7a7;\\n  border-radius: 3px;\\n  padding: 10px; }\\n\\n.text_color {\\n  color: #40a1e2;\\n  font-size: 12px; }\\n\\n.step {\\n  color: #fb0;\\n  font-size: 12px; }\\n\\n.stepNotDone {\\n  color: #928f8f;\\n  font-size: 12px; }\\n\\n.color {\\n  color: #1e8ad1; }\\n\\n.icon {\\n  z-index: 9; }\\n\\n.shoppingCart {\\n  margin-left: -102%; }\\n\\n.review {\\n  margin-left: -55%; }\\n\\n.placed {\\n  margin-left: -5%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../core/services/user/user.service';\nimport { LoggerService } from '../../core/services/logger/logger.service';\nimport { MatSnackBar } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.scss']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor(private shoppingCartService : UserService, private snackBar : MatSnackBar) { }\n\n  private cartId=localStorage.getItem(\"productCartId\");\n  private cartItem;\n  private product:object={};\n  private address='';\n  private status='';\n  private item=[];\n  private shoppingCart=true;\n  private review=false;\n  private placed=false;\n  private loader=true;\n  ngOnInit() {\n    this.getMyCart();\n  }\n  proceed(){\n    this.shoppingCart=false;\n    this.review=true;\n    this.placed=false;    \n  }\n\n /**\n  * \n  * @description getting product details\n  */\n\n /**\n  * \n  * @description getting cart list of user\n  */\n  getMyCart(){\n    this.shoppingCartService.getmyCart()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) => {\n      LoggerService.log(\"res\",response)\n      if(response['data'].length!=0){\n        this.cartItem=response['data'][0];\n        this.product=this.cartItem['product'];\n      }\n      else{\n        this.cartItem=[]\n      }\n      this.loader=false;\n      // if(response['data'].length == 0){\n      //   this.cartItem=[];\n      //   // this.getCardDetails();\n      // }\n      // else{\n      //   this.shoppingCart=false;\n      //   this.review=false;\n      //   this.placed=true; \n      //   this.cartItem=response['data'][0];\n      //   this.product=this.cartItem['product'];\n      //   this.status=response['data'][0].status;\n      //   LoggerService.log(\"product\",this.cartItem)\n      //   localStorage.removeItem(\"productCartId\");\n      // }\n    },(error)=>{\n    });\n  }\n\n /**\n  * \n  * @description order place\n  */\n  place(){\n   /**\n    * \n    * @description the user cant place order without address\n    */\n    if(this.address==''){\n      this.snackBar.open(\"failed\",\"please enter address\", {\n        duration: 2000,\n      });\n      return;\n    }\n    let body={\n      \"cartId\":this.cartId,\n      \"address\":this.address\n    }\n    this.shoppingCartService.placeOrder(body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) => {\n      this.shoppingCart=false;\n      this.review=false;\n      this.placed=true;    \n    },(error)=>{\n    });\n  }\n\n /**\n  * \n  * @description unsubscribing\n  */\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"5%\\\">\\n  <div fxFlex.lg=\\\"2%\\\" fxFlex.md=\\\"0%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n  <div  fxLayout=\\\"row\\\">\\n    <div fxFlex.lg=\\\"27%\\\" fxFlex.md=\\\"10%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n\\n    <div fxFlex.lg=\\\"46%\\\" fxFlex.md=\\\"80%\\\" fxFlex.sm=\\\"100%\\\" fxFlex.xs=\\\"100%\\\">\\n\\n      <!-- ****************************matcard start****************************** -->        \\n      <mat-card>\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n          <div><small (click)=goToCart() class=cart>go to cart</small></div>\\n          <div fxLayoutAlign=\\\"center\\\" class=userPage_header>\\n            <span class=blue>F</span><span class=red>u</span><span class=yellow>n</span>\\n            <span class=blue>d</span><span class=green>o</span><span class=red>o</span>\\n          </div>\\n          <mat-card-title><h5>Create your Fundoo Account</h5></mat-card-title>\\n\\n          <div>\\n              <mat-form-field  class=firstInput>\\n                <input matInput placeholder=\\\"First name\\\" name=\\\"firstname\\\" #firstname=\\\"ngModel\\\" \\n                [(ngModel)]=\\\"model.firstname\\\" pattern=\\\"[a-z ]*\\\" \\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && firstname.invalid }\\\" required>\\n              </mat-form-field>\\n              <mat-form-field class=lastInput>\\n                <input matInput placeholder=\\\"Last name\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\" \\n                [(ngModel)]=\\\"model.lastname\\\" pattern=\\\"[a-z ]*\\\" \\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && lastname.invalid }\\\" required>\\n              </mat-form-field>\\n          </div>\\n              <mat-error *ngIf=\\\"f.submitted && firstname.invalid\\\" >\\n                <mat-error *ngIf=\\\"firstname.errors.required\\\" class=\\\"error\\\">firstname is required</mat-error>\\n                <mat-error *ngIf=\\\"firstname.errors.pattern\\\" class=\\\"error\\\">Invalid firstname</mat-error>\\n              </mat-error>\\n            \\n              <mat-error *ngIf=\\\"f.submitted && lastname.invalid\\\">\\n                <mat-error *ngIf=\\\"lastname.errors.required\\\" class=\\\"error\\\">lastname is required</mat-error>\\n                <mat-error *ngIf=\\\"lastname.errors.pattern\\\" class=\\\"error\\\">Invalid lastname</mat-error>\\n              </mat-error>\\n          \\n\\n          <mat-form-field class=\\\"email\\\"> \\n            <input matInput placeholder=\\\"Email Id\\\" name=\\\"email\\\"#email=\\\"ngModel\\\" \\n            [(ngModel)]=\\\"model.email\\\" pattern=\\\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\" \\n            [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" required >\\n          </mat-form-field>\\n          <mat-error *ngIf=\\\"f.submitted && email.invalid\\\">\\n            <mat-error *ngIf=\\\"email.errors.required\\\" class=\\\"error\\\">email is required</mat-error>\\n            <mat-error *ngIf=\\\"email.errors.pattern\\\" class=\\\"error\\\">Invalid email</mat-error>\\n          </mat-error>\\n\\n          <div>\\n            <mat-form-field class=\\\"firstInput\\\">\\n              <input  matInput placeholder=\\\"Password\\\" name=\\\"password\\\" maxlength=\\\"16\\\" #password=\\\"ngModel\\\" \\n              [(ngModel)]=\\\"model.password\\\" [type]=\\\"hide ? 'text' : 'password'\\\" \\n              minlength=\\\"4\\\"[ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"lastInput\\\">\\n              <input  matInput placeholder=\\\"Confirm password\\\" name=\\\"confpassword\\\" #confpassword=\\\"ngModel\\\" \\n              [(ngModel)]=\\\"model.confpassword\\\" [type]=\\\"hide ? 'text' : 'password'\\\" maxlength=\\\"16\\\" \\n              [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required>\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n            </mat-form-field>\\n          </div>\\n          <mat-error class=\\\"error\\\" *ngIf=\\\"f.submitted && (password.invalid || confpassword.invalid)\\\">\\n            <mat-error *ngIf=\\\"password.errors.required\\\" >password is required</mat-error>\\n            <mat-error *ngIf=\\\"confpassword.errors.required\\\" >conf password is required</mat-error>\\n          </mat-error>\\n\\n\\n          <div fxLayout=row fxLayoutAlign=center fxLayoutGap=\\\"10%\\\">\\n              <div  *ngFor=\\\"let data of card\\\" class=div>\\n              <mat-card  class=notSelected >\\n                \\n                <div fxFlex=column fxLayoutGap=\\\"10%\\\">\\n                    <div class=font_20>price: ${{data.price}} per month</div>\\n                    <div class=blue>{{data.name}}</div>\\n                        <li class=features>${{data.price}}/month</li>\\n                        <li class=features>{{data.description}}</li>\\n                  </div>\\n              </mat-card>\\n              <mat-card [ngClass]=\\\"data.id==cardId ? 'cardSelected' : 'card'\\\">\\n                  <div *ngIf=\\\"data.id==cardId\\\" class=add>SELECTED</div>\\n                  <div *ngIf=\\\"data.id!=cardId\\\" class=add>ADD TO CART</div>\\n              </mat-card>\\n             \\n          </div>\\n         \\n        </div>\\n\\n\\n          <div class=\\\"back\\\" (click)=signin()>Sign in instead</div>\\n          <div fxLayoutAlign=\\\"end\\\"><button mat-button class=mat_button type=\\\"submit\\\" routerLink=\\\".\\\"\\n            (click)=\\\"signup()\\\">Sign Up</button></div>\\n\\n        </form>\\n      </mat-card>\\n      <!-- ****************************matcard end****************************** -->        \\n\\n    </div>\\n\\n    <div fxFlex.lg=\\\"27%\\\" fxFlex.md=\\\"10%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n  </div>\\n  <div fxFlex.lg=\\\"2%\\\" fxFlex.md=\\\"0%\\\" fxFlex.sm=\\\"0%\\\" fxFlex.xs=\\\"0%\\\"></div>\\n</div>\"","module.exports = \"@media only screen and (max-width: 599px) {\\n  .card {\\n    width: 124px;\\n    margin-top: -111%;\\n    padding: 119% 0% 0% 15%;\\n    margin-left: 10%;\\n    background-color: #acacac;\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex; }\\n  .cardSelected {\\n    width: 124px;\\n    margin-top: -111%;\\n    padding: 119% 0% 0% 15%;\\n    margin-left: 10%;\\n    background-color: #fb0;\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex; }\\n  .notSelected {\\n    width: 120px;\\n    z-index: 10;\\n    height: 200px; }\\n  .font_20 {\\n    font-size: 15px; }\\n  .features {\\n    margin-top: 10px;\\n    font-size: 9px; }\\n  .add {\\n    font-size: 10px; } }\\n\\n@media only screen and (min-width: 600px) {\\n  .card {\\n    width: 220px;\\n    margin-top: -72%;\\n    padding: 75% 0% 7% 15%;\\n    margin-left: 10%;\\n    background-color: #acacac;\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex; }\\n  .cardSelected {\\n    width: 220px;\\n    margin-top: -72%;\\n    padding: 75% 0% 7% 15%;\\n    margin-left: 10%;\\n    background-color: #fb0;\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex; }\\n  .notSelected {\\n    width: 220px;\\n    z-index: 10;\\n    height: 200px; }\\n  .font_25 {\\n    font-size: 25px; }\\n  .font_20 {\\n    font-size: 20px; }\\n  .features {\\n    margin-top: 10px;\\n    font-size: 12px; }\\n  .add {\\n    font-size: 17px; } }\\n\\n.cart {\\n  background-color: #727272;\\n  padding: 1%;\\n  border-radius: 2px;\\n  float: right;\\n  color: white;\\n  border: #333232;\\n  cursor: pointer; }\\n\\n.example-container {\\n  max-width: 250px;\\n  width: 100%; }\\n\\n.email {\\n  max-width: 300px;\\n  width: 100%; }\\n\\n.firstInput {\\n  max-width: 250px;\\n  width: 100%; }\\n\\n.lastInput {\\n  margin: 0px 0px 0px 3px;\\n  max-width: 250px;\\n  width: 100%; }\\n\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> signup.component.ts \n *\n *  Purpose         : To signup to a account\n * \n *  @file           : signup.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../core/services/user/user.service';\n\nimport {MatSnackBar} from '@angular/material';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LoggerService } from '../../core/services/logger/logger.service';\nimport { DataService } from '../../core/services/data/data.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\n\nexport class SignupComponent implements OnInit {\n  \n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor(private signupService : UserService,private snackBar: MatSnackBar, private router : Router,\n              private dataService :DataService ){ }\n \n  private service=\"\";\n  public model : any = {\n    \"firstname\":\"\",\n    \"lastname\":\"\",\n    \"email\":\"\",\n    \"password\":\"\",\n    \"confpassword\":\"\"\n  };\n  private card=[];\n  private cardId=\"\";\n  private cartId=localStorage.getItem(\"productCartId\");\n  ngOnInit() {\n    this.getCardDetails();\n    this.getService();\n  }\n\n /**\n  * \n  * @description getting details of cart\n  */\n  getCardDetails(){\n    this.signupService.getCardDetails(this.cartId)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) => {\n      this.cardId=response[\"data\"].product.id;\n    },(error)=>{\n    });\n  }\n\n /**\n  * \n  * @description selecting product\n  */\n  goToCart(){\n    this.router.navigateByUrl('/card');\n  }\n\n /**\n  * \n  * @description getting the service cards\n  */\n  getService(){\n    this.signupService.getService()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) => {\n      for(let i=0;i<response[\"data\"].data.length;i++){\n        response[\"data\"].data[i].select=false;\n        this.card.push(response[\"data\"].data[i]);\n      }\n      for(let j=0;j<this.card.length;j++){\n        if(this.card[j].id==this.cardId)\n          this.service=this.card[j].name;\n      }\n    });\n  }\n\n /**\n  * \n  * @description user signup\n  */\n  signup(){\n   /**\n    * \n    * @description checking the details are filled or not\n    */\n    if(this.model.firstname.length==0 || this.model.lastname.length==0 || this.model.email.length==0 || \n      this.model.password.length==0 || this.model.confpassword.length==0)\n    {\n      this.snackBar.open(\"failed\",\"please fill all the details\", {\n        duration: 2000,\n      });\n      return;\n    }\n   /**\n    * \n    * @description card selection\n    */\n    if(this.service.length==0){\n      this.snackBar.open(\"card is required\",\"select a card\", {\n        duration: 2000,\n      });\n      return;\n    }\n   /**\n    * \n    * @description checking the passwords are matching\n    */\n    if(this.model.password != this.model.confpassword){\n      this.snackBar.open(\"failed\",\"passwords are not matching\", {\n        duration: 2000,\n      });\n      return;\n    }\n\n   /**\n    * \n    * @description validation for names and email\n    */\n    let regexName = /^[a-z]+(([',. -][ a-z])?[a-z]*)*$/;\n    let regexEmail = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n    if(regexName.test(this.model.firstname) == false){\n      this.snackBar.open(\"failed\",\"invalid firstname\", {\n        duration: 2000,\n      });\n      return;\n    }\n    if(regexName.test(this.model.lastname) == false){\n      this.snackBar.open(\"failed\",\"invalid lastname\", {\n        duration: 2000,\n      });\n      return;\n    }\n    if(regexEmail.test(this.model.email) == false){\n      this.snackBar.open(\"failed\",\"invalid email\", {\n        duration: 2000,\n      });\n      return;\n    }\n    let body={\n      \"firstName\" : this.model.firstname,\n      \"lastName\" : this.model.lastname,\n      \"service\": this.service,\n      \"email\": this.model.email,\n      \"password\":this.model.password,\n      \"cartId\":this.cartId\n    }\n    this.signupService.userSignup(body)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n     /**\n      * \n      * @description if the registration is success then it will directly take to login page\n      */\n      this.router.navigateByUrl('/login');\n    },(error) => {\n      this.snackBar.open(\"failed\",\"something bad happened\", {\n        duration: 2000,\n      });\n    });\n  }\n\n /**\n  * \n  * @description already have account\n  */\n  signin(){\n    this.router.navigateByUrl('/login');\n  }\n\n /**\n  * \n  * @description unsubscribing\n  */\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}","module.exports = \"<app-notes-list *ngIf=\\\"spinnerValue==false\\\" [notes]=\\\"trashList\\\" (anyChanges)=onChange($event) ></app-notes-list>\\n<app-loader *ngIf=\\\"spinnerValue==true\\\"></app-loader>\\n\"","module.exports = \"\"","/******************************************************************************\n *  Execution       :   1. default node         cmd> trash.component.ts \n *\n *  Purpose         : To get list of trashed notes\n * \n *  @file           : trash.component.ts\n *  @author         : simani meher\n *  @version        : 1.0\n *  @since          : 19-10-2018\n *\n ******************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { NotesService } from '../../core/services/notes/notes.service';\nimport { Note } from '../../core/model/model';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-trash',\n  templateUrl: './trash.component.html',\n  styleUrls: ['./trash.component.scss']\n})\nexport class TrashComponent implements OnInit {\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  constructor( private trashService : NotesService ) { }\n\n  private notes:Note[]=[];\n  private trashList=[];\n  private spinnerValue=true;\n  ngOnInit() {\n    this.getTrashList();\n  }\n\n  onChange(event){\n    if(event){\n      this.getTrashList();\n    }\n  }\n\n /**\n  * \n  * @description getting the trashed notes list\n  */\n  getTrashList(){\n    this.trashService.getTrashNotes()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response) =>{\n      this.notes=response[\"data\"].data;\n      this.trashList=[];\n      for(let i=this.notes.length;i>0;i--){\n        this.trashList.push(this.notes[i-1])\n      }\n      this.spinnerValue=false;\n    },(error) =>{\n    });\n  }\n\n /**\n  * \n  * @description unsubscribing\n  */\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchNote'\n})\nexport class SearchNotePipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n\n    if(!value)return null;\n    if(!args)return value;\n\n    args = args.toLowerCase();\n\n    return value.filter(function(item){\n      return (JSON.stringify(item.title).toLowerCase().includes(args) || JSON.stringify(item.description).toLowerCase().includes(args));\n    });\n}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n\n    if(!value)return null;\n    if(!args)return value;\n\n    args = args.toLowerCase();\n\n    return value.filter(function(item){\n      return (JSON.stringify(item).toLowerCase().includes(args));\n    });\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate() {\n    if (localStorage.getItem('fundooUserToken')) {\n        return true;\n    }\n    window.location.href=\"/login\";\n    return false;\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DataService {\n\n  private messageSourceSearch = new BehaviorSubject('default');\n  private messageSourceLabel = new BehaviorSubject('default');\n  private messageSourceReminder = new BehaviorSubject('default');\n  private viewSource = new BehaviorSubject(false);\n  private viewHidden = new BehaviorSubject(false);\n  // private messageSourceCard = new BehaviorSubject('default');\n\n  currentMessageSearch = this.messageSourceSearch.asObservable();\n  currentMessageLabel = this.messageSourceLabel.asObservable();\n  currentMessageView = this.viewSource.asObservable();\n  currentMessageReminder = this.messageSourceReminder.asObservable();\n  currentMessageViewHide = this.viewHidden.asObservable();\n  // currentMessageCard = this.messageSourceCard.asObservable();\n\n  constructor() { }\n\n  // changeMessageCard(message: string) {\n  //   this.messageSourceCard.next(message)\n  // }\n  changeMessageSearch(message: string) {\n    this.messageSourceSearch.next(message)\n  }\n  changeMessageLabel(message: string) {\n    this.messageSourceLabel.next(message)\n  }\n  changeMessageReminder(message: string) {\n    this.messageSourceReminder.next(message)\n  }\n  changeView(message: boolean) {\n    this.viewSource.next(message)\n  }\n  hideView(message: boolean) {\n    this.viewHidden.next(message)\n  }\n\n}\n\n","import { ErrorHandler, Injectable} from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable()\nexport class ErrorsHandler implements ErrorHandler {\n  handleError(error: Error | HttpErrorResponse) {   \n  //  if (error instanceof HttpErrorResponse) {\n  //     // Server or connection error happened\n  //     if (!navigator.onLine) {\n  //       // Handle offline error\n  //     } else {\n  //       // Handle Http Error (error.status === 403, 404...)\n  //     }\n  //  } else {\n  //    // Handle Client Error (Angular Error, ReferenceError...)     \n  //  }\n  // Log the error anyway\n  console.error('ERROR : ', error);\n}\n}","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  messaging;\n\n  constructor() {\n    firebase.initializeApp({\n      'messagingSenderId': '263147610417'\n    });\n    \n    this.messaging = firebase.messaging();\n    \n   }\n  getPermission() {\n    this.messaging.requestPermission()\n    .then(() => {\n      return this.messaging.getToken()\n    })\n    .then(token => {\n      localStorage.setItem(\"fundooUserPushToken\",token)\n    })\n    .catch((err) => {\n    });\n  }\n\n  receiveMessage() {\n     this.messaging.onMessage((payload) => {\n    });\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\nconstructor(private http: HttpClient) { }\n\n/**\n *@description post methods\n */\n  postData(path,body){\n    return this.http.post(environment.baseUrl+path,body);\n  }\n  postDataForJSON(path,body){\n    let httpAuthOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(environment.baseUrl+path,body,httpAuthOptions);\n  }\n  postDataForEncoded(path,body){\n    let httpAuthOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n    return this.http.post(environment.baseUrl+path,body,httpAuthOptions);\n  }\n  postDataWithoutToken(path,body){\n    return this.http.post(environment.baseUrl+path,body,{});\n  }\n/*******************************************************************/\n\n/**\n *@description delete methods\n */\n  deleteData(path){\n    return this.http.delete(environment.baseUrl+path);\n  }\n/*******************************************************************/\n\n/**\n *@description get methods\n */\n  getData(path){\n    return this.http.get(environment.baseUrl+path,{});\n  }\n  getData2(path){\n    let httpAuthOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.get(environment.baseUrl+path,httpAuthOptions);\n  }\n/*******************************************************************/\n\n}\n","import { Injectable } from '@angular/core';\nimport {  \n  HttpEvent, \n  HttpInterceptor, \n  HttpHandler, \n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { catchError,tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptService implements HttpInterceptor{\n\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler):Observable<HttpEvent<any>> {\n\t  request = request.clone({\n\t    setHeaders: {\n\t      Authorization: `${localStorage.getItem('fundooUserToken')}`\n\t    }\n\t  });\n\t  return next.handle(request)\n\t  .pipe(tap(event => {\n      // if (event instanceof HttpResponse) {\n\t    // }\n\t  }, error => {\n\t  }))\n  };\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n\n  constructor() { }\n  static log(msg : String , obj = {} ): void{\n    console.log(msg, obj);\n  }\n  static error(msg : String , obj = {} ): void{\n    console.error(msg, obj);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotesService {\n  constructor( private service: HttpService ) { }\n\n  \n/*******************Notes*****************/\n  updateNotes(body){\n    return this.service.postDataForJSON(\"/notes/updateNotes\",body);\n  }\n  addNote(body){\n    return this.service.postDataForEncoded(\"/notes/addNotes\",body);\n  }\n  deleteNote(body){\n    return this.service.postDataForJSON(\"/notes/trashNotes\",body);\n  }\n  permanentDeleteNote(body){\n    return this.service.postDataForJSON(\"/notes/deleteForeverNotes\",body);\n  }\n  getNoteList(){\n    return this.service.getData2(\"/notes/getNotesList\");\n  }\n/***********************************************/\n\n\n/***************archive***********************/\n  archiveNote(body){\n    return this.service.postDataForJSON(\"/notes/archiveNotes\",body);\n  }\n  getArchivedList(){\n    return this.service.getData2(\"/notes/getArchiveNotesList\");\n  }\n/**********************************************/\n\n\n/*********************Label********************/\n  removeLabelFromNotes(cardId,labelId){\n    return this.service.postDataForJSON(\"/notes/\"+cardId+\"/addLabelToNotes/\"+labelId+\"/remove\",{});\n  }\n  addLabelToNotes(cardId,labelId){\n    return this.service.postDataForJSON(\"/notes/\"+cardId+\"/addLabelToNotes/\"+labelId+\"/add\",{});\n  }\n  showNoteLabels(){\n    return this.service.getData2(\"/noteLabels/getNoteLabelList\");\n  }\n  deleteLabel(labelId){\n    return this.service.deleteData(\"/noteLabels/\"+labelId+\"/deleteNoteLabel\");\n  }\n  updateLabel(labelId,body){\n    return this.service.postDataForJSON(\"/noteLabels/\"+labelId+\"/updateNoteLabel\",body);\n  }\n  createLabel(body){\n    return this.service.postDataForJSON(\"/noteLabels\",body);\n  }\n  getNotelistByLabel(label){\n    return this.service.postDataForJSON(\"/notes/getNotesListByLabel/\"+label,{});\n  }\n/*******************************************/\n\n\n/******************CheckList*****************/\n  updateCheckList(noteId,listId,body){\n    return this.service.postDataForJSON(\"/notes/\"+noteId+\"/checklist/\"+listId+\"/update\",body);\n  }\n  addCheckList(noteId,body){\n    return this.service.postDataForJSON(\"/notes/\"+noteId+\"/checklist/add\",body);\n  }\n  removeChecklist(noteId,listId){\n    return this.service.postDataForJSON(\"/notes/\"+noteId+\"/checklist/\"+listId+\"/remove\",{});\n  }\n/********************************************/\n\n  cardColorChange(body){\n    return this.service.postDataForJSON(\"/notes/changesColorNotes\",body);\n  }\n  pinChange(body){\n    return this.service.postDataForJSON(\"/notes/pinUnpinNotes\",body);\n  }\n  getTrashNotes(){\n    return this.service.getData2(\"/notes/getTrashNotesList\");\n  }\n\n  addUpdateReminder(body){\n    return this.service.postDataForJSON(\"/notes/addUpdateReminderNotes\",body);\n  }\n\n  removeReminder(body){\n    return this.service.postDataForJSON(\"/notes/removeReminderNotes\",body);\n  }\n  getRemindersLIst(){\n    return this.service.getData2(\"/notes/getReminderNotesList\");\n  }\n  addColaborator(body,id){\n    return this.service.postDataForJSON(\"/notes/\"+id+\"/AddcollaboratorsNotes\",body);\n  }\n  removeColaborator(noteId,userId){\n    return this.service.deleteData(\"/notes/\"+noteId+\"/removeCollaboratorsNotes/\"+userId);\n  }\n  getNoteById(id){\n    return this.service.getData2(\"/notes/getNotesDetail/\"+id);\n  }\n  addAQuestion(body){\n    return this.service.postDataForJSON(\"/questionAndAnswerNotes/addQuestionAndAnswer\",body);\n  }\n  addLike(body,parentId){\n    return this.service.postDataForJSON(\"/questionAndAnswerNotes/like/\"+parentId,body);\n  }\n  addReply(body,parentId){\n    return this.service.postDataForJSON(\"/questionAndAnswerNotes/reply/\"+parentId,body);\n  }\n  addrating(body,parentId){\n    return this.service.postDataForJSON(\"/questionAndAnswerNotes/rate/\"+parentId,body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  constructor( private service: HttpService ) { }\n\n  forgotPassword(body){\n    return this.service.postDataWithoutToken(\"/user/reset\",body);\n  }\n  userLogin(body){\n    return this.service.postDataWithoutToken(\"/user/login\",body);\n  }\n  pushLogin(body){ \n    return this.service.postDataForJSON(\"/user/registerPushToken\",body);\n  }\n  userLogout(){\n    return this.service.postDataForJSON(\"/user/logout\",{});\n  }\n  addProfileImage(body){\n    return this.service.postData('/user/uploadProfileImage',body);\n  }\n  resetPassword(body){\n    return this.service.postDataForEncoded(\"/user/reset-password\",body);\n  }\n  getService(){\n    return this.service.getData(\"/user/service\");\n  }\n  userSignup(body){\n    return this.service.postDataWithoutToken(\"/user/userSignUp\",body);\n  }\n  searchUserList(body){\n    return this.service.postDataForJSON(\"/user/searchUserList\",body);\n  }\n  addToCart(body){\n    return this.service.postDataWithoutToken(\"/productcarts/addToCart\",body);\n  }\n  getCardDetails(cartId){\n    return this.service.getData(\"/productcarts/getCartDetails/\"+cartId);\n  }\n  placeOrder(body){\n    return this.service.postDataForJSON(\"/productcarts/placeOrder\",body);\n  }\n  getmyCart(){\n    return this.service.getData(\"/productcarts/myCart\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  baseUrl:\"http://fundoonotes.incubation.bridgelabz.com/api\",\n  Url:\"http://fundoonotes.incubation.bridgelabz.com/\",\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}
